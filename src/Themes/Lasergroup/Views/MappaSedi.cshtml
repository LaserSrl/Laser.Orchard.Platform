@using Orchard.Projections.Services;

@{
    int page = 1;
    int pageSize = Model.ContentItem.ProjectionPart.Record.Items;

    var services = WorkContext.Resolve<IProjectionManager>();
    var queryId = Model.ContentItem.ProjectionPart.Record.QueryPartRecord.Id;
    var queryItems = services.GetContentItems(queryId, (page - 1) * pageSize, pageSize);
}

<div id="gmap"></div>
@{
    Script.Require("GoogleMapsAPI").AtHead();
}


@using (Script.Foot()) {
    <script type="text/javascript">
        var map;
        var marker;
        initMap();
        async function initMap() {
            const { Map } = await google.maps.importLibrary("maps");
            map = Map(document.getElementById('gmap'), {
                zoom: 9,
                center: {lat: 45.595034, lng: 7.535305},
                draggable: true,
                scrollwheel: false,
                styles: [{"featureType": "all", "elementType": "labels", "stylers": [{"visibility": "simplified"}]}, {"featureType": "all", "elementType": "labels.text", "stylers": [{"color": "#444444"}]}, {"featureType": "administrative.country", "elementType": "all", "stylers": [{"visibility": "simplified"}]}, {"featureType": "administrative.country", "elementType": "geometry", "stylers": [{"visibility": "simplified"}]}, {"featureType": "administrative.province", "elementType": "all", "stylers": [{"visibility": "off"}]}, {"featureType": "administrative.locality", "elementType": "all", "stylers": [{"visibility": "simplified"}, {"saturation": "-100"}, {"lightness": "30"}]}, {"featureType": "administrative.neighborhood", "elementType": "all", "stylers": [{"visibility": "off"}]}, {"featureType": "administrative.land_parcel", "elementType": "all", "stylers": [{"visibility": "off"}]}, {"featureType": "landscape", "elementType": "all", "stylers": [{"visibility": "simplified"}, {"gamma": "0.00"}, {"lightness": "74"}]}, {"featureType": "landscape", "elementType": "geometry", "stylers": [{"color": "#ffffff"}]}, {"featureType": "poi", "elementType": "all", "stylers": [{"visibility": "off"}]}, {"featureType": "road", "elementType": "geometry", "stylers": [{"visibility": "simplified"}, {"color": "#ff0000"}, {"saturation": "-15"}, {"lightness": "40"}, {"gamma": "1.25"}]}, {"featureType": "road", "elementType": "labels", "stylers": [{"visibility": "off"}]}, {"featureType": "transit", "elementType": "labels", "stylers": [{"visibility": "simplified"}]}, {"featureType": "transit", "elementType": "labels.icon", "stylers": [{"visibility": "off"}]}, {"featureType": "transit.line", "elementType": "geometry", "stylers": [{"color": "#ff0000"}, {"lightness": "80"}]}, {"featureType": "transit.station", "elementType": "geometry", "stylers": [{"color": "#e5e5e5"}]}, {"featureType": "water", "elementType": "geometry", "stylers": [{"color": "#efefef"}]}, {"featureType": "water", "elementType": "labels", "stylers": [{"visibility": "off"}]}]
            });

            @foreach (var item in queryItems) {
        <text>

            marker = new google.maps.Marker({
                position: {lat: @item.Sede.Latitudine.Value.ToString().Replace(',', '.'), lng: @item.Sede.Longitudine.Value.ToString().Replace(',', '.')},
                map: map,
                title: '@item.Sede.TestoMappa.Value'
            });
            marker.setMap(map);
            </text>
        }

        }
    </script>
}
