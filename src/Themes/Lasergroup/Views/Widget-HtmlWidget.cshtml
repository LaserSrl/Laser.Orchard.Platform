@using Orchard.ContentManagement
@using Orchard.Widgets.Models
@{
    dynamic item = Model.ContentItem;
    string tipoContenuto = item.HtmlWidget != null && item.HtmlWidget.Specializzazione!=null ? item.HtmlWidget.Specializzazione.Value : "";
}
@switch (tipoContenuto) {
    case "Footer Logo":
        @Display(New.HtmlQuad_First(ContentItem: item));
        break;
    case "Footer Social":
        @Display(New.HtmlSocial(ContentItem: item));
        break;
    case "Footer Testo":
        @Display(New.HtmlFooter(ContentItem: item));
        break;
    default: {
            Model.Metadata.Wrappers.Clear();
            var widgetPart = ((IContent)Model.ContentItem).As<WidgetPart>();
            Model.Classes.Add(tipoContenuto.ToLower().Trim(new char[] { '(', ')' }).Replace(" ", "-"));
            var tag = Tag(Model, "article");
            @tag.StartElement
            if ((widgetPart.RenderTitle && HasText(widgetPart.Title)) || Model.Header != null) {
                <header>
                    @if ((widgetPart.RenderTitle && HasText(widgetPart.Title))) {
                        <h3>@widgetPart.Title</h3>
                    }
                    @Display(Model.Header)
                </header>
            }
            @Display(Model.Content)
            if (Model.Footer != null) {
                <footer>
                    @Display(Model.Footer)
                </footer>
            }
            @tag.EndElement
            break;
        }
}
