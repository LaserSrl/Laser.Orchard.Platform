@*
    Call this as:
      @Display.PasswordChangeForm(
          LoggedUser:boolean //If LoggedUser is true, it asks for the current password.
      )
*@
@{
    var requirementsMessage = T.Plural("The password can't be empty", "Passwords are required to be a minimum of {0} characters in length", (int)ViewData["PasswordLength"]).Text;
    var additionalRequirementsMessage = new List<string>();
    if ((bool)ViewData["LowercaseRequirement"]) {
        additionalRequirementsMessage.Add(T("one lowercase letter").Text);
    }
    if ((bool)ViewData["UppercaseRequirement"]) {
        additionalRequirementsMessage.Add(T("one uppercase letter").Text);
    }
    if ((bool)ViewData["NumberRequirement"]) {
        additionalRequirementsMessage.Add(T("one number").Text);
    }
    if ((bool)ViewData["SpecialCharacterRequirement"]) {
        additionalRequirementsMessage.Add(T("one special character").Text);
    }
    if (additionalRequirementsMessage.Count() > 0) {
        requirementsMessage = T("{0} and must contain at least {1}", requirementsMessage, string.Join(", ", additionalRequirementsMessage)).Text;
    }
    requirementsMessage += ".";
}
<div class="container mb30">
    @Html.ValidationSummary(T("Password change was unsuccessful. Please correct the errors and try again.").ToString(), new { @class = "alert alert-danger", @role = "alert" })
</div>

<div class="container">
    <div class="row pb30">
        <div class="col-lg-6 ml-auto mr-auto col-md-8 col-sm-10">
            <h3 class="mb30">@Html.TitleForPage(T("Change Password").ToString())</h3>
            <div class="">
                <p class="lead">@T("Use the form below to change your password.")</p>
                <p>@requirementsMessage</p>
            </div>

            @using (Html.BeginFormAntiForgeryPost()) {
                <div class="row">
                    <div class="col-xs-12 col-sm-12">
                        <fieldset>
                            @if (Model.LoggedUser) {
                                <div class="form-group">
                                    @Html.Password("currentPassword", "", new { @class = "form-control", @placeholder = T("Current password") })
                                    @Html.ValidationMessage("currentPassword")
                                </div>
                            }
                            <div class="form-group">
                                @Html.Password("newPassword", "", new { @class = "form-control", @placeholder = T("New password") })
                                @Html.ValidationMessage("newPassword")
                            </div>
                            <div class="form-group">
                                @Html.Password("confirmPassword", "", new { @class = "form-control", @placeholder = T("Confirm new password") })
                                @Html.ValidationMessage("confirmPassword")
                            </div>
                            <div class="form-group">
                                <button type="submit" class="primaryAction btn submit">@T("Change Password")</button>
                            </div>
                        </fieldset>
                    </div>
                </div>
            }

            @if (Model.LoggedUser && ViewData["InvalidateOnPasswordChange"] != null && (bool)ViewData["InvalidateOnPasswordChange"]) {
                <div class="account-links">
                    <p class="text-center">@T("After changing the password you will be required to login anew.")</p>
                </div>
            }
        </div>
    </div>
</div>