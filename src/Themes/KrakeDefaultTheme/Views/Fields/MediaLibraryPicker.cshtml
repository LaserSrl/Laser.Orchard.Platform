@using Orchard.ContentManagement
@using Orchard.MediaLibrary.Fields
@using Orchard.Utility.Extensions;

@{
    var field = (MediaLibraryPickerField)Model.ContentField;
    string name = field.DisplayName;
    var contents = field.MediaParts;
    var subthemePath = Url.Content("~/Themes/IvreaMontalto/Styles");
    var documentPath = Url.Content("~/Themes/KrakeDefaultTheme/Styles/images/documento.png");
    var videoPath = Url.Content("~/Themes/KrakeDefaultTheme/Styles/images/video.png");
    var audioPath = Url.Content("~/Themes/KrakeDefaultTheme/Styles/images/audio.png");

    Script.Require("jQueryColorBox").AtHead();
    Style.Require("jQueryColorBox").AtHead();
}
<script>
    $(document).ready(function () {
        //Examples of how to assign the Colorbox event to elements
        $(".group1").colorbox({ rel: 'group1' });
        $(".group2").colorbox({ rel: 'group2', transition: "fade" });
        $(".group3").colorbox({ rel: 'group3', transition: "none", width: "75%", height: "75%" });
        $(".group4").colorbox({ rel: 'group4', slideshow: true });
        $(".ajax").colorbox();
        $(".youtube").colorbox({ iframe: true, innerWidth: 640, innerHeight: 390 });
        $(".vimeo").colorbox({ iframe: true, innerWidth: 500, innerHeight: 409 });
        $(".iframe").colorbox({ iframe: true, width: "80%", height: "80%" });
        $(".inline").colorbox({ inline: true, width: "50%" });
        $(".callbacks").colorbox({
            onOpen: function () { alert('onOpen: colorbox is about to open'); },
            onLoad: function () { alert('onLoad: colorbox has started to load the targeted content'); },
            onComplete: function () { alert('onComplete: colorbox has displayed the loaded content'); },
            onCleanup: function () { alert('onCleanup: colorbox has begun the close process'); },
            onClosed: function () { alert('onClosed: colorbox has completely closed'); }
        });

        $('.non-retina').colorbox({ rel: 'group5', transition: 'none' })
        $('.retina').colorbox({ rel: 'group5', transition: 'none', retinaImage: true, retinaUrl: true });

        //Example of preserving a JavaScript event for inline calls.
        $("#click").click(function () {
            $('#click').css({ "background-color": "#f00", "color": "#fff", "cursor": "inherit" }).text("Open this window again and this message will still be here.");
            return false;
        });

        //var x = '900px';
        //var x = "" + screen.height + 'px';

 
        var dialogMaxHeight = Math.round($(window).height() - ($(window).height() / 10));
        var dialogMaxHeightPx = "" + dialogMaxHeight + 'px';

        $(".group1").colorbox({ rel: 'group1', maxHeight: dialogMaxHeightPx });

        //$(".group1").colorbox({ rel: 'group1', maxHeigth: '70px' });

        $('.group1').colorbox({
            onComplete: function () {
                $(this).colorbox.resize();
            }
        });
    });
</script>
<section class="media-library-picker-field media-library-picker-field-@name.HtmlClassify()">
    @if (contents.Count() > 0) {
        <h3 class="gallery-title">@name</h3>
    }
    <div class="container gallery">
        <div class="row">
            @foreach (var content in contents) {
                <div class="col-lg-3 col-md-4 col-6 thumb text-center">

                    @switch (content.LogicalType) {
                    case "Image":
                            <a class="group1 cboxElement" href="@content.MediaUrl" title="@content.Title">
                                <img class="thunb-img" src="@Display.ResizeMediaUrl(Width: 200, Height: 200, Mode: "crop", Alignment: "middlecenter", Path: content.MediaUrl)" alt="@content.AlternateText" style="opacity: 1;">
                            </a>
                            break;
                        case "Document":
                            <a class="thunb-media" href="@content.MediaUrl" title="@content.Title">
                                <img class="img-fluid" src="@documentPath" alt="doc" />
                            </a>
                            break;
                        case "Audio":
                            <a class="thunb-media" href="@content.MediaUrl" title="@content.Title">
                                <img class="thunb-media" src="@audioPath" alt="doc" />
                            </a>
                            break;
                        case "Video":
                            <a class="thunb-media" href="@content.MediaUrl" title="@content.Title">
                                <img class="thunb-media" src="@videoPath" alt="doc" />
                            </a>
                            break;
                        default:
                            <a class="thunb-media" href="@content.MediaUrl" title="@content.Title">
                                <img class="thunb-media" src="@documentPath" alt="doc" />
                            </a>
                            break;
                    }
                    <label class="thunb-text">@cutExtension(content.FileName)</label>
                </div>
            }
        </div>
    </div>

</section>
<div style="display: none">
    <div style="padding: 10px; background: #fff;" id="inline_content">
        <p><strong>This content comes from a hidden element on this page.</strong></p>
        <p>The inline option preserves bound JavaScript events and changes, and it puts the content back where it came from when it is closed.</p>
        <p><a style="padding: 5px; background: #ccc;" href="#" id="click">Click me, it will be preserved!</a></p>

        <p><strong>If you try to open a new Colorbox while it is already open, it will update itself with the new content.</strong></p>
        <p>
            Updating Content Example:<br>
            <a href="../content/ajax.html" class="ajax cboxElement">Click here to load new content</a>
        </p>
    </div>
</div>
<div id="cboxOverlay" style="opacity: 0; cursor: pointer; visibility: visible; display: none;"></div>
<div id="colorbox" class="" role="dialog" tabindex="-1" style="display: none; visibility: visible; top: 205px; left: 269px; position: absolute; width: 742px; height: 513px; opacity: 0;">
    <div id="cboxWrapper" style="height: 513px; width: 742px;">
        <div>
            <div id="cboxTopLeft" style="float: left;"></div>
            <div id="cboxTopCenter" style="float: left; width: 700px;"></div>
            <div id="cboxTopRight" style="float: left;"></div>
        </div>
        <div style="clear: left;">
            <div id="cboxMiddleLeft" style="float: left; height: 471px;"></div>
            <div id="cboxContent" style="float: left; width: 700px; height: 471px;">
                <div id="cboxTitle" style="float: left; display: block;">Me and my grandfather on the Ohoopee.</div>
                <div id="cboxCurrent" style="float: left; display: block;">image 1 of 3</div>
                <button type="button" id="cboxPrevious" style="display: block;">previous</button>
                <button type="button" id="cboxNext" style="display: block;">next</button>
                <button type="button" id="cboxSlideshow" style="display: none;"></button>
                <div id="cboxLoadingOverlay" style="float: left; display: none;"></div>
                <div id="cboxLoadingGraphic" style="float: left; display: none;"></div>
                <button type="button" id="cboxClose">close</button>
            </div>
            <div id="cboxMiddleRight" style="float: left; height: 471px;"></div>
        </div>
        <div style="clear: left;">
            <div id="cboxBottomLeft" style="float: left;"></div>
            <div id="cboxBottomCenter" style="float: left; width: 700px;"></div>
            <div id="cboxBottomRight" style="float: left;"></div>
        </div>
    </div>
    <div style="position: absolute; width: 9999px; visibility: hidden; max-width: none; display: none;"></div>
</div>

@functions{
        public string cutExtension(string name) {
            return name.Substring(0, name.Length - 4);
        }
}