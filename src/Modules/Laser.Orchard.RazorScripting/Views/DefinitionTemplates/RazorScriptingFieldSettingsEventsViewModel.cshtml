@model  Laser.Orchard.RazorScripting.ViewModels.RazorScriptingFieldSettingsEventsViewModel
@Display.TokenHint()
<span class="hint">
    @T("In all scripts for this field, you can use Model.ContentItem, Model.OrchardServices, Model.T(), Model.Tokens.")
</span>
<fieldset>
    <label for="@Html.FieldIdFor(m => m.Settings.GetEditorScript)">@T("Editor Build script")</label>
    <div>
        @Html.TextAreaFor(m => m.Settings.GetEditorScript, new { @class = "text medium", rows = "5" })
        <span class="hint">
            @T("The script to run everytime the content item is building its editor shape. If the script returns a NOT empty string, it will be used to notify the backend user.")
        </span>
    </div>
</fieldset>
<fieldset>
    <label for="@Html.FieldIdFor(m => m.Settings.PostEditorScript)">@T("Editor Update script")</label>
    <div>
        @Html.TextAreaFor(m => m.Settings.PostEditorScript, new { @class = "text medium", rows = "5" })
        <span class="hint">
            @T("The script to run everytime the content item is edited (saved/published). If the script returns a NOT empty string, it will be interpreted as a validation error.")
        </span>
    </div>
</fieldset>
<fieldset>
    <label for="@Html.FieldIdFor(m => m.Settings.DisplayScript)">@T("Display script")</label>
    <div>
        @Html.TextAreaFor(m => m.Settings.DisplayScript, new { @class = "text medium", rows = "5" })
        <span class="hint">
            @T("The script to run everytime the content item is about to be displayed. IMPORTANT NOTE: this includes every attempt to display the content, so also summaries in the backend. If the script returns a NOT empty string, it will be logged as an error.")
        </span>
    </div>
</fieldset>