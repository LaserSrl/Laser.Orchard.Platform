@using Laser.Orchard.NwazetIntegration.ViewModels;
@model CheckoutViewModel
@{

    var title = Layout.Title = Model.ShippingAddressVM != null
        ? T("Checkout: Shipping & Billing Addresses")
        : T("Checkout: Billing Address");
    Script.Require("NwazetIntegration.Addresses");
    using (Script.Foot()) {
        <script type="text/javascript">
            var requiredFormat = "@T("{0} is required.")",
                required = "@T("Required information")";
        </script>
    }
}
<h1>@title</h1>
<div class="ship-errors checkout-errors"></div>
@Html.ValidationSummary()
<div class="cart-summary">
    @Display.CheckoutCartSummary(ViewModel: Model)
</div>

@using (Html.BeginFormAntiForgeryPost(
    Url.Action("Index"), FormMethod.Post, new { @id = "address-form" })) {

    if (Model.ShippingRequired) {
        if (Model.AdditionalShippingAddressShapes != null
            && Model.AdditionalShippingAddressShapes.Any()) {
                    @*
                    When pickup points are enabled here we have a tabulated UI that allows user to
                        select between their own addresses and one of the configured pickup points.
                        Either way to configure the shipping "destination" should on principle be
                        controlled by its own shapes.
                        The first tab is always the one for the shipping address, same as if we didn't
                        have the pickup points. The other tabs are injected dynamically.
                    *@
                    <nav>
                      <div class="nav nav-tabs address-tab-headers" id="nav-tab" role="tablist">
                        <a class="nav-item nav-link active" 
                           id="nav-shipping-address" data-toggle="tab" 
                           href="#nav-shipping" role="tab" 
                           aria-controls="nav-shipping" aria-selected="true">
                          <h2>@T("Shipping Address")</h2>
                        </a>
                          @foreach (var asas in Model.AdditionalShippingAddressShapes) {
                            <a class="nav-item nav-link" 
                               id="@asas.TabId" 
                               data-toggle="tab" 
                               href="#@asas.NavId" 
                               role="tab" 
                               aria-controls="@asas.NavId" 
                               aria-selected="false"><h2>@asas.TabTitle</h2></a>
                          }
                        
                      </div>
                    </nav>

                    <div class="tab-content" id="nav-tabContent">
                      <div class="tab-pane fade show active" 
                           id="nav-shipping" 
                           role="tabpanel" 
                           aria-labelledby="nav-shipping-address">
                          
                            <fieldset class="shipping-address">
                                
                                @Display.AddressForm(
                                    Prefix: "shippingAddressVM",
                                    Address: Model.ShippingAddressVM,
                                    IncludeCountry: true,
                                    ListAddress:Model.ListAvailableShippingAddress)
                            </fieldset>

                            <fieldset class="toggle-billing">
                                <input id="toggle-billing-address" type="checkbox" />
                                <label for="toggle-billing-address" class="for-checkbox">@T("Bill me at the shipping address.")</label>
                            </fieldset>
                          @* additionally, when we are not on this tab, deselect the 
                              BillAtSameShippingAddress flag *@
                          @using (Script.Foot()) {
                              <script type="text/javascript">
                                  $('#nav-shipping-address')
                                      .on('hidden.bs.tab', function (e) {

                                          // unflag BillAtSameShippingAddress
                                          var $hiddenTab = $(e.currentTarget); // this is the tab that is getting hidden
                                          var hiddenPaneId = $hiddenTab.attr("href");
                                          var $hiddenPane = $(hiddenPaneId);
                                          var $checkBox = $hiddenPane.find('#toggle-billing-address');
                                          // set the checked property to false
                                          var oldValue = $checkBox.prop("checked");
                                          $checkBox.prop("checked", false);
                                          if (oldValue) {
                                              // if the checkbox was checked, now it has changed,
                                              // so trigger the events
                                              $checkBox.trigger("change");
                                          }
                                      });
                              </script>
                          }
                        </div>
                         @foreach (var asas in Model.AdditionalShippingAddressShapes) {
                              <div class="tab-pane fade" 
                                   id="@asas.NavId" 
                                   role="tabpanel" 
                                   aria-labelledby="@asas.TabId">
                                  @Display(asas.TabShape)
                              </div>
                         }
                      
                    </div>
        } else {
            <fieldset class="shipping-address">
                <legend>@T("Shipping Address")</legend>
                @Display.AddressForm(
                    Prefix: "shippingAddressVM",
                    Address: Model.ShippingAddressVM,
                    IncludeCountry: true,
                    ListAddress:Model.ListAvailableShippingAddress)
            </fieldset>

            <fieldset class="toggle-billing">
                <input id="toggle-billing-address" type="checkbox" />
                <label for="toggle-billing-address" class="for-checkbox">@T("Bill me at the shipping address.")</label>
            </fieldset>
        }
    }
    <fieldset class="billing-address">
        <legend>@T("Billing Address")</legend>
        @Display.AddressForm(
            Prefix: "billingAddressVM",
            Address: Model.BillingAddressVM,
            IncludeCountry: true,
            ListAddress: Model.ListAvailableBillingAddress)
    </fieldset>

    <label for="@Html.Id("Email")">@T("e-mail")</label>
    <input id="@Html.Id("Email")" type="text" name="@Html.Name("Email")" value="@Model.Email" class="input-large required" />
    <div class="hint">@T("Please provide an e-mail address for us to use in order to give you updates on your order.")</div>

    <label for="@Html.Id("PhonePrefix")">@T("International Phone Prefix")</label>
    <input id="@Html.Id("PhonePrefix")" type="text" name="@Html.Name("PhonePrefix")" value="@Model.PhonePrefix" class="input-large" />
    <div class="hint"> @T("Please provide an international phone prefix, For example +39 for Italy")</div>
    <label for="@Html.Id("Phone")">@T("Phone")</label>
    <input id="@Html.Id("Phone")" type="text" name="@Html.Name("Phone")" value="@Model.Phone" class="input-large" />
    <div class="hint">@T("Please provide a phone number where we can reach you in case we need additional information. This is also required when shipping to some countries.")</div>

    <label for="@Html.Id("specialInstructions")">@T("Special Instructions")</label>
    @Html.TextAreaFor(m => m.SpecialInstructions, new { rows = "6", cols = "80", @class="input-xxlarge"})

    <div>
        <a href="@Url.Action("Index", "ShoppingCart", new { area = "Nwazet.Commerce"})">@T("Back to cart")</a>
        @*<button type="submit" id="cartButton" name="Submit" value="cart" style="padding: 10px 10px">@T("Back to cart")</button>*@
        <button type="submit" name="Submit" value="save" style="padding: 10px 10px">@T("Next")</button>
    </div>
}