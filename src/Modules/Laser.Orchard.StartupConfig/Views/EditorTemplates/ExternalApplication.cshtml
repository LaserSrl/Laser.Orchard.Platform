@using Laser.Orchard.StartupConfig.WebApiProtection.Models;

@model Laser.Orchard.StartupConfig.WebApiProtection.Models.ExternalApplication
@{ MvcHtmlString answerBlock = Html.UniqueClientId("externalapplication"); }
@{
    var appId = "phNum_" + answerBlock;

    var genKeyDivId = "genkey_" + appId;
}
<div id="@appId" class="j_extapp">
    <fieldset>
        <br />
        @Html.HiddenFor(m => m.Delete, new { @class = "ph-mark-for-delete" })
        @Html.TextBoxFor(m => m.Name, new { placeholder = T("Name"), @class = "text medium" })
        @Html.DropDownListFor(m => m.ValidationType, new SelectList(Enum.GetValues(typeof(ApiValidationTypes)), Model.ValidationType))
        @Html.TextBoxFor(m => m.ApiKey, new { placeholder = T("Api Secret Key"), @class = "text medium" })
        <i class="fa fa-times" style="color: red"></i>
        @Html.LinkToRemoveNestedForm(T("Remove").Text, ".j_extapp", "input.ph-mark-for-delete")
        <br />
        <div id="@genKeyDivId">
            @Html.CheckBoxFor(m => m.EnableTimeStampVerification) @Html.LabelFor(m => m.EnableTimeStampVerification, T("Verify TimeStamp").Text, new { @class = "forcheckbox" })
            @Html.TextBoxFor(m => m.Validity, new { placeholder = T("Validity in minutes"), @class = "text small" })
            <a class="button" onclick="javascript:var key=randomString(22);$('#@Html.FieldIdFor(m => m.ApiKey)').val(key);return(false);">@T("Generate")</a>
        </div>
    </fieldset>
</div>

<script type="text/javascript">
    $(function () {
        ValidationType@(appId)_change();

        $("#@Html.FieldIdFor(m => m.ValidationType)").change(function () {
            ValidationType@(appId)_change();
        });
    });

    function ValidationType@(appId)_change () {
        switch ($("#@Html.FieldIdFor(m => m.ValidationType)").val()) {
            case "ApiKey":
                $("#@Html.FieldIdFor(m => m.ApiKey)").attr("placeholder", "@T("Api Secret Key")");
                $("#@genKeyDivId").show();
                break;

            case "Website":
                $("#@Html.FieldIdFor(m => m.ApiKey)").attr("placeholder", "@T("Website urls, separated by comma. Each entry must start with its protocol (e.g.: 'http://')")");
                $("#@genKeyDivId").hide();
                break;

            case "IpAddress":
                $("#@Html.FieldIdFor(m => m.ApiKey)").attr("placeholder", "@T("Ip addresses, separated by comma")");
                $("#@genKeyDivId").hide();
                break;

            default:
                break;
        }
    }

</script>
