{"version":3,"file":"splide.js","sources":["../../src/js/constants/project.ts","../../src/js/constants/states.ts","../../src/js/constants/priority.ts","../../src/js/utils/array/empty/empty.ts","../../src/js/utils/type/type.ts","../../src/js/utils/array/toArray/toArray.ts","../../src/js/utils/array/forEach/forEach.ts","../../src/js/utils/array/includes/includes.ts","../../src/js/utils/array/push/push.ts","../../src/js/utils/array/index.ts","../../src/js/utils/arrayLike/slice/slice.ts","../../src/js/utils/arrayLike/find/find.ts","../../src/js/utils/dom/toggleClass/toggleClass.ts","../../src/js/utils/dom/addClass/addClass.ts","../../src/js/utils/dom/append/append.ts","../../src/js/utils/dom/before/before.ts","../../src/js/utils/dom/matches/matches.ts","../../src/js/utils/dom/children/children.ts","../../src/js/utils/dom/child/child.ts","../../src/js/utils/object/forOwn/forOwn.ts","../../src/js/utils/object/assign/assign.ts","../../src/js/utils/object/merge/merge.ts","../../src/js/utils/dom/removeAttribute/removeAttribute.ts","../../src/js/utils/dom/setAttribute/setAttribute.ts","../../src/js/utils/dom/create/create.ts","../../src/js/utils/dom/style/style.ts","../../src/js/utils/dom/display/display.ts","../../src/js/utils/dom/focus/focus.ts","../../src/js/utils/dom/getAttribute/getAttribute.ts","../../src/js/utils/dom/hasClass/hasClass.ts","../../src/js/utils/dom/rect/rect.ts","../../src/js/utils/dom/remove/remove.ts","../../src/js/utils/dom/measure/measure.ts","../../src/js/utils/dom/parseHtml/parseHtml.ts","../../src/js/utils/dom/prevent/prevent.ts","../../src/js/utils/dom/query/query.ts","../../src/js/utils/dom/queryAll/queryAll.ts","../../src/js/utils/dom/removeClass/removeClass.ts","../../src/js/utils/dom/unit/unit.ts","../../src/js/utils/error/assert/assert.ts","../../src/js/utils/function/nextTick/nextTick.ts","../../src/js/utils/function/noop/noop.ts","../../src/js/utils/function/raf/raf.ts","../../src/js/utils/math/math/math.ts","../../src/js/utils/math/approximatelyEqual/approximatelyEqual.ts","../../src/js/utils/math/between/between.ts","../../src/js/utils/math/clamp/clamp.ts","../../src/js/utils/math/sign/sign.ts","../../src/js/utils/string/format/format.ts","../../src/js/utils/string/pad/pad.ts","../../src/js/utils/string/uniqueId/uniqueId.ts","../../src/js/constructors/EventBus/EventBus.ts","../../src/js/constants/events.ts","../../src/js/constructors/EventInterface/EventInterface.ts","../../src/js/constructors/RequestInterval/RequestInterval.ts","../../src/js/constructors/State/State.ts","../../src/js/constructors/Throttle/Throttle.ts","../../src/js/components/Options/Options.ts","../../src/js/constants/directions.ts","../../src/js/components/Direction/Direction.ts","../../src/js/constants/classes.ts","../../src/js/components/Elements/Elements.ts","../../src/js/constants/attributes.ts","../../src/js/constants/types.ts","../../src/js/components/Slides/Slide.ts","../../src/js/components/Slides/Slides.ts","../../src/js/components/Layout/Layout.ts","../../src/js/components/Clones/Clones.ts","../../src/js/components/Move/Move.ts","../../src/js/components/Controller/Controller.ts","../../src/js/components/Arrows/path.ts","../../src/js/components/Arrows/Arrows.ts","../../src/js/components/Autoplay/constants.ts","../../src/js/components/Autoplay/Autoplay.ts","../../src/js/components/Cover/Cover.ts","../../src/js/components/Scroll/constants.ts","../../src/js/components/Scroll/Scroll.ts","../../src/js/constants/listener-options.ts","../../src/js/components/Drag/constants.ts","../../src/js/components/Drag/Drag.ts","../../src/js/components/Keyboard/Keyboard.ts","../../src/js/components/LazyLoad/constants.ts","../../src/js/components/LazyLoad/LazyLoad.ts","../../src/js/components/Pagination/Pagination.ts","../../src/js/components/Sync/Sync.ts","../../src/js/components/Wheel/Wheel.ts","../../src/js/constants/i18n.ts","../../src/js/constants/defaults.ts","../../src/js/transitions/Fade/Fade.ts","../../src/js/transitions/Slide/Slide.ts","../../src/js/core/Splide/Splide.ts"],"sourcesContent":["/**\r\n * The project code.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const PROJECT_CODE = 'splide';\r\n\r\n/**\r\n * The data attribute prefix.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\r\n","/**\r\n * Splide has been just created.\r\n */\r\nexport const CREATED = 1;\r\n\r\n/**\r\n * Splide has mounted components.\r\n */\r\nexport const MOUNTED = 2;\r\n\r\n/**\r\n * Splide is ready.\r\n */\r\nexport const IDLE = 3;\r\n\r\n/**\r\n * Splide is moving.\r\n */\r\nexport const MOVING = 4;\r\n\r\n/**\r\n * Splide has been destroyed.\r\n */\r\nexport const DESTROYED = 5;\r\n\r\n/**\r\n * The collection of all states.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATES = {\r\n  CREATED,\r\n  MOUNTED,\r\n  IDLE,\r\n  MOVING,\r\n  DESTROYED,\r\n};\r\n","/**\r\n * The default priority for internal handlers.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DEFAULT_EVENT_PRIORITY = 10;\r\n\r\n/**\r\n * The default priority for users' handlers.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DEFAULT_USER_EVENT_PRIORITY = 20;\r\n","/**\r\n * Empties the array.\r\n *\r\n * @param array - A array to empty.\r\n */\r\nexport function empty( array: any[] ): void {\r\n  array.length = 0;\r\n}\r\n","/**\r\n * Checks if the given subject is an object or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an object, or otherwise `false`.\r\n */\r\nexport function isObject( subject: unknown ): subject is object {\r\n  return ! isNull( subject ) && typeof subject === 'object';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an array or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an array, or otherwise `false`.\r\n */\r\nexport function isArray<T>( subject: unknown ): subject is T[] {\r\n  return Array.isArray( subject );\r\n}\r\n\r\n/**\r\n * Checks if the given subject is a function or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a function, or otherwise `false`.\r\n */\r\nexport function isFunction( subject: unknown ): subject is ( ...args: any[] ) => any {\r\n  return typeof subject === 'function';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is a string or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a string, or otherwise `false`.\r\n */\r\nexport function isString( subject: unknown ): subject is string {\r\n  return typeof subject === 'string';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is `undefined` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `undefined`, or otherwise `false`.\r\n */\r\nexport function isUndefined( subject: unknown ): subject is undefined {\r\n  return typeof subject === 'undefined';\r\n}\r\n\r\n/**\r\n * Checks if the given subject is `null` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `null`, or otherwise `false`.\r\n */\r\nexport function isNull( subject: unknown ): subject is null {\r\n  return subject === null;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\r\n */\r\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\r\n  return subject instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLButtonElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLButtonElement, or otherwise `false`.\r\n */\r\nexport function isHTMLButtonElement( subject: unknown ): subject is HTMLButtonElement {\r\n  return subject instanceof HTMLButtonElement;\r\n}\r\n","import { isArray } from '../../type/type';\r\n\r\n\r\n/**\r\n * Push the provided value to an array if the value is not an array.\r\n *\r\n * @param value - A value to push.\r\n *\r\n * @return An array containing the value, or the value itself if it is already an array.\r\n */\r\nexport function toArray<T>( value: T | T[] ): T[] {\r\n  return isArray( value ) ? value : [ value ];\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * The extended `Array#forEach` method that accepts a single value as an argument.\r\n *\r\n * @param values   - A value or values to iterate over.\r\n * @param iteratee - An iteratee function.\r\n */\r\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\r\n  toArray( values ).forEach( iteratee );\r\n}\r\n","/**\r\n * Checks if the array includes the value or not.\r\n * `Array#includes` is not supported by IE.\r\n *\r\n * @param array - An array.\r\n * @param value - A value to search for.\r\n *\r\n * @return `true` if the array includes the value, or otherwise `false`.\r\n */\r\nexport function includes<T>( array: T[], value: T ): boolean {\r\n  return array.indexOf( value ) > -1;\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * Extended `Array#push()` that accepts an item or an array with items.\r\n *\r\n * @param array - An array to push items.\r\n * @param items - An item or items to push.\r\n *\r\n * @return A provided array itself.\r\n */\r\nexport function push<T>( array: T[], items: T | T[] ): T[] {\r\n  array.push( ...toArray( items ) );\r\n  return array;\r\n}\r\n","export { empty }    from './empty/empty';\r\nexport { forEach }  from './forEach/forEach';\r\nexport { includes } from './includes/includes';\r\nexport { push }     from './push/push';\r\nexport { toArray }  from './toArray/toArray';\r\n\r\nexport const arrayProto = Array.prototype;\r\n","import { arrayProto } from '../../array';\r\n\r\n\r\n/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\r\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\r\n  return arrayProto.slice.call( arrayLike, start, end );\r\n}\r\n","import { slice } from '../slice/slice';\r\n\r\n\r\n/**\r\n * The find method for an array or array-like object, works in IE.\r\n * This method is not performant for a huge array.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param predicate - The predicate function to test each element in the object.\r\n *\r\n * @return A found value if available, or otherwise `undefined`.\r\n */\r\nexport function find<T>(\r\n  arrayLike: ArrayLike<T>,\r\n  predicate: ( value: T, index: number, array: T[] ) => any\r\n): T | undefined {\r\n  return slice( arrayLike ).filter( predicate )[ 0 ];\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Toggles the provided class or classes by following the `add` boolean.\r\n *\r\n * @param elm     - An element whose classes are toggled.\r\n * @param classes - A class or class names.\r\n * @param add     - Whether to add or remove a class.\r\n */\r\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\r\n  if ( elm ) {\r\n    forEach( classes, name => {\r\n      if ( name ) {\r\n        elm.classList[ add ? 'add' : 'remove' ]( name );\r\n      }\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Adds classes to the element.\r\n *\r\n * @param elm     - An element to add classes to.\r\n * @param classes - Classes to add.\r\n */\r\nexport function addClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, isString( classes ) ? classes.split( ' ' ) : classes, true );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Appends children to the parent element.\r\n *\r\n * @param parent   - A parent element.\r\n * @param children - A child or children to append to the parent.\r\n */\r\nexport function append( parent: Element, children: Node | Node[] ): void {\r\n  forEach( children, parent.appendChild.bind( parent ) );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Inserts a node or nodes before the specified reference node.\r\n *\r\n * @param nodes - A node or nodes to insert.\r\n * @param ref   - A reference node.\r\n */\r\nexport function before( nodes: Node | Node[], ref: Node ): void {\r\n  forEach( nodes, node => {\r\n    const parent = ref.parentNode;\r\n\r\n    if ( parent ) {\r\n      parent.insertBefore( node, ref );\r\n    }\r\n  } );\r\n}\r\n","import { isHTMLElement } from '../../type/type';\n\n\n/**\n * Checks if the element can be selected by the provided selector or not.\n *\n * @param elm      - An element to check.\n * @param selector - A selector to test.\n *\n * @return `true` if the selector matches the element, or otherwise `false`.\n */\nexport function matches( elm: Element | EventTarget, selector: string ): boolean {\n  return isHTMLElement( elm ) && ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\n}\n","import { slice } from '../../arrayLike';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Finds children that has the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return An array with filtered children.\r\n */\r\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector: string ): E[] {\r\n  return parent ? slice( parent.children ).filter( child => matches( child, selector ) ) as E[] : [];\r\n}\r\n","import { children } from '../children/children';\r\n\r\n\r\n/**\r\n * Returns a child element that matches the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return A matched child element if available, or otherwise `undefined`.\r\n */\r\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\r\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\r\n}\r\n","/**\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\n *\n * @param object   - An object to iterate over.\n * @param iteratee - An iteratee function that takes the value and key as arguments.\n * @param right    - If `true`, the method iterates over the object from the end like `forEachRight()`.\n *\n * @return A provided object itself.\n */\nexport function forOwn<T extends object>(\n  object: T,\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void,\n  right?: boolean\n): T {\n  if ( object ) {\n    let keys = Object.keys( object );\n    keys = right ? keys.reverse() : keys;\n\n    for ( let i = 0; i < keys.length; i++ ) {\n      const key = keys[ i ];\n\n      if ( key !== '__proto__' ) {\n        if ( iteratee( object[ key ], key ) === false ) {\n          break;\n        }\n      }\n    }\n  }\n\n  return object;\n}\n","import { slice } from '../../arrayLike';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Assign U to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - An object to assign.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assign<T, U> = Omit<T, keyof U> & U;\r\n\r\nexport function assign<T extends object>( object: T ): T;\r\n\r\n// There is a way to type arguments recursively, but these fixed definitions are enough for this project.\r\nexport function assign<T extends object, U extends object>( object: T, source: U ): Assign<T, U>;\r\n\r\nexport function assign<T extends object, U1 extends object, U2 extends object>(\r\n  object: T, source1: U1, source2: U2\r\n): Assign<Assign<T, U1>, U2>;\r\n\r\nexport function assign<T extends object, U1 extends object, U2 extends object, U3 extends object>(\r\n  object: T, source1: U1, source2: U2, source3: U3\r\n): Assign<Assign<Assign<T, U1>, U2>, U3>;\r\n\r\n/**\r\n * Assigns all own enumerable properties of all source objects to the provided object.\r\n * `undefined` in source objects will be skipped.\r\n *\r\n * @param object - An object to assign properties to.\r\n *\r\n * @return An object assigned properties of the sources to.\r\n */\r\nexport function assign<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      object[ key ] = source[ key ];\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { isArray, isObject } from '../../type/type';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Merges U to T.\r\n *\r\n * @typeParam T - An object to merge U into.\r\n * @typeParam U - An object to merge properties from.\r\n *\r\n * @return A merged object type.\r\n */\r\nexport type Merge<T extends object, U extends object> = Omit<T, keyof U> & {\r\n  [ K in ( keyof T & keyof U ) ]: U[ K ] extends object\r\n    ? U[ K ] extends any[]\r\n      ? T[ K ] extends any[]\r\n        ? Array<T[ K ][ number ] | U[ K ][ number ]>\r\n        : U[ K ]\r\n      : T[ K ] extends object\r\n        ? Merge<T[ K ], U[ K ]> extends infer A ? Cast<A, object> : never\r\n        : U[ K ]\r\n    : U[ K ];\r\n} & Omit<U, keyof T>;\r\n\r\ntype Cast<T, U> = T extends U ? T : U;\r\n\r\n/**\r\n * Recursively merges source properties to the object.\r\n * Be aware that this method does not merge arrays. They are just duplicated by `slice()`.\r\n *\r\n * @param object - An object to merge properties to.\r\n * @param source - A source object to merge properties from.\r\n *\r\n * @return A new object with merged properties.\r\n */\r\nexport function merge<T extends object, U extends object>( object: T, source: U ): Merge<T, U> {\r\n  forOwn( source, ( value, key ) => {\r\n    if ( isArray( value ) ) {\r\n      object[ key ] = value.slice();\r\n    } else if ( isObject( value ) ) {\r\n      object[ key ] = merge( isObject( object[ key ] ) ? object[ key ] : {}, value );\r\n    } else {\r\n      object[ key ] = value;\r\n    }\r\n  } );\r\n\r\n  return object as Merge<T, U>;\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes attributes from the element.\r\n *\r\n * @param elm   - An element.\r\n * @param attrs - An attribute or attributes to remove.\r\n */\r\nexport function removeAttribute( elm: Element, attrs: string | string[] ): void {\r\n  if ( elm ) {\r\n    forEach( attrs, attr => {\r\n      elm.removeAttribute( attr );\r\n    } );\r\n  }\r\n}\r\n","import { forOwn } from '../../object';\r\nimport { isNull, isObject } from '../../type/type';\r\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\r\n\r\n\r\nexport function setAttribute( elm: Element, attr: string, value: string | number | boolean ): void;\r\nexport function setAttribute( elm: Element, attrs: Record<string, string | number | boolean> ): void;\r\n\r\nexport function setAttribute(\r\n  elm: Element,\r\n  attrs: string | Record<string, string | number | boolean>,\r\n  value?: string | number | boolean\r\n): void {\r\n  if ( isObject( attrs ) ) {\r\n    forOwn( attrs, ( value, name ) => {\r\n      setAttribute( elm, name, value );\r\n    } );\r\n  } else {\r\n    isNull( value ) ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { addClass } from '../addClass/addClass';\r\nimport { append } from '../append/append';\r\nimport { setAttribute } from '../setAttribute/setAttribute';\r\n\r\n\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string | string[],\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ];\r\n\r\nexport function create(\r\n  tag: string,\r\n  attrs?: Record<string, string | number | boolean> | string | string[],\r\n  parent?: HTMLElement\r\n): HTMLElement;\r\n\r\n/**\r\n * Creates a HTML element.\r\n *\r\n * @param tag    - A tag name.\r\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\r\n * @param parent - Optional. A parent element where the created element is appended.\r\n */\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ] {\r\n  const elm = document.createElement( tag );\r\n\r\n  if ( attrs ) {\r\n    isString( attrs ) ? addClass( elm, attrs ) : setAttribute( elm, attrs );\r\n  }\r\n\r\n  parent && append( parent, elm );\r\n\r\n  return elm;\r\n}\r\n","import { isNull, isUndefined } from '../../type/type';\n\n\nexport function style<K extends keyof CSSStyleDeclaration>(\n  elm: HTMLElement,\n  prop: K,\n): CSSStyleDeclaration[ K ];\n\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n): string;\n\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n  value: string | number\n): void;\n\n\n/**\n * Applies inline styles to the provided element by an object literal.\n *\n * @param elm   - An element to apply styles to.\n * @param prop  - An object literal with styles or a property name.\n * @param value - A value to set.\n */\nexport function style(\n  elm: HTMLElement,\n  prop: string,\n  value?: string | number\n): string | void {\n  if ( isUndefined( value ) ) {\n    return getComputedStyle( elm )[ prop ];\n  }\n\n  if ( ! isNull( value ) ) {\n    const { style } = elm;\n    value = `${ value }`;\n\n    if ( style[ prop ] !== value ) {\n      style[ prop ] = value;\n    }\n  }\n}\n","import { style } from '../style/style';\n\n\n/**\n * Sets the `display` CSS value to the element.\n *\n * @param elm     - An element to set a new value to.\n * @param display - A new `display` value.\n */\nexport function display( elm: HTMLElement, display: string ): void {\n  style( elm, 'display', display );\n}\n","/**\n * Focuses the provided element without scrolling the ascendant element.\n *\n * @param elm - An element to focus.\n */\nexport function focus( elm: HTMLElement ): void {\n  elm[ 'setActive' ] && elm[ 'setActive' ]() || elm.focus( { preventScroll: true } );\n}\n","/**\r\n * Returns the specified attribute value.\r\n *\r\n * @param elm  - An element.\r\n * @param attr - An attribute to get.\r\n */\r\nexport function getAttribute( elm: Element, attr: string ): string {\r\n  return elm.getAttribute( attr );\r\n}\r\n","/**\r\n * Checks if the element contains the specified class or not.\r\n *\r\n * @param elm       - An element to check.\r\n * @param className - A class name that may be contained by the element.\r\n *\r\n * @return `true` if the element contains the class, or otherwise `false`.\r\n */\r\nexport function hasClass( elm: Element, className: string ): boolean {\r\n  return elm && elm.classList.contains( className );\r\n}\r\n","/**\r\n * Returns a DOMRect object of the provided element.\r\n *\r\n * @param target - An element.\r\n */\r\nexport function rect( target: Element ): DOMRect {\r\n  return target.getBoundingClientRect();\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes the provided node from its parent.\r\n *\r\n * @param nodes - A node or nodes to remove.\r\n */\r\nexport function remove( nodes: Node | Node[] ): void {\r\n  forEach( nodes, node => {\r\n    if ( node && node.parentNode ) {\r\n      node.parentNode.removeChild( node );\r\n    }\r\n  } );\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { create } from '../create/create';\r\nimport { rect } from '../rect/rect';\r\nimport { remove } from '../remove/remove';\r\n\r\n\r\n/**\r\n * Attempts to convert the provided value to pixel as the relative value to the parent element.\r\n *\r\n * @param parent - A parent element.\r\n * @param value  - A value to convert.\r\n *\r\n * @return A converted value in pixel. Unhandled values will become 0.\r\n */\r\nexport function measure( parent: HTMLElement, value: number | string ): number {\r\n  if ( isString( value ) ) {\r\n    const div = create( 'div', { style: `width: ${ value }; position: absolute;` }, parent );\r\n    value = rect( div ).width;\r\n    remove( div );\r\n  }\r\n\r\n  return value;\r\n}\r\n","import { child } from '../child/child';\r\n\r\n\r\n/**\r\n * Parses the provided HTML string and returns the first element.\r\n *\r\n * @param html - An HTML string to parse.\r\n *\r\n * @return An Element on success, or otherwise `undefined`.\r\n */\r\nexport function parseHtml<E extends HTMLElement>( html: string ): E | undefined {\r\n  return child<E>( new DOMParser().parseFromString( html, 'text/html' ).body );\r\n}\r\n","/**\r\n * Call the `preventDefault()` of the provided event.\r\n *\r\n * @param e               - An Event object.\r\n * @param stopPropagation - Optional. Whether to stop the event propagation or not.\r\n */\r\nexport function prevent( e: Event, stopPropagation?: boolean ): void {\r\n  e.preventDefault();\r\n\r\n  if ( stopPropagation ) {\r\n    e.stopPropagation();\r\n    e.stopImmediatePropagation();\r\n  }\r\n}\r\n","/**\r\n * Returns an element that matches the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return A found element or `null`.\r\n */\r\nexport function query<E extends Element = Element>( parent: Element | Document, selector: string ): E | null {\r\n  return parent && parent.querySelector( selector );\r\n}\r\n","import { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Returns elements that match the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return An array with matched elements.\r\n */\r\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector: string ): E[] {\r\n  return slice<E>( parent.querySelectorAll( selector ) );\r\n}\r\n","import { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\r\nexport function removeClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, classes, false );\r\n}\r\n","import { isString } from '../../type/type';\r\n\r\n\r\n/**\r\n * Appends `px` to the provided number.\r\n * If the value is already string, just returns it.\r\n *\r\n * @param value - A value to append `px` to.\r\n *\r\n * @return A string with the CSS unit.\r\n */\r\nexport function unit( value: number | string ): string {\r\n  return isString( value ) ? value : value ? `${ value }px` : '';\r\n}\r\n","import { PROJECT_CODE } from '../../../constants/project';\r\n\r\n\r\n/**\r\n * Throws an error if the provided condition is falsy.\r\n *\r\n * @param condition - If falsy, an error is thrown.\r\n * @param message   - Optional. A message to display.\r\n */\r\nexport function assert( condition: any, message = '' ): void {\r\n  if ( ! condition ) {\r\n    throw new Error( `[${ PROJECT_CODE }] ${ message }` );\r\n  }\r\n}\r\n","import { AnyFunction } from '../../../types';\r\n\r\n\r\n/**\r\n * Invokes the callback on the next tick.\r\n *\r\n * @param callback - A callback function.\r\n */\r\nexport function nextTick( callback: AnyFunction ): void {\r\n  setTimeout( callback );\r\n}\r\n","/**\r\n * No operation.\r\n */\r\nexport const noop = (): void => {}; // eslint-disable-line no-empty-function, @typescript-eslint/no-empty-function\r\n","/**\r\n * The arias of `window.requestAnimationFrame()`.\r\n */\r\nexport function raf( func: FrameRequestCallback ): number {\r\n  return requestAnimationFrame( func );\r\n}\r\n","export const { min, max, floor, ceil, abs } = Math;\r\n","import { abs } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the provided 2 numbers are approximately equal or not.\r\n *\r\n * @param x       - A number.\r\n * @param y       - Another number to compare.\r\n * @param epsilon - An accuracy that defines the approximation.\r\n *\r\n * @return `true` if 2 numbers are considered to be equal, or otherwise `false`.\r\n */\r\nexport function approximatelyEqual( x: number, y: number, epsilon: number ): boolean {\r\n  return abs( x - y ) < epsilon;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the subject number is between `minOrMax` and `maxOrMin`.\r\n *\r\n * @param number    - A subject number to check.\r\n * @param minOrMax  - A min or max number.\r\n * @param maxOrMin  - A max or min number.\r\n * @param exclusive - Optional. Whether to exclude `x` or `y`.\r\n */\r\nexport function between( number: number, minOrMax: number, maxOrMin: number, exclusive?: boolean ): boolean {\r\n  const minimum = min( minOrMax, maxOrMin );\r\n  const maximum = max( minOrMax, maxOrMin );\r\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Clamps a number.\r\n *\r\n * @param number - A subject number to check.\r\n * @param x      - A min or max number.\r\n * @param y      - A min or max number.\r\n */\r\nexport function clamp( number: number, x: number, y: number ): number {\r\n  const minimum = min( x, y );\r\n  const maximum = max( x, y );\r\n  return min( max( minimum, number ), maximum );\r\n}\r\n","/**\r\n * Returns the sign of the provided number.\r\n *\r\n * @param x - A number.\r\n *\r\n * @return `1` for positive numbers, `-1` for negative numbers, or `0` for `0`.\r\n */\r\nexport function sign( x: number ): number {\r\n  return +( x > 0 ) - +( x < 0 );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Formats a string.\r\n *\r\n * @param string       - A string to format.\r\n * @param replacements - A replacement or replacements.\r\n *\r\n * @return A formatted string.\r\n */\r\nexport function format( string: string, replacements: string | number | Array<string | number> ): string {\r\n  forEach( replacements, replacement => {\r\n    string = string.replace( '%s', `${ replacement }` );\r\n  } );\r\n\r\n  return string;\r\n}\r\n","/**\r\n * Pads the number with 0.\r\n *\r\n * @param number - A number to pad.\r\n *\r\n * @return string - Padded number.\r\n */\r\nexport function pad( number: number ): string {\r\n  return number < 10 ? `0${ number }` : `${ number }`;\r\n}\r\n","import { pad } from '../pad/pad';\r\n\r\n\r\n/**\r\n * Stores unique IDs.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst ids: Record<string, number> = {};\r\n\r\n/**\r\n * Returns a sequential unique ID as \"{ prefix }-{ number }\".\r\n *\r\n * @param prefix - A prefix for the ID.\r\n */\r\nexport function uniqueId( prefix: string ): string {\r\n  return `${ prefix }${ pad( ( ids[ prefix ] = ( ids[ prefix ] || 0 ) + 1 ) ) }`;\r\n}\r\n","import { DEFAULT_EVENT_PRIORITY } from '../../constants/priority';\nimport { AnyFunction } from '../../types';\nimport { forOwn, push, slice, toArray } from '../../utils';\n\n\n/**\n * The interface for the EventBus instance.\n *\n * @since 3.0.0\n */\nexport interface EventBusObject {\n  on( events: string | string[], callback: EventBusCallback, key?: object, priority?: number ): void;\n  off( events: string | string[], key?: object ): void;\n  offBy( key: object ): void;\n  emit( event: string, ...args: any[] ): void;\n  destroy(): void;\n}\n\n/**\n * The interface for each event handler object.\n *\n * @since 3.0.0\n */\nexport interface EventHandler {\n  _event: string;\n  _callback: AnyFunction;\n  _namespace: string;\n  _priority: number;\n  _key?: object;\n}\n\n/**\n * The type for a callback function of the EventBus.\n *\n * @since 3.0.0\n */\nexport type EventBusCallback = AnyFunction;\n\n/**\n * The constructor to provided a simple event system.\n *\n * @since 3.0.0\n *\n * @return An EventBus object.\n */\nexport function EventBus(): EventBusObject {\n  /**\n   * The collection of registered handlers.\n   */\n  let handlers: Record<string, EventHandler[]> = {};\n\n  /**\n   * Registers an event handler.\n   *\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   * @param callback - A callback function to register.\n   * @param key      - Optional. An object for an identifier of the handler.\n   * @param priority - Optional. A priority number for the order in which the callbacks are invoked.\n   *                   Lower numbers correspond with earlier execution. The default value is 10.\n   */\n  function on(\n    events: string | string[],\n    callback: EventBusCallback,\n    key?: object,\n    priority = DEFAULT_EVENT_PRIORITY\n  ): void {\n    forEachEvent( events, ( event, namespace ) => {\n      handlers[ event ] = handlers[ event ] || [];\n\n      push( handlers[ event ], {\n        _event    : event,\n        _callback : callback,\n        _namespace: namespace,\n        _priority : priority,\n        _key      : key,\n      } ).sort( ( handler1, handler2 ) => handler1._priority - handler2._priority );\n    } );\n  }\n\n  /**\n   * Removes event handlers registered by `on()`.\n   * If only the event name is provided, all handlers that associate with the event are removed.\n   * If the event name and namespace are specified, handlers that associate with the event and namespace are removed.\n   *\n   * @param events - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   * @param key    - Optional. An object for an identifier of the handler.\n   */\n  function off( events: string | string[], key?: object ): void {\n    forEachEvent( events, ( event, namespace ) => {\n      const eventHandlers = handlers[ event ];\n\n      handlers[ event ] = eventHandlers && eventHandlers.filter( handler => {\n        return handler._key ? handler._key !== key : key || handler._namespace !== namespace;\n      } );\n    } );\n  }\n\n  /**\n   * Removes all handlers locked by the specified key.\n   *\n   * @param key - A key.\n   */\n  function offBy( key: object ): void {\n    forOwn( handlers, ( eventHandlers, event ) => {\n      off( event, key );\n    } );\n  }\n\n  /**\n   * Triggers callback functions.\n   * This accepts additional arguments and passes them to callbacks.\n   *\n   * @param event - An event name.\n   */\n  function emit( event: string ): void {\n    ( handlers[ event ] || [] ).forEach( handler => {\n      // eslint-disable-next-line prefer-rest-params, prefer-spread\n      handler._callback.apply( handler, slice( arguments, 1 ) );\n    } );\n  }\n\n  /**\n   * Removes all handlers.\n   */\n  function destroy(): void {\n    handlers = {};\n  }\n\n  /**\n   * Parses provided events and iterates over them.\n   *\n   * @param events   - An event or events.\n   * @param iteratee - An iteratee function.\n   */\n  function forEachEvent( events: string | string[], iteratee: ( event: string, namespace: string ) => void ): void {\n    toArray( events ).join( ' ' ).split( ' ' ).forEach( eventNS => {\n      const fragments = eventNS.split( '.' );\n      iteratee( fragments[ 0 ], fragments[ 1 ] );\n    } );\n  }\n\n  return {\n    on,\n    off,\n    offBy,\n    emit,\n    destroy,\n  };\n}\n","export const EVENT_MOUNTED            = 'mounted';\nexport const EVENT_READY              = 'ready';\nexport const EVENT_MOVE               = 'move';\nexport const EVENT_MOVED              = 'moved';\nexport const EVENT_SHIFTED            = 'shifted';\nexport const EVENT_CLICK              = 'click';\nexport const EVENT_ACTIVE             = 'active';\nexport const EVENT_INACTIVE           = 'inactive';\nexport const EVENT_VISIBLE            = 'visible';\nexport const EVENT_HIDDEN             = 'hidden';\nexport const EVENT_SLIDE_KEYDOWN      = 'slide:keydown';\nexport const EVENT_REFRESH            = 'refresh';\nexport const EVENT_UPDATED            = 'updated';\nexport const EVENT_RESIZE             = 'resize';\nexport const EVENT_RESIZED            = 'resized';\nexport const EVENT_REPOSITIONED       = 'repositioned';\nexport const EVENT_DRAG               = 'drag';\nexport const EVENT_DRAGGING           = 'dragging';\nexport const EVENT_DRAGGED            = 'dragged';\nexport const EVENT_SCROLL             = 'scroll';\nexport const EVENT_SCROLLED           = 'scrolled';\nexport const EVENT_DESTROY            = 'destroy';\nexport const EVENT_ARROWS_MOUNTED     = 'arrows:mounted';\nexport const EVENT_ARROWS_UPDATED     = 'arrows:updated';\nexport const EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\nexport const EVENT_PAGINATION_UPDATED = 'pagination:updated';\nexport const EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\nexport const EVENT_AUTOPLAY_PLAY      = 'autoplay:play';\nexport const EVENT_AUTOPLAY_PLAYING   = 'autoplay:playing';\nexport const EVENT_AUTOPLAY_PAUSE     = 'autoplay:pause';\nexport const EVENT_LAZYLOAD_LOADED    = 'lazyload:loaded';\n\n","import { EVENT_DESTROY } from '../../constants/events';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction, EventMap } from '../../types';\nimport { forEach } from '../../utils';\nimport { EventBusCallback } from '../EventBus/EventBus';\n\n\n/**\n * The interface for the EventInterface object.\n *\n * @since 3.0.0\n */\nexport interface EventInterfaceObject {\n  on<K extends keyof EventMap>( event: K, callback: EventMap[ K ], priority?: number ): void;\n  on( events: string | string[], callback: EventBusCallback, priority?: number ): void;\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): void;\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): void\n  emit( event: string, ...args: any[] ): void;\n  bind(\n    target: Element | Window | Document | Array<Element | Window | Document>,\n    events: string,\n    callback: AnyFunction,\n    options?: AddEventListenerOptions\n  ): void\n  unbind(\n    target: Element | Window | Document | Array<Element | Window | Document>,\n    events: string,\n    callback?: AnyFunction,\n  ): void;\n  destroy(): void;\n}\n\n/**\n * The type for event targets.\n *\n * @since 3.0.0\n */\ntype EventTarget = Element | Window | Document;\n\n/**\n * The function that provides interface for internal and native events.\n *\n * @since 3.0.0\n *\n * @param Splide - A Splide instance.\n *\n * @return A collection of interface functions.\n */\nexport function EventInterface( Splide: Splide ): EventInterfaceObject {\n  /**\n   * Holds the event object.\n   */\n  const { event } = Splide;\n\n  /**\n   * The key for events.\n   */\n  const key = {};\n\n  /**\n   * Stores all handlers that listen to native events.\n   */\n  let listeners: [ EventTarget, string, AnyFunction, AddEventListenerOptions? ][] = [];\n\n  /**\n   * Registers an event handler with an unique key.\n   * It can only be removed by `off()` method below.\n   *\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   * @param callback - A callback function to register.\n   * @param priority - Optional. A priority number for the order in which the callbacks are invoked.\n   *                   Lower numbers correspond with earlier execution. The default value is 10.\n   */\n  function on( events: string | string[], callback: EventBusCallback, priority?: number ): void {\n    event.on( events, callback, key, priority );\n  }\n\n  /**\n   * Removes event handlers registered by `on()`.\n   *\n   * @param events - An event name or names separated by spaces. Use a dot(.) to add a namespace.\n   */\n  function off( events: string | string[] ): void {\n    event.off( events, key );\n  }\n\n  /**\n   * Listens to native events.\n   * Splide#destory() will remove all registered listeners.\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event or events to listen to.\n   * @param callback - A callback function.\n   * @param options  - Optional. The options to pass to the `addEventListener` function.\n   */\n  function bind(\n    targets: EventTarget | EventTarget[],\n    events: string,\n    callback: AnyFunction,\n    options?: AddEventListenerOptions\n  ): void {\n    forEachEvent( targets, events, ( target, event ) => {\n      listeners.push( [ target, event, callback, options ] );\n      target.addEventListener( event, callback, options );\n    } );\n  }\n\n  /**\n   * Removes the event handler.\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event name or names to remove.\n   * @param callback - Optional. Specify the callback to remove.\n   */\n  function unbind( targets: EventTarget | EventTarget[], events: string, callback?: AnyFunction ): void {\n    forEachEvent( targets, events, ( target, event ) => {\n      listeners = listeners.filter( listener => {\n        if ( listener[ 0 ] === target && listener[ 1 ] === event && ( ! callback || listener[ 2 ] === callback ) ) {\n          target.removeEventListener( event, listener[ 2 ], listener[ 3 ] );\n          return false;\n        }\n\n        return true;\n      } );\n    } );\n  }\n\n  /**\n   * Iterates over each target and event.\n   *\n   * @param targets  - A target element, the window object or the document object.\n   * @param events   - An event name or names.\n   * @param iteratee - An iteratee function.\n   */\n  function forEachEvent(\n    targets: EventTarget | EventTarget[],\n    events: string,\n    iteratee: ( target: EventTarget, event: string ) => void\n  ): void {\n    forEach( targets, target => {\n      if ( target ) {\n        events.split( ' ' ).forEach( iteratee.bind( null, target ) );\n      }\n    } );\n  }\n\n  /**\n   * Removes all listeners.\n   */\n  function destroy(): void {\n    listeners = listeners.filter( data => unbind( data[ 0 ], data[ 1 ] ) );\n    event.offBy( key );\n  }\n\n  /**\n   * Invokes destroy when the slider is destroyed.\n   */\n  event.on( EVENT_DESTROY, destroy, key );\n\n  return {\n    on,\n    off,\n    emit: event.emit,\n    bind,\n    unbind,\n    destroy,\n  };\n}\n","import { raf } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface RequestIntervalInterface {\r\n  start( resume?: boolean ): void;\r\n  pause(): void;\r\n  rewind(): void;\r\n  cancel(): void;\r\n  set( interval: number ): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param interval   - The interval duration in milliseconds.\r\n * @param onInterval - The callback fired on every interval.\r\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\r\n * @param limit      - Optional. Limits the number of interval.\r\n */\r\nexport function RequestInterval(\r\n  interval: number,\r\n  onInterval: () => void,\r\n  onUpdate?: ( rate: number ) => void,\r\n  limit?: number\r\n): RequestIntervalInterface {\r\n  const { now } = Date;\r\n\r\n  /**\r\n   * The time when the interval starts.\r\n   */\r\n  let startTime: number;\r\n\r\n  /**\r\n   * The current progress rate.\r\n   */\r\n  let rate = 0;\r\n\r\n  /**\r\n   * The animation frame ID.\r\n   */\r\n  let id: number;\r\n\r\n  /**\r\n   * Indicates whether the interval is currently paused or not.\r\n   */\r\n  let paused = true;\r\n\r\n  /**\r\n   * The loop count. This only works when the `limit` argument is provided.\r\n   */\r\n  let count = 0;\r\n\r\n  /**\r\n   * The update function called on every animation frame.\r\n   */\r\n  function update(): void {\r\n    if ( ! paused ) {\r\n      const elapsed = now() - startTime;\r\n\r\n      if ( elapsed >= interval ) {\r\n        rate      = 1;\r\n        startTime = now();\r\n      } else {\r\n        rate = elapsed / interval;\r\n      }\r\n\r\n      if ( onUpdate ) {\r\n        onUpdate( rate );\r\n      }\r\n\r\n      if ( rate === 1 ) {\r\n        onInterval();\r\n\r\n        if ( limit && ++count >= limit ) {\r\n          return pause();\r\n        }\r\n      }\r\n\r\n      raf( update );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts the interval.\r\n   *\r\n   * @param resume - Optional. Whether to resume the paused progress or not.\r\n   */\r\n  function start( resume?: boolean ): void {\r\n    ! resume && cancel();\r\n    startTime = now() - ( resume ? rate * interval : 0 );\r\n    paused    = false;\r\n    raf( update );\r\n  }\r\n\r\n  /**\r\n   * Pauses the interval.\r\n   */\r\n  function pause(): void {\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Rewinds the current progress.\r\n   */\r\n  function rewind(): void {\r\n    startTime = now();\r\n    rate      = 0;\r\n\r\n    if ( onUpdate ) {\r\n      onUpdate( rate );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the interval.\r\n   */\r\n  function cancel() {\r\n    cancelAnimationFrame( id );\r\n    rate   = 0;\r\n    id     = 0;\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Sets new interval duration.\r\n   *\r\n   * @param time - The interval duration in milliseconds.\r\n   */\r\n  function set( time: number ): void {\r\n    interval = time;\r\n  }\r\n\r\n  /**\r\n   * Checks if the interval is paused or not.\r\n   *\r\n   * @return `true` if the interval is paused, or otherwise `false`.\r\n   */\r\n  function isPaused(): boolean {\r\n    return paused;\r\n  }\r\n\r\n  return {\r\n    start,\r\n    rewind,\r\n    pause,\r\n    cancel,\r\n    set,\r\n    isPaused,\r\n  };\r\n}\r\n","import { includes, toArray } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the State object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface StateObject {\r\n  set( state: number ): void;\r\n  is( states: number | number[] ): boolean;\r\n}\r\n\r\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param initialState - Specifies the initial state.\r\n */\r\nexport function State( initialState: number ): StateObject {\r\n  /**\r\n   * The current state.\r\n   */\r\n  let state = initialState;\r\n\r\n  /**\r\n   * Sets a new state.\r\n   *\r\n   * @param value - A new state value.\r\n   */\r\n  function set( value: number ): void {\r\n    state = value;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state matches the provided one.\r\n   *\r\n   * @param states - A state to check.\r\n   *\r\n   * @return `true` if the current state is the provided one.\r\n   */\r\n  function is( states: number | number[] ): boolean {\r\n    return includes( toArray( states ), state );\r\n  }\r\n\r\n  return { set, is };\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { RequestInterval, RequestIntervalInterface } from '../RequestInterval/RequestInterval';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ThrottleInstance<F extends AnyFunction> extends Function {\r\n  ( ...args: Parameters<F> ): void;\r\n}\r\n\r\n/**\r\n * Returns the throttled function.\r\n *\r\n * @param func     - A function to throttle.\r\n * @param duration - Optional. Throttle duration in milliseconds.\r\n *\r\n * @return A throttled function.\r\n */\r\nexport function Throttle<F extends AnyFunction>(\r\n  func: F,\r\n  duration?: number\r\n): ThrottleInstance<F> {\r\n  let interval: RequestIntervalInterface;\r\n\r\n  function throttled( this: ThisParameterType<F> ): void {\r\n    if ( ! interval ) {\r\n      interval = RequestInterval( duration || 0, () => {\r\n        // eslint-disable-next-line prefer-rest-params\r\n        func.apply( this, arguments );\r\n        interval = null;\r\n      }, null, 1 );\r\n\r\n      interval.start();\r\n    }\r\n  }\r\n\r\n  return throttled;\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\nimport { DESTROYED } from '../../constants/states';\r\nimport { Throttle } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { assert, find, getAttribute, merge } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Options component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface OptionsComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for managing options.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Options component object.\r\n */\r\nexport function Options( Splide: Splide, Components: Components, options: Options ): OptionsComponent {\r\n  /**\r\n   * The throttled `observe` function.\r\n   */\r\n  const throttledObserve = Throttle( observe );\r\n\r\n  /**\r\n   * Keeps the initial options to apply when no matched query exists.\r\n   */\r\n  let initialOptions: Options;\r\n\r\n  /**\r\n   * Stores breakpoints with the MediaQueryList object.\r\n   */\r\n  let points: [ string, MediaQueryList ][];\r\n\r\n  /**\r\n   * Holds the current breakpoint.\r\n   */\r\n  let currPoint: string | undefined;\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    try {\r\n      merge( options, JSON.parse( getAttribute( Splide.root, DATA_ATTRIBUTE ) ) );\r\n    } catch ( e ) {\r\n      assert( false, e.message );\r\n    }\r\n\r\n    initialOptions = merge( {}, options );\r\n\r\n    const { breakpoints } = options;\r\n\r\n    if ( breakpoints ) {\r\n      const isMin = options.mediaQuery === 'min';\r\n\r\n      points = Object.keys( breakpoints )\r\n        .sort( ( n, m ) => isMin ? +m - +n : +n - +m )\r\n        .map( point => [\r\n          point,\r\n          matchMedia( `(${ isMin ? 'min' : 'max' }-width:${ point }px)` ),\r\n        ] );\r\n\r\n      observe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( points ) {\r\n      addEventListener( 'resize', throttledObserve );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Will be `true` for complete destruction.\r\n   */\r\n  function destroy( completely: boolean ): void {\r\n    if ( completely ) {\r\n      removeEventListener( 'resize', throttledObserve );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Observes breakpoints.\r\n   * The `currPoint` may be `undefined`.\r\n   */\r\n  function observe(): void {\r\n    const item = find( points, item => item[ 1 ].matches ) || [];\r\n\r\n    if ( item[ 0 ] !== currPoint ) {\r\n      onMatch( ( currPoint = item[ 0 ] ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the media query matches breakpoints.\r\n   *\r\n   * @param point - A matched point, or `undefined` that means no breakpoint matches a media query.\r\n   */\r\n  function onMatch( point: string | undefined ): void {\r\n    const newOptions = options.breakpoints[ point ] || initialOptions;\r\n\r\n    if ( newOptions.destroy ) {\r\n      Splide.options = initialOptions;\r\n      Splide.destroy( newOptions.destroy === 'completely' );\r\n    } else {\r\n      if ( Splide.state.is( DESTROYED ) ) {\r\n        destroy( true );\r\n        Splide.mount();\r\n      }\r\n\r\n      Splide.options = newOptions;\r\n    }\r\n  }\r\n\r\n  return {\r\n    setup,\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","/**\r\n * Enumerates slides from left to right.\r\n */\r\nexport const LTR = 'ltr';\r\n\r\n/**\r\n * Enumerates slides from right to left.\r\n */\r\nexport const RTL = 'rtl';\r\n\r\n/**\r\n * Enumerates slides in a col.\r\n */\r\nexport const TTB = 'ttb';\r\n","import { RTL, TTB } from '../../constants/directions';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\n\r\n\r\n/**\r\n * The interface for the Direction component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DirectionComponent extends BaseComponent {\r\n  resolve( prop: string, axisOnly?: boolean ): string;\r\n  orient( value: number ): number;\r\n}\r\n\r\n/**\r\n * The translation map for directions.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ORIENTATION_MAP = {\r\n  marginRight : [ 'marginBottom', 'marginLeft' ],\r\n  autoWidth   : [ 'autoHeight' ],\r\n  fixedWidth  : [ 'fixedHeight' ],\r\n  paddingLeft : [ 'paddingTop', 'paddingRight' ],\r\n  paddingRight: [ 'paddingBottom', 'paddingLeft' ],\r\n  width       : [ 'height' ],\r\n  left        : [ 'top', 'right' ],\r\n  right       : [ 'bottom', 'left' ],\r\n  x           : [ 'y' ],\r\n  X           : [ 'Y' ],\r\n  Y           : [ 'X' ],\r\n  ArrowLeft   : [ 'ArrowUp', 'ArrowRight' ],\r\n  ArrowRight  : [ 'ArrowDown', 'ArrowLeft' ],\r\n};\r\n\r\n/**\r\n * The component that absorbs the difference among directions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Direction component object.\r\n */\r\nexport function Direction( Splide: Splide, Components: Components, options: Options ): DirectionComponent {\r\n  /**\r\n   * Resolves the provided property name.\r\n   *\r\n   * @param prop     - A property name to translate.\r\n   * @param axisOnly - Optional. If `ture`, returns the same property for LTR and RTL.\r\n   */\r\n  function resolve( prop: string, axisOnly?: boolean ): string {\r\n    const { direction } = options;\r\n    const index = direction === RTL && ! axisOnly ? 1 : direction === TTB ? 0 : -1;\r\n    return ORIENTATION_MAP[ prop ][ index ] || prop;\r\n  }\r\n\r\n  /**\r\n   * Orients the value towards the current direction.\r\n   *\r\n   * @param value - A value to orient.\r\n   *\r\n   * @return The oriented value.\r\n   */\r\n  function orient( value: number ): number {\r\n    return value * ( options.direction === RTL ? 1 : -1 );\r\n  }\r\n\r\n  return {\r\n    resolve,\r\n    orient,\r\n  };\r\n}\r\n","import { PROJECT_CODE } from './project';\r\n\r\n\r\nexport const CLASS_ROOT            = PROJECT_CODE;\r\nexport const CLASS_SLIDER          = `${ PROJECT_CODE }__slider`;\r\nexport const CLASS_TRACK           = `${ PROJECT_CODE }__track`;\r\nexport const CLASS_LIST            = `${ PROJECT_CODE }__list`;\r\nexport const CLASS_SLIDE           = `${ PROJECT_CODE }__slide`;\r\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\r\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\r\nexport const CLASS_ARROWS          = `${ PROJECT_CODE }__arrows`;\r\nexport const CLASS_ARROW           = `${ PROJECT_CODE }__arrow`;\r\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\r\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\r\nexport const CLASS_PAGINATION      = `${ PROJECT_CODE }__pagination`;\r\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\r\nexport const CLASS_PROGRESS        = `${ PROJECT_CODE }__progress`;\r\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\r\nexport const CLASS_AUTOPLAY        = `${ PROJECT_CODE }__autoplay`;\r\nexport const CLASS_PLAY            = `${ PROJECT_CODE }__play`;\r\nexport const CLASS_PAUSE           = `${ PROJECT_CODE }__pause`;\r\nexport const CLASS_SPINNER         = `${ PROJECT_CODE }__spinner`;\r\nexport const CLASS_INITIALIZED     = 'is-initialized';\r\nexport const CLASS_ACTIVE          = 'is-active';\r\nexport const CLASS_PREV            = 'is-prev';\r\nexport const CLASS_NEXT            = 'is-next';\r\nexport const CLASS_VISIBLE         = 'is-visible';\r\nexport const CLASS_LOADING         = 'is-loading';\r\n\r\n/**\r\n * The array with all status classes.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATUS_CLASSES = [ CLASS_ACTIVE, CLASS_VISIBLE, CLASS_PREV, CLASS_NEXT, CLASS_LOADING ];\r\n\r\n/**\r\n * The collection of classes for elements that Splide dynamically creates.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const CLASSES = {\r\n  slide     : CLASS_SLIDE,\r\n  clone     : CLASS_CLONE,\r\n  arrows    : CLASS_ARROWS,\r\n  arrow     : CLASS_ARROW,\r\n  prev      : CLASS_ARROW_PREV,\r\n  next      : CLASS_ARROW_NEXT,\r\n  pagination: CLASS_PAGINATION,\r\n  page      : CLASS_PAGINATION_PAGE,\r\n  spinner   : CLASS_SPINNER,\r\n};\r\n","import {\r\n  CLASS_ACTIVE,\r\n  CLASS_ARROW_NEXT,\r\n  CLASS_ARROW_PREV,\r\n  CLASS_ARROWS,\r\n  CLASS_AUTOPLAY,\r\n  CLASS_CLONE,\r\n  CLASS_LIST,\r\n  CLASS_PAUSE,\r\n  CLASS_PLAY,\r\n  CLASS_PROGRESS,\r\n  CLASS_PROGRESS_BAR,\r\n  CLASS_ROOT,\r\n  CLASS_SLIDE,\r\n  CLASS_SLIDER,\r\n  CLASS_TRACK,\r\n} from '../../constants/classes';\r\nimport { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { DEFAULT_EVENT_PRIORITY } from '../../constants/priority';\r\nimport { PROJECT_CODE } from '../../constants/project';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  assert,\r\n  assign,\r\n  child,\r\n  children,\r\n  empty,\r\n  push,\r\n  query,\r\n  removeAttribute,\r\n  removeClass,\r\n  uniqueId,\r\n} from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementCollection {\r\n  root: HTMLElement;\r\n  slider: HTMLElement;\r\n  track: HTMLElement;\r\n  list: HTMLElement;\r\n  slides: HTMLElement[];\r\n  arrows: HTMLElement;\r\n  prev: HTMLButtonElement;\r\n  next: HTMLButtonElement;\r\n  bar: HTMLElement;\r\n  autoplay: HTMLElement;\r\n  play: HTMLButtonElement;\r\n  pause: HTMLButtonElement;\r\n}\r\n\r\n/**\r\n * The interface for the Elements component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementsComponent extends BaseComponent, ElementCollection {\r\n}\r\n\r\n/**\r\n * The component that collects and handles elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Elements component object.\r\n */\r\nexport function Elements( Splide: Splide, Components: Components, options: Options ): ElementsComponent {\r\n  const { on } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const elements: ElementCollection = {} as ElementCollection;\r\n\r\n  /**\r\n   * Stores all slide elements.\r\n   */\r\n  const slides: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Stores all root classes.\r\n   */\r\n  let classes: string[];\r\n\r\n  /**\r\n   * The slider element that may be `undefined`.\r\n   */\r\n  let slider: HTMLElement;\r\n\r\n  /**\r\n   * The track element.\r\n   */\r\n  let track: HTMLElement;\r\n\r\n  /**\r\n   * The list element.\r\n   */\r\n  let list: HTMLElement;\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    collect();\r\n    identify();\r\n    addClass( root, ( classes = getClasses() ) );\r\n  }\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_REFRESH, refresh, DEFAULT_EVENT_PRIORITY - 2 );\r\n    on( EVENT_UPDATED, update );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    [ root, track, list ].forEach( elm => {\r\n      removeAttribute( elm, 'style' );\r\n    } );\r\n\r\n    empty( slides );\r\n    removeClass( root, classes );\r\n  }\r\n\r\n  /**\r\n   * Recollects slide elements.\r\n   */\r\n  function refresh(): void {\r\n    destroy();\r\n    setup();\r\n  }\r\n\r\n  /**\r\n   * Updates the status of elements.\r\n   */\r\n  function update(): void {\r\n    removeClass( root, classes );\r\n    addClass( root, ( classes = getClasses() ) );\r\n  }\r\n\r\n  /**\r\n   * Collects elements which the slider consists of.\r\n   */\r\n  function collect(): void {\r\n    slider = child( root, `.${ CLASS_SLIDER }` );\r\n    track  = query( root, `.${ CLASS_TRACK }` );\r\n    list   = child( track, `.${ CLASS_LIST }` );\r\n\r\n    assert( track && list, 'A track/list element is missing.' );\r\n\r\n    push( slides, children( list, `.${ CLASS_SLIDE }:not(.${ CLASS_CLONE })` ) );\r\n\r\n    const autoplay = find( `.${ CLASS_AUTOPLAY }` );\r\n    const arrows   = find( `.${ CLASS_ARROWS }` );\r\n\r\n    assign( elements, {\r\n      root,\r\n      slider,\r\n      track,\r\n      list,\r\n      slides,\r\n      arrows,\r\n      autoplay,\r\n      prev : query( arrows, `.${ CLASS_ARROW_PREV }` ),\r\n      next : query( arrows, `.${ CLASS_ARROW_NEXT }` ),\r\n      bar  : query( find( `.${ CLASS_PROGRESS }` ), `.${ CLASS_PROGRESS_BAR }` ),\r\n      play : query( autoplay, `.${ CLASS_PLAY }` ),\r\n      pause: query( autoplay, `.${ CLASS_PAUSE }` ),\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Assigns unique IDs to essential elements.\r\n   */\r\n  function identify(): void {\r\n    const id = root.id || uniqueId( PROJECT_CODE );\r\n    root.id  = id;\r\n    track.id = track.id || `${ id }-track`;\r\n    list.id  = list.id || `${ id }-list`;\r\n  }\r\n\r\n  /**\r\n   * Finds an element only in children of the root or slider element.\r\n   *\r\n   * @return {Element} - A found element or undefined.\r\n   */\r\n  function find( selector: string ): HTMLElement {\r\n    return child( root, selector ) || child( slider, selector );\r\n  }\r\n\r\n  /**\r\n   * Return an array with classes for the root element.\r\n   *\r\n   * @return An array with classes.\r\n   */\r\n  function getClasses(): string[] {\r\n    return [\r\n      `${ CLASS_ROOT }--${ options.type }`,\r\n      `${ CLASS_ROOT }--${ options.direction }`,\r\n      options.drag && `${ CLASS_ROOT }--draggable`,\r\n      options.isNavigation && `${ CLASS_ROOT }--nav`,\r\n      CLASS_ACTIVE,\r\n    ];\r\n  }\r\n\r\n  return assign( elements, {\r\n    setup,\r\n    mount,\r\n    destroy,\r\n  } );\r\n}\r\n","export const ROLE             = 'role';\r\nexport const ARIA_CONTROLS    = 'aria-controls';\r\nexport const ARIA_CURRENT     = 'aria-current';\r\nexport const ARIA_LABEL       = 'aria-label';\r\nexport const ARIA_HIDDEN      = 'aria-hidden';\r\nexport const TAB_INDEX        = 'tabindex';\r\nexport const DISABLED         = 'disabled';\r\nexport const ARIA_ORIENTATION = 'aria-orientation';\r\n\r\n/**\r\n * The array with all attributes.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ALL_ATTRIBUTES = [\r\n  ROLE,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_LABEL,\r\n  ARIA_HIDDEN,\r\n  ARIA_ORIENTATION,\r\n  TAB_INDEX,\r\n  DISABLED,\r\n];\r\n","/**\r\n * The type for the regular slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SLIDE = 'slide';\r\n\r\n/**\r\n * The type for the carousel slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOOP = 'loop';\r\n\r\n/**\r\n * The type for the fade slider that can not have multiple slides in a page.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FADE = 'fade';\r\n","import {\r\n  ALL_ATTRIBUTES,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_HIDDEN,\r\n  ARIA_LABEL,\r\n  ROLE,\r\n  TAB_INDEX,\r\n} from '../../constants/attributes';\r\nimport {\r\n  CLASS_ACTIVE,\r\n  CLASS_CONTAINER,\r\n  CLASS_NEXT,\r\n  CLASS_PREV,\r\n  CLASS_VISIBLE,\r\n  STATUS_CLASSES,\r\n} from '../../constants/classes';\r\nimport {\r\n  EVENT_ACTIVE,\r\n  EVENT_CLICK,\r\n  EVENT_HIDDEN,\r\n  EVENT_INACTIVE,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_NAVIGATION_MOUNTED,\r\n  EVENT_REFRESH,\r\n  EVENT_REPOSITIONED,\r\n  EVENT_SCROLLED,\r\n  EVENT_SHIFTED,\r\n  EVENT_SLIDE_KEYDOWN,\r\n  EVENT_VISIBLE,\r\n} from '../../constants/events';\r\nimport { FADE, LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent } from '../../types';\r\nimport {\r\n  abs,\r\n  ceil,\r\n  child,\r\n  floor,\r\n  format,\r\n  getAttribute,\r\n  hasClass,\r\n  min,\r\n  pad,\r\n  queryAll,\r\n  rect,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  style as _style,\r\n  toggleClass,\r\n} from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Slide sub component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface  SlideComponent extends BaseComponent {\r\n  index: number;\r\n  slideIndex: number;\r\n  slide: HTMLElement;\r\n  container: HTMLElement;\r\n  isClone: boolean;\r\n  update(): void;\r\n  style( prop: string, value: string | number, useContainer?: boolean ): void\r\n  isWithin( from: number, distance: number ): boolean;\r\n}\r\n\r\n/**\r\n * The sub component for managing each slide.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param index      - A slide index.\r\n * @param slideIndex - A slide index for clones. This must be `-1` if the slide is not a clone.\r\n * @param slide      - A slide element.\r\n *\r\n * @return A Slide sub component.\r\n */\r\nexport function Slide( Splide: Splide, index: number, slideIndex: number, slide: HTMLElement ): SlideComponent {\r\n  const { on, emit, bind, destroy: destroyEvents } = EventInterface( Splide );\r\n  const { Components, root, options } = Splide;\r\n  const { isNavigation, updateOnMove } = options;\r\n  const { resolve } = Components.Direction;\r\n  const styles         = getAttribute( slide, 'style' );\r\n  const isClone        = slideIndex > -1;\r\n  const container      = child( slide, `.${ CLASS_CONTAINER }` );\r\n  const focusableNodes = options.focusableNodes && queryAll( slide, options.focusableNodes );\r\n\r\n  /**\r\n   * Turns into `true` when the component is destroyed.\r\n   */\r\n  let destroyed: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount( this: SlideComponent ): void {\r\n    if ( ! isClone ) {\r\n      slide.id = `${ root.id }-slide${ pad( index + 1 ) }`;\r\n    }\r\n\r\n    bind( slide, 'click keydown', e => {\r\n      emit( e.type === 'click' ? EVENT_CLICK : EVENT_SLIDE_KEYDOWN, self, e );\r\n    } );\r\n\r\n    on( [ EVENT_REFRESH, EVENT_REPOSITIONED, EVENT_SHIFTED, EVENT_MOVED, EVENT_SCROLLED ], update );\r\n    on( EVENT_NAVIGATION_MOUNTED, initNavigation );\r\n\r\n    if ( updateOnMove ) {\r\n      on( EVENT_MOVE, onMove );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    destroyed = true;\r\n    destroyEvents();\r\n    removeClass( slide, STATUS_CLASSES );\r\n    removeAttribute( slide, ALL_ATTRIBUTES );\r\n    setAttribute( slide, 'style', styles );\r\n  }\r\n\r\n  /**\r\n   * Initializes slides as navigation.\r\n   */\r\n  function initNavigation(): void {\r\n    const idx      = isClone ? slideIndex : index;\r\n    const label    = format( options.i18n.slideX, idx + 1 );\r\n    const controls = Splide.splides.map( target => target.splide.root.id ).join( ' ' );\r\n\r\n    setAttribute( slide, ARIA_LABEL, label );\r\n    setAttribute( slide, ARIA_CONTROLS, controls );\r\n    setAttribute( slide, ROLE, 'menuitem' );\r\n\r\n    updateActivity( isActive() );\r\n  }\r\n\r\n  /**\r\n   * If the `updateOnMove` option is `true`, called when the slider starts moving.\r\n   */\r\n  function onMove(): void {\r\n    if ( ! destroyed ) {\r\n      update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates attribute and classes of the slide.\r\n   */\r\n  function update(): void {\r\n    if ( ! destroyed ) {\r\n      const { index: currIndex } = Splide;\r\n\r\n      updateActivity( isActive() );\r\n      updateVisibility( isVisible() );\r\n\r\n      toggleClass( slide, CLASS_PREV, index === currIndex - 1 );\r\n      toggleClass( slide, CLASS_NEXT, index === currIndex + 1 );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the status related with activity.\r\n   *\r\n   * @param active - Set `true` if the slide is active.\r\n   */\r\n  function updateActivity( active: boolean ): void {\r\n    if ( active !== hasClass( slide, CLASS_ACTIVE ) ) {\r\n      toggleClass( slide, CLASS_ACTIVE, active );\r\n\r\n      if ( isNavigation ) {\r\n        setAttribute( slide, ARIA_CURRENT, active || null );\r\n      }\r\n\r\n      emit( active ? EVENT_ACTIVE : EVENT_INACTIVE, self );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates classes and attributes related with visibility.\r\n   *\r\n   * @param visible - Set `true` if the slide is visible.\r\n   */\r\n  function updateVisibility( visible: boolean ): void {\r\n    const hidden = ! visible && ( ! isActive() || isClone );\r\n\r\n    setAttribute( slide, ARIA_HIDDEN, hidden || null );\r\n    setAttribute( slide, TAB_INDEX, ! hidden && options.slideFocus ? 0 : null );\r\n\r\n    if ( focusableNodes ) {\r\n      focusableNodes.forEach( node => {\r\n        setAttribute( node, TAB_INDEX, hidden ? -1 : null );\r\n      } );\r\n    }\r\n\r\n    if ( visible !== hasClass( slide, CLASS_VISIBLE ) ) {\r\n      toggleClass( slide, CLASS_VISIBLE, visible );\r\n      emit( visible ? EVENT_VISIBLE : EVENT_HIDDEN, self );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS rule to the slider or the container.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\r\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\r\n    _style( ( useContainer && container ) || slide, prop, value );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is active or not.\r\n   *\r\n   * @return `true` if the slide is active.\r\n   */\r\n  function isActive(): boolean {\r\n    const { index: curr } = Splide;\r\n    return curr === index || ( options.cloneStatus && curr === slideIndex );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is visible or not.\r\n   */\r\n  function isVisible(): boolean {\r\n    if ( Splide.is( FADE ) ) {\r\n      return isActive();\r\n    }\r\n\r\n    const trackRect = rect( Components.Elements.track );\r\n    const slideRect = rect( slide );\r\n    const left      = resolve( 'left' );\r\n    const right     = resolve( 'right' );\r\n\r\n    return floor( trackRect[ left ] ) <= ceil( slideRect[ left ] )\r\n      && floor( slideRect[ right ] ) <= ceil( trackRect[ right ] );\r\n  }\r\n\r\n  /**\r\n   * Calculates how far this slide is from another slide and\r\n   * returns `true` if the distance is within the given number.\r\n   *\r\n   * @param from     - An index of a base slide.\r\n   * @param distance - `true` if the slide is within this number.\r\n   *\r\n   * @return `true` if the slide is within the `distance` from the base slide, or otherwise `false`.\r\n   */\r\n  function isWithin( from: number, distance: number ): boolean {\r\n    let diff = abs( from - index );\r\n\r\n    if ( ! isClone && ( options.rewind || Splide.is( LOOP ) ) ) {\r\n      diff = min( diff, Splide.length - diff );\r\n    }\r\n\r\n    return diff <= distance;\r\n  }\r\n\r\n  const self = {\r\n    index,\r\n    slideIndex,\r\n    slide,\r\n    container,\r\n    isClone,\r\n    mount,\r\n    destroy,\r\n    update,\r\n    style,\r\n    isWithin,\r\n  };\r\n\r\n  return self;\r\n}\r\n","import { EVENT_MOUNTED, EVENT_REFRESH, EVENT_RESIZE } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  append,\n  before,\n  between,\n  empty,\n  forEach as forEachItem,\n  includes,\n  isFunction,\n  isHTMLElement,\n  isString,\n  matches,\n  parseHtml,\n  queryAll,\n  remove as removeNode,\n  toArray,\n} from '../../utils';\nimport { Slide, SlideComponent } from './Slide';\n\n\n/**\n * The interface for the Slides component.\n *\n * @since 3.0.0\n */\nexport interface  SlidesComponent extends BaseComponent {\n  update(): void;\n  register( slide: HTMLElement, index: number, slideIndex: number ): void;\n  get( excludeClones?: boolean ): SlideComponent[];\n  getIn( page: number ): SlideComponent[];\n  getAt( index: number ): SlideComponent | undefined;\n  add( slide: string | Element | Array<string | Element>, index?: number ): void;\n  remove( selector: SlideMatcher ): void;\n  forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void;\n  filter( matcher: SlideMatcher ): SlideComponent[];\n  style( prop: string, value: string | number, useContainer?: boolean ): void\n  getLength( excludeClones?: boolean ): number;\n  isEnough(): boolean;\n}\n\n/**\n * The iteratee function for Slides.\n *\n * @since 3.0.0\n */\nexport type SlidesIteratee = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => void\n\n/**\n * The predicate function for Slides.\n *\n * @since 3.0.0\n */\nexport type SlidesPredicate = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => any\n\n/**\n * The type for filtering SlideComponent objects.\n *\n * @since 3.0.0\n */\nexport type SlideMatcher = number | number[] | string | SlidesPredicate;\n\n/**\n * The component for managing all slides include clones.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return An Slides component object.\n */\nexport function Slides( Splide: Splide, Components: Components, options: Options ): SlidesComponent {\n  const { on, emit, bind } = EventInterface( Splide );\n  const { slides, list } = Components.Elements;\n\n  /**\n   * Stores all SlideComponent objects.\n   */\n  const Slides: SlideComponent[] = [];\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( EVENT_REFRESH, refresh );\n    on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\n      Slides.sort( ( Slide1, Slide2 ) => Slide1.index - Slide2.index );\n    } );\n  }\n\n  /**\n   * Initializes the component.\n   */\n  function init(): void {\n    slides.forEach( ( slide, index ) => { register( slide, index, -1 ) } );\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    forEach( Slide => { Slide.destroy() } );\n    empty( Slides );\n  }\n\n  /**\n   * Discards all Slide components and regenerates them.\n   */\n  function refresh(): void {\n    destroy();\n    init();\n  }\n\n  /**\n   * Manually updates the status of all slides.\n   */\n  function update(): void {\n    forEach( Slide => { Slide.update() } );\n  }\n\n  /**\n   * Registers a slide element and creates a Slide object.\n   *\n   * @param slide      - A slide element to register.\n   * @param index      - A slide index.\n   * @param slideIndex - A slide index for clones. This must be `-1` for regular slides.\n   */\n  function register( slide: HTMLElement, index: number, slideIndex: number ): void {\n    const object = Slide( Splide, index, slideIndex, slide );\n    object.mount();\n    Slides.push( object );\n  }\n\n  /**\n   * Returns all Slide objects.\n   *\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   *\n   * @return An array with Slide objects.\n   */\n  function get( excludeClones?: boolean ): SlideComponent[] {\n    return excludeClones ? filter( Slide => ! Slide.isClone ) : Slides;\n  }\n\n  /**\n   * Returns slides in the specified page.\n   *\n   * @param page - A page index.\n   *\n   * @return An array with slides that belong to the page.\n   */\n  function getIn( page: number ): SlideComponent[] {\n    const { Controller } = Components;\n    const index = Controller.toIndex( page );\n    const max   = Controller.hasFocus() ? 1 : options.perPage;\n    return filter( Slide => between( Slide.index, index, index + max - 1 ) );\n  }\n\n  /**\n   * Returns a Slide object at the specified index.\n   *\n   * @param index - A slide index.\n   *\n   * @return A Slide object if available, or otherwise `undefined`.\n   */\n  function getAt( index: number ): SlideComponent | undefined {\n    return filter( index )[ 0 ];\n  }\n\n  /**\n   * Inserts a slide or slides at a specified index.\n   *\n   * @param items - A slide element, an HTML string or an array with them.\n   * @param index - Optional. An index to insert the slide at. If omitted, appends it to the list.\n   */\n  function add( items: string | Element | Array<string | Element>, index?: number ): void {\n    forEachItem( items, slide => {\n      if ( isString( slide ) ) {\n        slide = parseHtml( slide );\n      }\n\n      if ( isHTMLElement( slide ) ) {\n        const ref = slides[ index ];\n        ref ? before( slide, ref ) : append( list, slide );\n        addClass( slide, options.classes.slide );\n        observeImages( slide, emit.bind( null, EVENT_RESIZE ) );\n      }\n    } );\n\n    emit( EVENT_REFRESH );\n  }\n\n  /**\n   * Removes slides that match the matcher\n   * that can be an index, an array with indices, a selector, or an iteratee function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\n   */\n  function remove( matcher: SlideMatcher ): void {\n    removeNode( filter( matcher ).map( Slide => Slide.slide ) );\n    emit( EVENT_REFRESH );\n  }\n\n  /**\n   * Iterates over Slide objects by the iteratee function.\n   *\n   * @param iteratee      - An iteratee function that takes a Slide object, an index and an array with Slides.\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   */\n  function forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void {\n    get( excludeClones ).forEach( iteratee );\n  }\n\n  /**\n   * Filters Slides by the matcher\n   * that can be an index, an array with indices, a selector, or a predicate function.\n   *\n   * @param matcher - An index, an array with indices, a selector string, or a predicate function.\n   *\n   * @return An array with SlideComponent objects.\n   */\n  function filter( matcher: SlideMatcher ): SlideComponent[] {\n    return Slides.filter( isFunction( matcher )\n      ? matcher\n      : Slide => isString( matcher )\n        ? matches( Slide.slide, matcher )\n        : includes( toArray( matcher ), Slide.index )\n    );\n  }\n\n  /**\n   * Adds a CSS rule to all slides or containers.\n   *\n   * @param prop         - A property name.\n   * @param value        - A CSS value to add.\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\n   */\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\n    forEach( Slide => { Slide.style( prop, value, useContainer ) } );\n  }\n\n  /**\n   * Invokes the callback after all images in the element are loaded.\n   *\n   * @param elm      - An element that may contain images.\n   * @param callback - A callback function.\n   */\n  function observeImages( elm: Element, callback: AnyFunction ): void {\n    const images = queryAll( elm, 'img' );\n    let { length } = images;\n\n    if ( length ) {\n      images.forEach( img => {\n        bind( img, 'load error', () => {\n          if ( ! --length ) {\n            callback();\n          }\n        } );\n      } );\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * Returns the length of slides.\n   *\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\n   *\n   * @return The length of slides.\n   */\n  function getLength( excludeClones?: boolean ): number {\n    return excludeClones ? slides.length : Slides.length;\n  }\n\n  /**\n   * Checks if the number of slides is over than the `perPage` option, including clones.\n   *\n   * @return `true` if there are enough slides, or otherwise `false`.\n   */\n  function isEnough(): boolean {\n    return Slides.length > options.perPage;\n  }\n\n  return {\n    mount,\n    destroy,\n    update,\n    register,\n    get,\n    getIn,\n    getAt,\n    add,\n    remove,\n    forEach,\n    filter,\n    style,\n    getLength,\n    isEnough,\n  };\n}\n","import { TTB } from '../../constants/directions';\r\nimport { EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface, Throttle } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, assert, isObject, rect, style, unit } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Layout component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LayoutComponent extends BaseComponent {\r\n  listSize(): number;\r\n  slideSize( index: number, withoutGap?: boolean ): number;\r\n  sliderSize(): number;\r\n  totalSize( index?: number, withoutGap?: boolean ): number;\r\n  getPadding( right: boolean ): number;\r\n}\r\n\r\n/**\r\n * The component that layouts slider components and provides methods for dimensions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Layout component object.\r\n */\r\nexport function Layout( Splide: Splide, Components: Components, options: Options ): LayoutComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const { Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n  const { root, track, list } = Components.Elements;\r\n  const { getAt } = Slides;\r\n\r\n  /**\r\n   * Indicates whether the slider direction is vertical or not.\r\n   */\r\n  let vertical: boolean;\r\n\r\n  /**\r\n   * Keeps the DOMRect object of the root element.\r\n   */\r\n  let rootRect: DOMRect;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    bind( window, 'resize load', Throttle( emit.bind( this, EVENT_RESIZE ) ) );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\r\n    on( EVENT_RESIZE, resize );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component on `mount` or `updated`.\r\n   * Uses `max-width` for the root to prevent the slider from exceeding the parent element.\r\n   */\r\n  function init(): void {\r\n    rootRect = null;\r\n    vertical = options.direction === TTB;\r\n\r\n    style( root, 'maxWidth', unit( options.width ) );\r\n    style( track, resolve( 'paddingLeft' ), cssPadding( false ) );\r\n    style( track, resolve( 'paddingRight' ), cssPadding( true ) );\r\n\r\n    resize();\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions of some elements when the slider is resized.\r\n   */\r\n  function resize(): void {\r\n    const newRect = rect( root );\r\n\r\n    if ( ! rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height ) {\r\n      style( track, 'height', cssTrackHeight() );\r\n\r\n      Slides.style( resolve( 'marginRight' ), unit( options.gap ) );\r\n      Slides.style( 'width', cssSlideWidth() || null );\r\n      setSlidesHeight();\r\n\r\n      rootRect = newRect;\r\n      emit( EVENT_RESIZED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the height of slides or their container elements if available.\r\n   */\r\n  function setSlidesHeight(): void {\r\n    Slides.style( 'height', cssSlideHeight() || null, true );\r\n  }\r\n\r\n  /**\r\n   * Parses the padding option and returns the value for each side.\r\n   * This method returns `paddingTop` or `paddingBottom` for the vertical slider.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value as a CSS string.\r\n   */\r\n  function cssPadding( right: boolean ): string {\r\n    const { padding } = options;\r\n    const prop = resolve( right ? 'right' : 'left' );\r\n    return padding && unit( padding[ prop ] || ( isObject( padding ) ? 0 : padding ) ) || '0px';\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the track element as a CSS string.\r\n   *\r\n   * @return The height of the track.\r\n   */\r\n  function cssTrackHeight(): string {\r\n    let height = '';\r\n\r\n    if ( vertical ) {\r\n      height = cssHeight();\r\n      assert( height, 'height or heightRatio is missing.' );\r\n      height = `calc(${ height } - ${ cssPadding( false ) } - ${ cssPadding( true ) })`;\r\n    }\r\n\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * Converts options related with height to a CSS string.\r\n   *\r\n   * @return The height as a CSS string if available, or otherwise an empty string.\r\n   */\r\n  function cssHeight(): string {\r\n    return unit( options.height || rect( list ).width * options.heightRatio );\r\n  }\r\n\r\n  /**\r\n   * Returns the width of the slide as a CSS string.\r\n   *\r\n   * @return The width of the slide.\r\n   */\r\n  function cssSlideWidth(): string {\r\n    return options.autoWidth ? '' : unit( options.fixedWidth ) || ( vertical ? '' : cssSlideSize() );\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the slide as a CSS string.\r\n   *\r\n   * @return The height of the slide.\r\n   */\r\n  function cssSlideHeight(): string {\r\n    return unit( options.fixedHeight )\r\n      || ( vertical ? ( options.autoHeight ? '' : cssSlideSize() ) : cssHeight() );\r\n  }\r\n\r\n  /**\r\n   * Returns the CSS string for slide width or height without gap.\r\n   *\r\n   * @return The CSS string for slide width or height.\r\n   */\r\n  function cssSlideSize(): string {\r\n    const gap = unit( options.gap );\r\n    return `calc((100%${ gap && ` + ${ gap }` })/${ options.perPage || 1 }${ gap && ` - ${ gap }` })`;\r\n  }\r\n\r\n  /**\r\n   * Returns the list width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @return The size of the track element in pixel.\r\n   */\r\n  function listSize(): number {\r\n    return rect( list )[ resolve( 'width' ) ];\r\n  }\r\n\r\n  /**\r\n   * Returns the slide width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @param index      - Optional. A slide index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the gap amount or not.\r\n   *\r\n   * @return The size of the specified slide element in pixel.\r\n   */\r\n  function slideSize( index?: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index || 0 );\r\n    return Slide\r\n      ? rect( Slide.slide )[ resolve( 'width' ) ] + ( withoutGap ? 0 : getGap() )\r\n      : 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the total width or height of slides from the head of the slider to the specified index.\r\n   * This includes sizes of clones before the first slide.\r\n   *\r\n   * @param index      - A slide index. If omitted, uses the last index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\r\n   *\r\n   * @return The total width of slides in the horizontal slider, or the height in the vertical one.\r\n   */\r\n  function totalSize( index: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index );\r\n\r\n    if ( Slide ) {\r\n      const right = rect( Slide.slide )[ resolve( 'right' ) ];\r\n      const left  = rect( list )[ resolve( 'left' ) ];\r\n      return abs( right - left ) + ( withoutGap ? 0 : getGap() );\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the slider size without clones before the first slide.\r\n   *\r\n   * @return The width or height of the slider without clones.\r\n   */\r\n  function sliderSize(): number {\r\n    return totalSize( Splide.length - 1, true ) - totalSize( -1, true );\r\n  }\r\n\r\n  /**\r\n   * Returns the gap value.\r\n   *\r\n   * @return The gap value in pixel.\r\n   */\r\n  function getGap(): number {\r\n    const Slide = getAt( 0 );\r\n    return Slide && parseFloat( style( Slide.slide, resolve( 'marginRight' ) ) ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the padding value.\r\n   * This method resolves the difference of the direction.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value in pixel.\r\n   */\r\n  function getPadding( right: boolean ): number {\r\n    return parseFloat( style( track, resolve( `padding${ right ? 'Right' : 'Left' }` ) ) ) || 0;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    listSize,\r\n    slideSize,\r\n    sliderSize,\r\n    totalSize,\r\n    getPadding,\r\n  };\r\n}\r\n","import { EVENT_REFRESH, EVENT_RESIZE, EVENT_UPDATED } from '../../constants/events';\r\nimport { LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { addClass, append, before, ceil, empty, measure, pad, push, rect, remove } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Clone component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ClonesComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component that generates clones for the loop slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Clones component object.\r\n */\r\nexport function Clones( Splide: Splide, Components: Components, options: Options ): ClonesComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { Elements, Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * Stores all cloned elements.\r\n   */\r\n  const clones: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Keeps the current number of clones.\r\n   */\r\n  let cloneCount: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_REFRESH, refresh );\r\n    on( [ EVENT_UPDATED, EVENT_RESIZE ], observe );\r\n  }\r\n\r\n  /**\r\n   * Removes all clones if available, and generates new clones.\r\n   */\r\n  function init(): void {\r\n    if ( ( cloneCount = computeCloneCount() ) ) {\r\n      generate( cloneCount );\r\n      emit( EVENT_RESIZE );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys clones.\r\n   */\r\n  function destroy(): void {\r\n    remove( clones );\r\n    empty( clones );\r\n  }\r\n\r\n  /**\r\n   * Discards all clones and regenerates them.\r\n   * Must do this before the Elements component collects slide elements.\r\n   */\r\n  function refresh(): void {\r\n    destroy();\r\n    init();\r\n  }\r\n\r\n  /**\r\n   * Observes the required clone count and refreshes the slider if necessary.\r\n   */\r\n  function observe(): void {\r\n    if ( cloneCount < computeCloneCount() ) {\r\n      emit( EVENT_REFRESH );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates the specified number of clones.\r\n   *\r\n   * @param count - The number of clones to generate for each side.\r\n   */\r\n  function generate( count: number ): void {\r\n    const slides = Slides.get().slice();\r\n    const { length } = slides;\r\n\r\n    if ( length ) {\r\n      while ( slides.length < count ) {\r\n        push( slides, slides );\r\n      }\r\n\r\n      push( slides.slice( -count ), slides.slice( 0, count ) ).forEach( ( Slide, index ) => {\r\n        const isHead = index < count;\r\n        const clone  = cloneDeep( Slide.slide, index );\r\n        isHead ? before( clone, slides[ 0 ].slide ) : append( Elements.list, clone );\r\n        push( clones, clone );\r\n        Slides.register( clone, index - count + ( isHead ? 0 : length ), Slide.index );\r\n      } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deeply clones the provided element with removing the ID attribute.\r\n   *\r\n   * @param elm   - An element to clone.\r\n   * @param index - An index of the clone.\r\n   *\r\n   * @return A cloned element.\r\n   */\r\n  function cloneDeep( elm: HTMLElement, index: number ): HTMLElement {\r\n    const clone = elm.cloneNode( true ) as HTMLElement;\r\n    addClass( clone, options.classes.clone );\r\n    clone.id = `${ Splide.root.id }-clone${ pad( index + 1 ) }`;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Returns the number of elements to generate.\r\n   * This always returns 0 if the slider type is not `'loop'`.\r\n   *\r\n   * @return The number of clones.\r\n   */\r\n  function computeCloneCount(): number {\r\n    let { clones } = options;\r\n\r\n    if ( ! Splide.is( LOOP ) ) {\r\n      clones = 0;\r\n    } else if ( ! clones ) {\r\n      const fixedSize  = measure( Elements.list, options[ resolve( 'fixedWidth' ) ] );\r\n      const fixedCount = fixedSize && ceil( rect( Elements.track )[ resolve( 'width' ) ] / fixedSize );\r\n      const baseCount  = fixedCount || ( options[ resolve( 'autoWidth' ) ] && Splide.length ) || options.perPage;\r\n\r\n      clones = baseCount * ( options.drag ? ( options.flickMaxPages || 1 ) + 1 : 2 );\r\n    }\r\n\r\n    return clones;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","import {\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_REPOSITIONED,\r\n  EVENT_RESIZED,\r\n  EVENT_SHIFTED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { IDLE, MOVING } from '../../constants/states';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, ceil, clamp, isUndefined, rect, removeAttribute } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Move component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface MoveComponent extends BaseComponent {\r\n  move( dest: number, index: number, prev: number, callback?: AnyFunction ): void;\r\n  jump( index: number ): void;\r\n  translate( position: number, preventLoop?: boolean ): void;\r\n  shift( position: number, backwards: boolean ): number;\r\n  cancel(): void;\r\n  toIndex( position: number ): number;\r\n  toPosition( index: number, trimming?: boolean ): number;\r\n  getPosition(): number;\r\n  getLimit( max: boolean ): number;\r\n  isBusy(): boolean;\r\n  exceededLimit( max?: boolean | undefined, position?: number ): boolean;\r\n}\r\n\r\n/**\r\n * The component for moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Move component object.\r\n */\r\nexport function Move( Splide: Splide, Components: Components, options: Options ): MoveComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components.Layout;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { list, track } = Components.Elements;\r\n\r\n  /**\r\n   * Holds the Transition component.\r\n   */\r\n  let Transition: TransitionComponent;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    Transition = Components.Transition;\r\n    on( [ EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH ], reposition );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    removeAttribute( list, 'style' );\r\n  }\r\n\r\n  /**\r\n   * Repositions the slider.\r\n   * - This must be called before the Slide component checks the visibility.\r\n   * - Do not call `cancel()` here because LazyLoad may emit resize while transitioning.\r\n   * - iOS Safari emits window resize event while the user swipes the slider because of the bottom bar.\r\n   */\r\n  function reposition(): void {\r\n    if ( ! isBusy() ) {\r\n      Components.Scroll.cancel();\r\n      jump( Splide.index );\r\n      emit( EVENT_REPOSITIONED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the dest index with the Transition component.\r\n   *\r\n   * @param dest     - A destination index to go to, including clones'.\r\n   * @param index    - A slide index.\r\n   * @param prev     - A previous index.\r\n   * @param callback - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function move( dest: number, index: number, prev: number, callback?: AnyFunction ): void {\r\n    if ( ! isBusy() ) {\r\n      const { set } = Splide.state;\r\n      const position = getPosition();\r\n\r\n      if ( dest !== index ) {\r\n        Transition.cancel();\r\n        translate( shift( position, dest > index ), true );\r\n      }\r\n\r\n      set( MOVING );\r\n      emit( EVENT_MOVE, index, prev, dest );\r\n\r\n      Transition.start( index, () => {\r\n        set( IDLE );\r\n        emit( EVENT_MOVED, index, prev, dest );\r\n\r\n        if ( options.trimSpace === 'move' && dest !== prev && position === getPosition() ) {\r\n          Components.Controller.go( dest > prev ? '>' : '<', false, callback );\r\n        } else {\r\n          callback && callback();\r\n        }\r\n      } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Jumps to the slide at the specified index.\r\n   *\r\n   * @param index - An index to jump to.\r\n   */\r\n  function jump( index: number ): void {\r\n    translate( toPosition( index, true ) );\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the provided position.\r\n   *\r\n   * @param position    - The position to move to.\r\n   * @param preventLoop - Optional. If `true`, sets the provided position as is.\r\n   */\r\n  function translate( position: number, preventLoop?: boolean ): void {\r\n    if ( ! Splide.is( FADE ) ) {\r\n      const destination = preventLoop ? position : loop( position );\r\n      list.style.transform = `translate${ resolve( 'X' ) }(${ destination }px)`;\r\n      position !== destination && emit( EVENT_SHIFTED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loops the provided position if it exceeds bounds.\r\n   *\r\n   * @param position - A position to loop.\r\n   */\r\n  function loop( position: number ): number {\r\n    if ( Splide.is( LOOP ) ) {\r\n      const diff        = orient( position - getPosition() );\r\n      const exceededMin = exceededLimit( false, position ) && diff < 0;\r\n      const exceededMax = exceededLimit( true, position ) && diff > 0;\r\n\r\n      if ( exceededMin || exceededMax ) {\r\n        position = shift( position, exceededMax );\r\n      }\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Adds or subtracts the slider width to the provided position.\r\n   *\r\n   * @param position  - A position to shift.\r\n   * @param backwards - Determines whether to shift the slider backwards or forwards.\r\n   *\r\n   * @return The shifted position.\r\n   */\r\n  function shift( position: number, backwards: boolean ): number {\r\n    const excess = position - getLimit( backwards );\r\n    const size   = sliderSize();\r\n    position -= orient( size * ( ceil( abs( excess ) / size ) || 1 ) ) * ( backwards ? 1 : -1 );\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Cancels transition.\r\n   */\r\n  function cancel(): void {\r\n    translate( getPosition() );\r\n    Transition.cancel();\r\n  }\r\n\r\n  /**\r\n   * Returns the closest index to the position.\r\n   *\r\n   * @param position - A position to convert.\r\n   *\r\n   * @return The closest index to the position.\r\n   */\r\n  function toIndex( position: number ): number {\r\n    const Slides = Components.Slides.get();\r\n\r\n    let index       = 0;\r\n    let minDistance = Infinity;\r\n\r\n    for ( let i = 0; i < Slides.length; i++ ) {\r\n      const slideIndex = Slides[ i ].index;\r\n      const distance   = abs( toPosition( slideIndex, true ) - position );\r\n\r\n      if ( distance <= minDistance ) {\r\n        minDistance = distance;\r\n        index       = slideIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the position.\r\n   *\r\n   * @param index    - An index to convert.\r\n   * @param trimming - Optional. Whether to trim edge spaces or not.\r\n   *\r\n   * @return The position corresponding with the index.\r\n   */\r\n  function toPosition( index: number, trimming?: boolean ): number {\r\n    const position = orient( totalSize( index - 1 ) - offset( index ) );\r\n    return trimming ? trim( position ) : position;\r\n  }\r\n\r\n  /**\r\n   * Returns the current position.\r\n   *\r\n   * @return The position of the list element.\r\n   */\r\n  function getPosition(): number {\r\n    const left = resolve( 'left' );\r\n    return rect( list )[ left ] - rect( track )[ left ] + orient( getPadding( false ) );\r\n  }\r\n\r\n  /**\r\n   * Trims spaces on the edge of the slider.\r\n   *\r\n   * @param position - A position to trim.\r\n   *\r\n   * @return A trimmed position.\r\n   */\r\n  function trim( position: number ): number {\r\n    if ( options.trimSpace && Splide.is( SLIDE ) ) {\r\n      position = clamp( position, 0, orient( sliderSize() - listSize() ) );\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Returns the offset amount.\r\n   *\r\n   * @param index - An index.\r\n   */\r\n  function offset( index: number ): number {\r\n    const { focus } = options;\r\n    return focus === 'center' ? ( listSize() - slideSize( index, true ) ) / 2 : +focus * slideSize( index ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the limit number that the slider can move to.\r\n   *\r\n   * @param max - Determines whether to return the maximum or minimum limit.\r\n   *\r\n   * @return The border number.\r\n   */\r\n  function getLimit( max: boolean ): number {\r\n    return toPosition( max ? Components.Controller.getEnd() : 0, !! options.trimSpace );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slider can move now or not.\r\n   *\r\n   * @return `true` if the slider can move, or otherwise `false`.\r\n   */\r\n  function isBusy(): boolean {\r\n    return Splide.state.is( MOVING ) && options.waitForTransition;\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided position exceeds the minimum or maximum limit or not.\r\n   *\r\n   * @param max      - Optional. `true` for testing max, `false` for min, and `undefined` for both.\r\n   * @param position - Optional. A position to test. If omitted, tests the current position.\r\n   *\r\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\r\n   */\r\n  function exceededLimit( max?: boolean | undefined, position?: number ): boolean {\r\n    position = isUndefined( position ) ? getPosition() : position;\r\n    const exceededMin = max !== true && orient( position ) < orient( getLimit( false ) );\r\n    const exceededMax = max !== false && orient( position ) > orient( getLimit( true ) );\r\n    return exceededMin || exceededMax;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    move,\r\n    jump,\r\n    translate,\r\n    shift,\r\n    cancel,\r\n    toIndex,\r\n    toPosition,\r\n    getPosition,\r\n    getLimit,\r\n    isBusy,\r\n    exceededLimit,\r\n  };\r\n}\r\n","import { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { DEFAULT_EVENT_PRIORITY } from '../../constants/priority';\r\nimport { LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { approximatelyEqual, between, clamp, floor, isString, isUndefined, max } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Controller component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ControllerComponent extends BaseComponent {\r\n  go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void;\r\n  scroll( destination: number, useIndex?: boolean, snap?: boolean, duration?: number, callback?: AnyFunction ): void;\r\n  getNext( destination?: boolean ): number;\r\n  getPrev( destination?: boolean ): number;\r\n  getAdjacent( prev: boolean, destination?: boolean ): number;\r\n  getEnd(): number;\r\n  setIndex( index: number ): void;\r\n  getIndex( prev?: boolean ): number;\r\n  toIndex( page: number ): number;\r\n  toPage( index: number ): number;\r\n  toDest( position: number ): number;\r\n  hasFocus(): boolean;\r\n}\r\n\r\n/**\r\n * The component for controlling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Controller component object.\r\n */\r\nexport function Controller( Splide: Splide, Components: Components, options: Options ): ControllerComponent {\r\n  const { on } = EventInterface( Splide );\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit } = Move;\r\n  const { isEnough, getLength } = Components.Slides;\r\n  const isLoop  = Splide.is( LOOP );\r\n  const isSlide = Splide.is( SLIDE );\r\n\r\n  /**\r\n   * The current index.\r\n   */\r\n  let currIndex = options.start || 0;\r\n\r\n  /**\r\n   * The previous index.\r\n   */\r\n  let prevIndex = currIndex;\r\n\r\n  /**\r\n   * The latest number of slides.\r\n   */\r\n  let slideCount: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perMove: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perPage: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init, DEFAULT_EVENT_PRIORITY - 1 );\r\n  }\r\n\r\n  /**\r\n   * Initializes some parameters.\r\n   * Needs to check the slides length since the current index may be out of the range after refresh.\r\n   */\r\n  function init(): void {\r\n    slideCount = getLength( true );\r\n    perMove    = options.perMove;\r\n    perPage    = options.perPage;\r\n    currIndex  = clamp( currIndex, 0, slideCount - 1 );\r\n  }\r\n\r\n  /**\r\n   * Moves the slider by the control pattern.\r\n   *\r\n   * @see `Splide#go()`\r\n   *\r\n   * @param control        - A control pattern.\r\n   * @param allowSameIndex - Optional. Determines whether to allow to go to the current index or not.\r\n   * @param callback       - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void {\r\n    const dest = parse( control );\r\n\r\n    if ( options.useScroll ) {\r\n      scroll( dest, true, true, options.speed, callback );\r\n    } else {\r\n      const index = loop( dest );\r\n\r\n      if ( index > -1 && ! Move.isBusy() && ( allowSameIndex || index !== currIndex ) ) {\r\n        setIndex( index );\r\n        Move.move( dest, index, prevIndex, callback );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the specified destination with updating indices.\r\n   *\r\n   * @param destination - A position or an index to scroll to.\r\n   * @param useIndex    - Optional. Whether to use an index as a destination or not.\r\n   * @param snap        - Optional. Whether to snap the closest slide or not.\r\n   * @param duration    - Optional. Specifies the scroll duration.\r\n   * @param callback    - Optional. A callback function invoked after scroll ends.\r\n   */\r\n  function scroll(\r\n    destination: number,\r\n    useIndex?: boolean,\r\n    snap?: boolean,\r\n    duration?: number,\r\n    callback?: AnyFunction\r\n  ): void {\r\n    const dest = useIndex ? destination : toDest( destination );\r\n\r\n    Components.Scroll.scroll( useIndex || snap ? Move.toPosition( dest, true ) : destination, duration, () => {\r\n      setIndex( Move.toIndex( Move.getPosition() ) );\r\n      callback && callback();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Parses the control and returns a slide index.\r\n   *\r\n   * @param control - A control pattern to parse.\r\n   *\r\n   * @return A `dest` index.\r\n   */\r\n  function parse( control: number | string ): number {\r\n    let index = currIndex;\r\n\r\n    if ( isString( control ) ) {\r\n      const [ , indicator, number ] = control.match( /([+\\-<>])(\\d+)?/ ) || [];\r\n\r\n      if ( indicator === '+' || indicator === '-' ) {\r\n        index = computeDestIndex( currIndex + +`${ indicator }${ +number || 1 }`, currIndex, true );\r\n      } else if ( indicator === '>' ) {\r\n        index = number ? toIndex( +number ) : getNext( true );\r\n      } else if ( indicator === '<' ) {\r\n        index = getPrev( true );\r\n      }\r\n    } else {\r\n      index = isLoop ? control : clamp( control, 0, getEnd() );\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Returns a next destination index.\r\n   *\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return A next index if available, or otherwise `-1`.\r\n   */\r\n  function getNext( destination?: boolean ): number {\r\n    return getAdjacent( false, destination );\r\n  }\r\n\r\n  /**\r\n   * Returns a previous destination index.\r\n   *\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return A previous index if available, or otherwise `-1`.\r\n   */\r\n  function getPrev( destination?: boolean ): number {\r\n    return getAdjacent( true, destination );\r\n  }\r\n\r\n  /**\r\n   * Returns an adjacent destination index.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param prev        - Determines whether to return a previous or next index.\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return An adjacent index if available, or otherwise `-1`.\r\n   */\r\n  function getAdjacent( prev: boolean, destination?: boolean ): number {\r\n    const number = perMove || ( hasFocus() ? 1 : perPage );\r\n    const dest   = computeDestIndex( currIndex + number * ( prev ? -1 : 1 ), currIndex );\r\n\r\n    if ( dest === -1 && isSlide ) {\r\n      if ( ! approximatelyEqual( getPosition(), getLimit( ! prev ), 1 ) ) {\r\n        return prev ? 0 : getEnd();\r\n      }\r\n    }\r\n\r\n    return destination ? dest : loop( dest );\r\n  }\r\n\r\n  /**\r\n   * Converts the desired destination index to the valid one.\r\n   * - This may return clone indices if the editor is the loop mode,\r\n   *   or `-1` if there is no slide to go.\r\n   * - There are still slides where the slider can go if borders are between `from` and `dest`.\r\n   *\r\n   * @param dest        - The desired destination.\r\n   * @param from        - A base index.\r\n   * @param incremental - Optional. Whether the control is incremental or not.\r\n   *\r\n   * @return A converted destination index, including clones.\r\n   */\r\n  function computeDestIndex( dest: number, from: number, incremental?: boolean ): number {\r\n    if ( isEnough() ) {\r\n      const end = getEnd();\r\n\r\n      // Will overrun:\r\n      if ( dest < 0 || dest > end ) {\r\n        if ( between( 0, dest, from, true ) || between( end, from, dest, true ) ) {\r\n          dest = toIndex( toPage( dest ) );\r\n        } else {\r\n          if ( isLoop ) {\r\n            dest = perMove || hasFocus()\r\n              ? dest\r\n              : dest < 0 ? - ( slideCount % perPage || perPage ) : slideCount;\r\n          } else if ( options.rewind ) {\r\n            dest = dest < 0 ? end : 0;\r\n          } else {\r\n            dest = -1;\r\n          }\r\n        }\r\n      } else {\r\n        if ( ! incremental && dest !== from ) {\r\n          dest = perMove ? dest : toIndex( toPage( from ) + ( dest < from ? -1 : 1 ) );\r\n        }\r\n      }\r\n    } else {\r\n      dest = -1;\r\n    }\r\n\r\n    return dest;\r\n  }\r\n\r\n  /**\r\n   * Returns the end index where the slider can go.\r\n   * For example, if the slider has 10 slides and the `perPage` option is 3,\r\n   * the slider can go to the slide 8 (the index is 7).\r\n   *\r\n   * @return An end index.\r\n   */\r\n  function getEnd(): number {\r\n    let end = slideCount - perPage;\r\n\r\n    if ( hasFocus() || ( isLoop && perMove ) ) {\r\n      end = slideCount - 1;\r\n    }\r\n\r\n    return max( end, 0 );\r\n  }\r\n\r\n  /**\r\n   * Loops the provided index only in the loop mode.\r\n   *\r\n   * @param index - An index to loop.\r\n   *\r\n   * @return A looped index.\r\n   */\r\n  function loop( index: number ): number {\r\n    if ( isLoop ) {\r\n      return isEnough() ? index % slideCount + ( index < 0 ? slideCount : 0 ) : -1;\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Converts the page index to the slide index.\r\n   *\r\n   * @param page - A page index to convert.\r\n   *\r\n   * @return A slide index.\r\n   */\r\n  function toIndex( page: number ): number {\r\n    return clamp( hasFocus() ? page : perPage * page, 0, getEnd() );\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the page index.\r\n   *\r\n   * @param index - An index to convert.\r\n   */\r\n  function toPage( index: number ): number {\r\n    if ( ! hasFocus() ) {\r\n      index = between( index, slideCount - perPage, slideCount - 1 ) ? slideCount - 1 : index;\r\n      index = floor( index / perPage );\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Converts the destination position to the dest index.\r\n   *\r\n   * @param destination - A position to convert.\r\n   *\r\n   * @return A dest index.\r\n   */\r\n  function toDest( destination: number ): number {\r\n    const closest = Move.toIndex( destination );\r\n    return isSlide ? clamp( closest, 0, getEnd() ) : closest;\r\n  }\r\n\r\n  /**\r\n   * Sets a new index and retains old one.\r\n   *\r\n   * @param index - A new index to set.\r\n   */\r\n  function setIndex( index: number ): void {\r\n    if ( index !== currIndex ) {\r\n      prevIndex = currIndex;\r\n      currIndex = index;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the current/previous index.\r\n   *\r\n   * @param prev - Optional. Whether to return previous index or not.\r\n   */\r\n  function getIndex( prev?: boolean ): number {\r\n    return prev ? prevIndex : currIndex;\r\n  }\r\n\r\n  /**\r\n   * Verifies if the focus option is available or not.\r\n   *\r\n   * @return `true` if the slider has the focus option.\r\n   */\r\n  function hasFocus(): boolean {\r\n    return ! isUndefined( options.focus ) || options.isNavigation;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    go,\r\n    scroll,\r\n    getNext,\r\n    getPrev,\r\n    getAdjacent,\r\n    getEnd,\r\n    setIndex,\r\n    getIndex,\r\n    toIndex,\r\n    toPage,\r\n    toDest,\r\n    hasFocus,\r\n  };\r\n}\r\n","/**\r\n * The namespace for SVG elements.\r\n */\r\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\r\n\r\n/**\r\n * The arrow path.\r\n */\r\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\r\n\r\n/**\r\n * SVG width and height.\r\n */\r\nexport const SIZE = 40;\r\n","import { ALL_ATTRIBUTES, ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport {\r\n  EVENT_ARROWS_MOUNTED,\r\n  EVENT_ARROWS_UPDATED,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLLED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { append, before, child, create, display, parseHtml, remove, removeAttribute, setAttribute } from '../../utils';\r\nimport { PATH, SIZE, XML_NAME_SPACE } from './path';\r\n\r\n\r\n/**\r\n * The interface for the Arrows component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ArrowsComponent extends BaseComponent {\r\n  arrows: { prev?: HTMLButtonElement, next?: HTMLButtonElement };\r\n}\r\n\r\n/**\r\n * The component for handling previous and next arrows.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Arrows component object.\r\n */\r\nexport function Arrows( Splide: Splide, Components: Components, options: Options ): ArrowsComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const { classes, i18n } = options;\r\n  const { Elements, Controller } = Components;\r\n\r\n  /**\r\n   * The wrapper element.\r\n   */\r\n  let wrapper = Elements.arrows;\r\n\r\n  /**\r\n   * The previous arrow element.\r\n   */\r\n  let prev = Elements.prev;\r\n\r\n  /**\r\n   * The next arrow element.\r\n   */\r\n  let next = Elements.next;\r\n\r\n  /**\r\n   * Indicates whether the component creates arrows or retrieved from the DOM.\r\n   */\r\n  let created: boolean;\r\n\r\n  /**\r\n   * An object with previous and next arrows.\r\n   */\r\n  const arrows: ArrowsComponent[ 'arrows' ] = {};\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, init );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    if ( options.arrows ) {\r\n      if ( ! prev || ! next ) {\r\n        createArrows();\r\n      }\r\n    }\r\n\r\n    if ( prev && next ) {\r\n      if ( ! arrows.prev ) {\r\n        const { id } = Elements.track;\r\n\r\n        setAttribute( prev, ARIA_CONTROLS, id );\r\n        setAttribute( next, ARIA_CONTROLS, id );\r\n\r\n        arrows.prev = prev;\r\n        arrows.next = next;\r\n\r\n        listen();\r\n\r\n        emit( EVENT_ARROWS_MOUNTED, prev, next );\r\n      } else {\r\n        display( wrapper, options.arrows === false ? 'none' : '' );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    if ( created ) {\r\n      remove( wrapper );\r\n    } else {\r\n      removeAttribute( prev, ALL_ATTRIBUTES );\r\n      removeAttribute( next, ALL_ATTRIBUTES );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    const { go } = Controller;\r\n    on( [ EVENT_MOUNTED, EVENT_MOVED, EVENT_UPDATED, EVENT_REFRESH, EVENT_SCROLLED ], update );\r\n    bind( next, 'click', () => { go( '>', true ) } );\r\n    bind( prev, 'click', () => { go( '<', true ) } );\r\n  }\r\n\r\n  /**\r\n   * Create arrows and append them to the slider.\r\n   */\r\n  function createArrows(): void {\r\n    wrapper = create( 'div', classes.arrows );\r\n    prev    = createArrow( true );\r\n    next    = createArrow( false );\r\n    created = true;\r\n\r\n    append( wrapper, [ prev, next ] );\r\n    before( wrapper, child( options.arrows === 'slider' && Elements.slider || Splide.root ) );\r\n  }\r\n\r\n  /**\r\n   * Creates an arrow button.\r\n   *\r\n   * @param prev - Determines whether to create a previous or next arrow.\r\n   *\r\n   * @return A created button element.\r\n   */\r\n  function createArrow( prev: boolean ): HTMLButtonElement {\r\n    const arrow = `<button class=\"${ classes.arrow } ${ prev ? classes.prev : classes.next }\" type=\"button\">`\r\n      +\t`<svg xmlns=\"${ XML_NAME_SPACE }\" viewBox=\"0 0 ${ SIZE } ${ SIZE }\" width=\"${ SIZE }\" height=\"${ SIZE }\">`\r\n      + `<path d=\"${ options.arrowPath || PATH }\" />`;\r\n\r\n    return parseHtml<HTMLButtonElement>( arrow );\r\n  }\r\n\r\n  /**\r\n   * Updates status of arrows, such as `disabled` and `aria-label`.\r\n   */\r\n  function update(): void {\r\n    const index     = Splide.index;\r\n    const prevIndex = Controller.getPrev();\r\n    const nextIndex = Controller.getNext();\r\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\r\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\r\n\r\n    prev.disabled = prevIndex < 0;\r\n    next.disabled = nextIndex < 0;\r\n\r\n    setAttribute( prev, ARIA_LABEL, prevLabel );\r\n    setAttribute( next, ARIA_LABEL, nextLabel );\r\n\r\n    emit( EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex );\r\n  }\r\n\r\n  return {\r\n    arrows,\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\n\n\n/**\n * The data attribute for the autoplay interval duration.\n *\n * @since 3.5.0\n */\nexport const INTERVAL_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-interval`;\n","import { ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport {\r\n  EVENT_AUTOPLAY_PAUSE,\r\n  EVENT_AUTOPLAY_PLAY,\r\n  EVENT_AUTOPLAY_PLAYING,\r\n  EVENT_MOVE,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLL,\r\n} from '../../constants/events';\r\nimport { EventInterface, RequestInterval } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { getAttribute, setAttribute, style } from '../../utils';\r\nimport { INTERVAL_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Autoplay component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface AutoplayComponent extends BaseComponent {\r\n  play(): void;\r\n  pause(): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * The component for auto playing sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Autoplay component object.\r\n */\r\nexport function Autoplay( Splide: Splide, Components: Components, options: Options ): AutoplayComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const interval = RequestInterval( options.interval, Splide.go.bind( Splide, '>' ), update );\r\n  const { isPaused } = interval;\r\n  const { Elements } = Components;\r\n\r\n  /**\r\n   * Indicates whether the slider is hovered or not.\r\n   */\r\n  let hovered: boolean;\r\n\r\n  /**\r\n   * Indicates whether one of slider elements has focus or not.\r\n   */\r\n  let focused: boolean;\r\n\r\n  /**\r\n   * Turns into `true` when autoplay is manually paused.\r\n   */\r\n  let paused: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    const { autoplay } = options;\r\n\r\n    if ( autoplay ) {\r\n      initButton( true );\r\n      initButton( false );\r\n      listen();\r\n\r\n      if ( autoplay !== 'pause' ) {\r\n        play();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initializes a play/pause button.\r\n   *\r\n   * @param forPause - Determines whether to initialize a pause or play button.\r\n   */\r\n  function initButton( forPause: boolean ): void {\r\n    const prop   = forPause ? 'pause' : 'play';\r\n    const button = Elements[ prop ];\r\n\r\n    if ( button ) {\r\n      setAttribute( button, ARIA_CONTROLS, Elements.track.id );\r\n      setAttribute( button, ARIA_LABEL, options.i18n[ prop ] );\r\n\r\n      bind( button, 'click', forPause ? pause : play );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    const { root } = Elements;\r\n\r\n    if ( options.pauseOnHover ) {\r\n      bind( root, 'mouseenter mouseleave', e => {\r\n        hovered = e.type === 'mouseenter';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    if ( options.pauseOnFocus ) {\r\n      bind( root, 'focusin focusout', e => {\r\n        focused = e.type === 'focusin';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH ], interval.rewind );\r\n    on( EVENT_MOVE, updateInterval );\r\n  }\r\n\r\n  /**\r\n   * Starts autoplay and clears all flags.\r\n   */\r\n  function play(): void {\r\n    if ( isPaused() && Components.Slides.isEnough() ) {\r\n      interval.start( ! options.resetProgress );\r\n      focused = hovered = paused = false;\r\n      emit( EVENT_AUTOPLAY_PLAY );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pauses autoplay.\r\n   *\r\n   * @param manual - If `true`, autoplay keeps paused until `play()` is explicitly called.\r\n   */\r\n  function pause( manual = true ): void {\r\n    if ( ! isPaused() ) {\r\n      interval.pause();\r\n      emit( EVENT_AUTOPLAY_PAUSE );\r\n    }\r\n\r\n    paused = manual;\r\n  }\r\n\r\n  /**\r\n   * Toggles play/pause according to current flags.\r\n   * If autoplay is manually paused, this will do nothing.\r\n   */\r\n  function autoToggle(): void {\r\n    if ( ! paused ) {\r\n      if ( ! hovered && ! focused ) {\r\n        play();\r\n      } else {\r\n        pause( false );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called on every animation frame while autoplay is active.\r\n   *\r\n   * @param rate - The progress rate between 0 to 1.\r\n   */\r\n  function update( rate: number ): void {\r\n    const { bar } = Elements;\r\n    bar && style( bar, 'width', `${ rate * 100 }%` );\r\n    emit( EVENT_AUTOPLAY_PLAYING, rate );\r\n  }\r\n\r\n  /**\r\n   * Updates or restores the interval duration.\r\n   */\r\n  function updateInterval(): void {\r\n    const Slide = Components.Slides.getAt( Splide.index );\r\n    interval.set( Slide && +getAttribute( Slide.slide, INTERVAL_DATA_ATTRIBUTE ) || options.interval );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: interval.cancel,\r\n    play,\r\n    pause,\r\n    isPaused,\r\n  };\r\n}\r\n","import { EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { child, display } from '../../utils';\nimport { SlideComponent } from '../Slides/Slide';\n\n\n/**\n * The interface for the Cover component.\n *\n * @since 3.0.0\n */\nexport interface CoverComponent extends BaseComponent {\n}\n\n/**\n * The component for setting the image as the slide background.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Cover component object.\n */\nexport function Cover( Splide: Splide, Components: Components, options: Options ): CoverComponent {\n  const { on } = EventInterface( Splide );\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    if ( options.cover ) {\n      on( EVENT_LAZYLOAD_LOADED, ( img, Slide ) => { toggle( true, img, Slide ) } );\n      on( [ EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH ], apply.bind( null, true ) );\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    apply( false );\n  }\n\n  /**\n   * Sets/removes the background image to/from all slides.\n   *\n   * @param cover - If `false`, removes the background image.\n   */\n  function apply( cover: boolean ): void {\n    Components.Slides.forEach( Slide => {\n      const img = child<HTMLImageElement>( Slide.container || Slide.slide, 'img' );\n\n      if ( img && img.src ) {\n        toggle( cover, img, Slide );\n      }\n    } );\n  }\n\n  /**\n   * Sets/removes the background image to/from the parent element.\n   *\n   * @param cover - If `false`, removes the background image.\n   * @param img   - A target image element.\n   * @param Slide - A SlideComponent object where the image belongs.\n   */\n  function toggle( cover: boolean, img: HTMLImageElement, Slide: SlideComponent ): void {\n    Slide.style( 'background', cover ? `center/cover no-repeat url(\"${ img.src }\")` : '', true );\n    display( img, cover ? 'none' : '' );\n  }\n\n  return {\n    mount,\n    destroy,\n  };\n}\n","/**\r\n * Triggers the bounce effect when the diff becomes less than this value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DIFF_THRESHOLD = 10;\r\n\r\n/**\r\n * The duration of the bounce effect.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DURATION = 600;\r\n\r\n/**\r\n * The friction factor.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FRICTION_FACTOR = 0.6;\r\n\r\n/**\r\n * The velocity to calculate the scroll duration.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BASE_VELOCITY = 1.5;\r\n\r\n/**\r\n * The minimum duration of scroll.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const MIN_DURATION = 800;\r\n","import { EVENT_MOVE, EVENT_REFRESH, EVENT_SCROLL, EVENT_SCROLLED, EVENT_UPDATED } from '../../constants/events';\r\nimport { SLIDE } from '../../constants/types';\r\nimport { EventInterface, RequestInterval, RequestIntervalInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { abs, between, max } from '../../utils';\r\nimport { BASE_VELOCITY, BOUNCE_DIFF_THRESHOLD, BOUNCE_DURATION, FRICTION_FACTOR, MIN_DURATION } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Scroll component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ScrollComponent extends BaseComponent {\r\n  scroll( position: number, duration?: number, callback?: AnyFunction ): void;\r\n  cancel(): void;\r\n}\r\n\r\n/**\r\n * The component for scrolling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Scroll component object.\r\n */\r\nexport function Scroll( Splide: Splide, Components: Components, options: Options ): ScrollComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit, exceededLimit } = Move;\r\n\r\n  /**\r\n   * Retains the active RequestInterval object.\r\n   */\r\n  let interval: RequestIntervalInterface;\r\n\r\n  /**\r\n   * Holds the callback function.\r\n   */\r\n  let scrollCallback: AnyFunction;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_MOVE, clear );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], cancel );\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the provided destination.\r\n   *\r\n   * @param destination        - The destination to scroll to.\r\n   * @param duration           - Optional. The scroll duration. If omitted, calculates it by the distance.\r\n   * @param callback           - Optional. A callback invoked after scroll ends.\r\n   * @param suppressConstraint - Optional. Whether to suppress constraint process when the slider exceeds bounds.\r\n   */\r\n  function scroll(\r\n    destination: number,\r\n    duration?: number,\r\n    callback?: AnyFunction,\r\n    suppressConstraint?: boolean\r\n  ): void {\r\n    const start = getPosition();\r\n    let friction = 1;\r\n\r\n    duration       = duration || computeDuration( abs( destination - start ) );\r\n    scrollCallback = callback;\r\n    clear();\r\n\r\n    interval = RequestInterval( duration, onScrolled, rate => {\r\n      const position = getPosition();\r\n      const target   = start + ( destination - start ) * easing( rate );\r\n      const diff     = ( target - getPosition() ) * friction;\r\n\r\n      Move.translate( position + diff );\r\n\r\n      if ( Splide.is( SLIDE ) && ! suppressConstraint && exceededLimit() ) {\r\n        friction *= FRICTION_FACTOR;\r\n\r\n        if ( abs( diff ) < BOUNCE_DIFF_THRESHOLD ) {\r\n          bounce( exceededLimit( false ) );\r\n        }\r\n      }\r\n    }, 1 );\r\n\r\n    emit( EVENT_SCROLL );\r\n    interval.start();\r\n  }\r\n\r\n  /**\r\n   * Triggers the bounce effect when the slider reaches bounds.\r\n   *\r\n   * @param backwards - The direction the slider is going towards.\r\n   */\r\n  function bounce( backwards: boolean ): void {\r\n    scroll( getLimit( ! backwards ), BOUNCE_DURATION, null, true );\r\n  }\r\n\r\n  /**\r\n   * Called when scroll ends or has been just canceled.\r\n   */\r\n  function onScrolled(): void {\r\n    const position = getPosition();\r\n    const index = Move.toIndex( position );\r\n\r\n    if ( ! between( index, 0, Splide.length - 1 ) ) {\r\n      Move.translate( Move.shift( position, index > 0 ), true );\r\n    }\r\n\r\n    scrollCallback && scrollCallback();\r\n    emit( EVENT_SCROLLED );\r\n  }\r\n\r\n  /**\r\n   * Computes the scroll duration by the distance and the base velocity.\r\n   *\r\n   * @param distance - Distance in pixel.\r\n   *\r\n   * @return The duration for scroll.\r\n   */\r\n  function computeDuration( distance: number ): number {\r\n    return max( distance / BASE_VELOCITY, MIN_DURATION );\r\n  }\r\n\r\n  /**\r\n   * Clears the active interval.\r\n   */\r\n  function clear(): void {\r\n    if ( interval ) {\r\n      interval.cancel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the active interval and emits the `scrolled` event.\r\n   */\r\n  function cancel(): void {\r\n    if ( interval && ! interval.isPaused() ) {\r\n      clear();\r\n      onScrolled();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The easing function.\r\n   *\r\n   * @param t - A value to ease.\r\n   *\r\n   * @return An eased value.\r\n   */\r\n  function easing( t: number ): number {\r\n    const { easingFunc } = options;\r\n    return easingFunc ? easingFunc( t ) : 1 - Math.pow( 1 - t, 4 );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: clear,\r\n    scroll,\r\n    cancel,\r\n  };\r\n}\r\n","/**\n * AddEventListenerOptions for listeners that may prevent the browser scroll.\n *\n * @since 3.4.1\n */\nexport const SCROLL_LISTENER_OPTIONS = { passive: false, capture: true };\n","/**\n * The power of the friction.\n *\n * @since 3.0.0\n */\nexport const FRICTION = 5;\n\n/**\n * If the user stops dragging for this duration with keeping the pointer down, updates the base coord and time.\n *\n * @since 3.0.0\n */\nexport const LOG_INTERVAL = 200;\n\n/**\n * Start events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_DOWN_EVENTS = 'touchstart mousedown';\n\n/**\n * Update events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_MOVE_EVENTS = 'touchmove mousemove';\n\n/**\n * End events for dragging.\n *\n * @since 3.0.0\n */\nexport const POINTER_UP_EVENTS = 'touchend touchcancel mouseup';\n","import { EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_MOUNTED, EVENT_UPDATED } from '../../constants/events';\r\nimport { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, isObject, matches, min, noop, prevent, sign } from '../../utils';\r\nimport { FRICTION, LOG_INTERVAL, POINTER_DOWN_EVENTS, POINTER_MOVE_EVENTS, POINTER_UP_EVENTS } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Drag component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DragComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n  isDragging(): boolean;\r\n}\r\n\r\n/**\r\n * The component for dragging the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Drag component object.\r\n */\r\nexport function Drag( Splide: Splide, Components: Components, options: Options ): DragComponent {\r\n  const { on, emit, bind, unbind } = EventInterface( Splide );\r\n  const { Move, Scroll, Controller } = Components;\r\n  const { track } = Components.Elements;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { getPosition, exceededLimit } = Move;\r\n\r\n  /**\r\n   * The base slider position to calculate the delta of coords.\r\n   */\r\n  let basePosition: number;\r\n\r\n  /**\r\n   * The base event object saved per specific sampling interval.\r\n   */\r\n  let baseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Holds the previous base event object.\r\n   */\r\n  let prevBaseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Keeps the last TouchEvent/MouseEvent object on pointermove.\r\n   */\r\n  let lastEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Indicates whether the drag mode is `free` or not.\r\n   */\r\n  let isFree: boolean;\r\n\r\n  /**\r\n   * Indicates whether the user is dragging the slider or not.\r\n   */\r\n  let dragging: boolean;\r\n\r\n  /**\r\n   * Indicates whether the slider exceeds limits or not.\r\n   * This must not be `undefined` for strict comparison.\r\n   */\r\n  let hasExceeded = false;\r\n\r\n  /**\r\n   * Turns into `true` when the user starts dragging the slider.\r\n   */\r\n  let clickPrevented: boolean;\r\n\r\n  /**\r\n   * Indicates whether the drag component is now disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * The target element to attach listeners.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    bind( track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, 'click', onClick, { capture: true } );\r\n    bind( track, 'dragstart', prevent );\r\n\r\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], init );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { drag } = options;\r\n    disable( ! drag );\r\n    isFree = drag === 'free';\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks or touches the slider.\r\n   * Needs to prevent the default behaviour when the slider is busy to deny any action, such as dragging images.\r\n   * Note that IE does not support MouseEvent and TouchEvent constructors.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerDown( e: TouchEvent | MouseEvent ): void {\r\n    if ( ! disabled ) {\r\n      const { noDrag } = options;\r\n      const isTouch     = isTouchEvent( e );\r\n      const isDraggable = ! noDrag || ! matches( e.target, noDrag );\r\n\r\n      clickPrevented = false;\r\n\r\n      if ( isDraggable && ( isTouch || ! e.button ) ) {\r\n        if ( ! Move.isBusy() ) {\r\n          target        = isTouch ? track : window;\r\n          prevBaseEvent = null;\r\n          lastEvent     = null;\r\n\r\n          bind( target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS );\r\n          bind( target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS );\r\n          Move.cancel();\r\n          Scroll.cancel();\r\n          save( e );\r\n        } else {\r\n          prevent( e, true );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called while the user moves the pointer on the slider.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerMove( e: TouchEvent | MouseEvent ): void {\r\n    if ( ! lastEvent ) {\r\n      emit( EVENT_DRAG );\r\n    }\r\n\r\n    lastEvent = e;\r\n\r\n    if ( e.cancelable ) {\r\n      const diff = coordOf( e ) - coordOf( baseEvent );\r\n\r\n      if ( dragging ) {\r\n        Move.translate( basePosition + constrain( diff ) );\r\n\r\n        const expired  = timeOf( e ) - timeOf( baseEvent ) > LOG_INTERVAL;\r\n        const exceeded = hasExceeded !== ( hasExceeded = exceededLimit() );\r\n\r\n        if ( expired || exceeded ) {\r\n          save( e );\r\n        }\r\n\r\n        emit( EVENT_DRAGGING );\r\n        clickPrevented = true;\r\n        prevent( e );\r\n      } else {\r\n        let { dragMinThreshold: thresholds } = options;\r\n        thresholds = isObject( thresholds ) ? thresholds : { mouse: 0, touch: +thresholds || 10 };\r\n        dragging   = abs( diff ) > ( isTouchEvent( e ) ? thresholds.touch : thresholds.mouse );\r\n\r\n        if ( isSliderDirection() ) {\r\n          prevent( e );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user releases pointing devices.\r\n   * Be aware that the TouchEvent object provided by the `touchend` does not contain `Touch` objects,\r\n   * which means the last touch position is not available.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerUp( e: TouchEvent | MouseEvent ): void {\r\n    unbind( target, POINTER_MOVE_EVENTS, onPointerMove );\r\n    unbind( target, POINTER_UP_EVENTS, onPointerUp );\r\n\r\n    const { index } = Splide;\r\n\r\n    if ( lastEvent ) {\r\n      if ( dragging || ( e.cancelable && isSliderDirection() ) ) {\r\n        const velocity    = computeVelocity( e );\r\n        const destination = computeDestination( velocity );\r\n\r\n        if ( isFree ) {\r\n          Controller.scroll( destination );\r\n        } else if ( Splide.is( FADE ) ) {\r\n          Controller.go( index + orient( sign( velocity ) ) );\r\n        } else {\r\n          Controller.go( Controller.toDest( destination ), true );\r\n        }\r\n\r\n        prevent( e );\r\n      }\r\n\r\n      emit( EVENT_DRAGGED );\r\n    } else {\r\n      if ( ! isFree && getPosition() !== Move.toPosition( index ) ) {\r\n        Controller.go( index, true );\r\n      }\r\n    }\r\n\r\n    dragging = false;\r\n  }\r\n\r\n  /**\r\n   * Saves data at the specific moment.\r\n   *\r\n   * @param e  A TouchEvent or MouseEvent object\r\n   */\r\n  function save( e: TouchEvent | MouseEvent ): void {\r\n    prevBaseEvent = baseEvent;\r\n    baseEvent     = e;\r\n    basePosition  = getPosition();\r\n  }\r\n\r\n  /**\r\n   * Called when the track element is clicked.\r\n   * Disables click any elements inside it while dragging.\r\n   *\r\n   * @param e - A MouseEvent object.\r\n   */\r\n  function onClick( e: MouseEvent ): void {\r\n    if ( ! disabled && clickPrevented ) {\r\n      prevent( e, true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks whether dragging towards the slider or scroll direction.\r\n   *\r\n   * @return `true` if going towards the slider direction, or otherwise `false`.\r\n   */\r\n  function isSliderDirection(): boolean {\r\n    const diffX = abs( coordOf( lastEvent ) - coordOf( baseEvent ) );\r\n    const diffY = abs( coordOf( lastEvent, true ) - coordOf( baseEvent, true ) );\r\n    return diffX > diffY;\r\n  }\r\n\r\n  /**\r\n   * Computes the drag velocity.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   *\r\n   * @return The drag velocity.\r\n   */\r\n  function computeVelocity( e: TouchEvent | MouseEvent ): number {\r\n    if ( Splide.is( LOOP ) || ! hasExceeded ) {\r\n      const base      = baseEvent === lastEvent && prevBaseEvent || baseEvent;\r\n      const diffCoord = coordOf( lastEvent ) - coordOf( base );\r\n      const diffTime  = timeOf( e ) - timeOf( base );\r\n      const isFlick   = timeOf( e ) - timeOf( lastEvent ) < LOG_INTERVAL;\r\n\r\n      if ( diffTime && isFlick ) {\r\n        return diffCoord / diffTime;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Computes the destination by the velocity and the `flickPower` option.\r\n   *\r\n   * @param velocity - The drag velocity.\r\n   *\r\n   * @return The destination.\r\n   */\r\n  function computeDestination( velocity: number ): number {\r\n    return getPosition() + sign( velocity ) * min(\r\n      abs( velocity ) * ( options.flickPower || 600 ),\r\n      isFree ? Infinity : Components.Layout.listSize() * ( options.flickMaxPages || 1 )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the `pageX` and `pageY` coordinates provided by the event.\r\n   * Be aware that IE does not support both TouchEvent and MouseEvent constructors.\r\n   *\r\n   * @param e          - A TouchEvent or MouseEvent object.\r\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\r\n   *\r\n   * @return A pageX or pageY coordinate.\r\n   */\r\n  function coordOf( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\r\n    return ( isTouchEvent( e ) ? e.touches[ 0 ] : e )[ `page${ resolve( orthogonal ? 'Y' : 'X' ) }` ];\r\n  }\r\n\r\n  /**\r\n   * Returns the time stamp in the provided event object.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return A time stamp.\r\n   */\r\n  function timeOf( e: TouchEvent | MouseEvent ): number {\r\n    return e.timeStamp;\r\n  }\r\n\r\n  /**\r\n   * Reduces the distance to move by the predefined friction.\r\n   * This does nothing when the slider type is not `slide`, or the position is inside borders.\r\n   *\r\n   * @param diff - Diff to constrain.\r\n   *\r\n   * @return The constrained diff.\r\n   */\r\n  function constrain( diff: number ): number {\r\n    return diff / ( hasExceeded && Splide.is( SLIDE ) ? FRICTION : 1 );\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided event is TouchEvent or MouseEvent.\r\n   *\r\n   * @param e - An event to check.\r\n   *\r\n   * @return `true` if the `e` is TouchEvent.\r\n   */\r\n  function isTouchEvent( e: TouchEvent | MouseEvent ): e is TouchEvent {\r\n    return typeof TouchEvent !== 'undefined' && e instanceof TouchEvent;\r\n  }\r\n\r\n  /**\r\n   * Checks if now the user is dragging the slider or not.\r\n   *\r\n   * @return `true` if the user is dragging the slider or otherwise `false`.\r\n   */\r\n  function isDragging(): boolean {\r\n    return dragging;\r\n  }\r\n\r\n  /**\r\n   * Disables the component.\r\n   *\r\n   * @param value - Set `true` to disable the component.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    disable,\r\n    isDragging,\r\n  };\r\n}\r\n","import { TAB_INDEX } from '../../constants/attributes';\r\nimport { EVENT_UPDATED, EVENT_MOVE } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { includes, isHTMLElement, nextTick, removeAttribute, setAttribute } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Keyboard component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface KeyboardComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * Arrow keys of IE.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst IE_ARROW_KEYS = [ 'Left', 'Right', 'Up', 'Down' ];\r\n\r\n/**\r\n * The keyboard event name.\r\n *\r\n * @since 3.6.0\r\n */\r\nconst KEYBOARD_EVENT = 'keydown';\r\n\r\n/**\r\n * The component for controlling the slider by keyboards.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Keyboard component object.\r\n */\r\nexport function Keyboard( Splide: Splide, Components: Components, options: Options ): KeyboardComponent {\r\n  const { on, bind, unbind } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * The target element of the keyboard event.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Indicates whether the component is currently disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, onUpdated );\r\n    on( EVENT_MOVE, onMove );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { keyboard } = options;\r\n\r\n    if ( keyboard ) {\r\n      if ( keyboard === 'focused' ) {\r\n        target = root;\r\n        setAttribute( root, TAB_INDEX, 0 );\r\n      } else {\r\n        target = window;\r\n      }\r\n\r\n      bind( target, KEYBOARD_EVENT, onKeydown );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    unbind( target, KEYBOARD_EVENT );\r\n\r\n    if ( isHTMLElement( target ) ) {\r\n      removeAttribute( target, TAB_INDEX );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disables the keyboard input.\r\n   *\r\n   * @param value - Toggles disabling/enabling the keyboard input.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  /**\r\n   * Called when the slider moves.\r\n   * To avoid the slider from moving twice, wait for a tick.\r\n   */\r\n  function onMove(): void {\r\n    const _disabled = disabled;\r\n    disabled = true;\r\n    nextTick( () => { disabled = _disabled } );\r\n  }\r\n\r\n  /**\r\n   * Called when options are update.\r\n   */\r\n  function onUpdated(): void {\r\n    destroy();\r\n    init();\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the target.\r\n   *\r\n   * @param e - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( e: KeyboardEvent ): void {\r\n    if ( ! disabled ) {\r\n      const { key } = e;\r\n      const normalizedKey = includes( IE_ARROW_KEYS, key ) ? `Arrow${ key }` : key;\r\n\r\n      if ( normalizedKey === resolve( 'ArrowLeft' ) ) {\r\n        Splide.go( '<' );\r\n      } else if ( normalizedKey === resolve( 'ArrowRight' ) ) {\r\n        Splide.go( '>' );\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    disable,\r\n  };\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\n\r\n\r\n/**\r\n * The data attribute for the src value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRC_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-lazy`;\r\n\r\n/**\r\n * The data attribute for the srcset value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRCSET_DATA_ATTRIBUTE = `${ SRC_DATA_ATTRIBUTE }-srcset`;\r\n\r\n/**\r\n * The selector string for images to load.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const IMAGE_SELECTOR = `[${ SRC_DATA_ATTRIBUTE }], [${ SRCSET_DATA_ATTRIBUTE }]`;\r\n","import { ROLE } from '../../constants/attributes';\r\nimport { CLASS_LOADING } from '../../constants/classes';\r\nimport {\r\n  EVENT_LAZYLOAD_LOADED,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_RESIZE,\r\n  EVENT_SCROLLED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  child,\r\n  create,\r\n  display,\r\n  getAttribute,\r\n  queryAll,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from '../../utils';\r\nimport { SlideComponent } from '../Slides/Slide';\r\nimport { IMAGE_SELECTOR, SRC_DATA_ATTRIBUTE, SRCSET_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the LazyLoad component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LazyLoadComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The interface for all components.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LazyLoadImagesData {\r\n  _img: HTMLImageElement;\r\n  _spinner: HTMLSpanElement;\r\n  _Slide: SlideComponent;\r\n  src: string | null;\r\n  srcset: string | null;\r\n}\r\n\r\n/**\r\n * The component for lazily loading images.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An LazyLoad component object.\r\n */\r\nexport function LazyLoad( Splide: Splide, Components: Components, options: Options ): LazyLoadComponent {\r\n  const { on, off, bind, emit } = EventInterface( Splide );\r\n  const isSequential = options.lazyLoad === 'sequential';\r\n\r\n  /**\r\n   * Stores data of images.\r\n   */\r\n  let images: LazyLoadImagesData[] = [];\r\n\r\n  /**\r\n   * The current index of images.\r\n   */\r\n  let index = 0;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.lazyLoad ) {\r\n      init();\r\n      on( EVENT_REFRESH, refresh );\r\n\r\n      if ( ! isSequential ) {\r\n        on( [ EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED, EVENT_SCROLLED ], observe );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the slider is refreshed.\r\n   */\r\n  function refresh(): void {\r\n    destroy();\r\n    init();\r\n  }\r\n\r\n  /**\r\n   * Finds images that contain specific data attributes.\r\n   */\r\n  function init() {\r\n    Components.Slides.forEach( _Slide => {\r\n      queryAll<HTMLImageElement>( _Slide.slide, IMAGE_SELECTOR ).forEach( _img => {\r\n        const src    = getAttribute( _img, SRC_DATA_ATTRIBUTE );\r\n        const srcset = getAttribute( _img, SRCSET_DATA_ATTRIBUTE );\r\n\r\n        if ( src !== _img.src || srcset !== _img.srcset ) {\r\n          const className = options.classes.spinner;\r\n          const parent    = _img.parentElement;\r\n          const _spinner  = child( parent, `.${ className }` ) || create( 'span', className, parent );\r\n\r\n          setAttribute( _spinner, ROLE, 'presentation' );\r\n          images.push( { _img, _Slide, src, srcset, _spinner } );\r\n          ! _img.src && display( _img, 'none' );\r\n        }\r\n      } );\r\n    } );\r\n\r\n    if ( isSequential ) {\r\n      loadNext();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy() {\r\n    index  = 0;\r\n    images = [];\r\n  }\r\n\r\n  /**\r\n   * Checks how close each image is from the active slide, and determines whether to start loading or not.\r\n   * The last `+1` is for the current page.\r\n   */\r\n  function observe(): void {\r\n    images = images.filter( data => {\r\n      const distance = options.perPage * ( ( options.preloadPages || 1 ) + 1 ) - 1;\r\n\r\n      if ( data._Slide.isWithin( Splide.index, distance ) ) {\r\n        return load( data );\r\n      }\r\n\r\n      return true;\r\n    } );\r\n\r\n    if ( ! images.length ) {\r\n      off( EVENT_MOVED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts loading the image in the data.\r\n   *\r\n   * @param data - A LazyLoadImagesData object.\r\n   */\r\n  function load( data: LazyLoadImagesData ): void {\r\n    const { _img } = data;\r\n\r\n    addClass( data._Slide.slide, CLASS_LOADING );\r\n    bind( _img, 'load error', e => { onLoad( data, e.type === 'error' ) } );\r\n\r\n    [ 'srcset', 'src' ].forEach( name => {\r\n      if ( data[ name ] ) {\r\n        setAttribute( _img, name, data[ name ] );\r\n        removeAttribute( _img, name === 'src' ? SRC_DATA_ATTRIBUTE : SRCSET_DATA_ATTRIBUTE );\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Called when the image is loaded or any error occurs.\r\n   *\r\n   * @param data  - A LazyLoadImagesData object.\r\n   * @param error - `true` if this method is called on error.\r\n   */\r\n  function onLoad( data: LazyLoadImagesData, error: boolean ): void {\r\n    const { _Slide } = data;\r\n\r\n    removeClass( _Slide.slide, CLASS_LOADING );\r\n\r\n    if ( ! error ) {\r\n      remove( data._spinner );\r\n      display( data._img, '' );\r\n      emit( EVENT_LAZYLOAD_LOADED, data._img, _Slide );\r\n      emit( EVENT_RESIZE );\r\n    }\r\n\r\n    if ( isSequential ) {\r\n      loadNext();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts loading a next image.\r\n   */\r\n  function loadNext(): void {\r\n    if ( index < images.length ) {\r\n      load( images[ index++ ] );\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","import { ARIA_CONTROLS, ARIA_CURRENT, ARIA_LABEL } from '../../constants/attributes';\nimport { CLASS_ACTIVE } from '../../constants/classes';\nimport {\n  EVENT_MOVE,\n  EVENT_PAGINATION_MOUNTED,\n  EVENT_PAGINATION_UPDATED,\n  EVENT_REFRESH,\n  EVENT_SCROLLED,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { EventInterface } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport {\n  addClass,\n  ceil,\n  create,\n  empty,\n  focus,\n  format,\n  remove,\n  removeAttribute,\n  removeClass,\n  setAttribute,\n} from '../../utils';\n\n\n/**\n * The interface for the Pagination component.\n *\n * @since 3.0.0\n */\nexport interface PaginationComponent extends BaseComponent {\n  items: PaginationItem[];\n  getAt( index: number ): PaginationItem;\n  update(): void;\n}\n\n/**\n * The interface for data of the pagination.\n *\n * @since 3.0.0\n */\nexport interface PaginationData {\n  list: HTMLUListElement;\n  items: PaginationItem[];\n}\n\n/**\n * The interface for each pagination item.\n *\n * @since 3.0.0\n */\nexport interface PaginationItem {\n  li: HTMLLIElement;\n  button: HTMLButtonElement;\n  page: number;\n}\n\n/**\n * The component for handling previous and next arrows.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Arrows component object.\n */\nexport function Pagination( Splide: Splide, Components: Components, options: Options ): PaginationComponent {\n  const { on, emit, bind, unbind } = EventInterface( Splide );\n  const { Slides, Elements, Controller } = Components;\n  const { hasFocus, getIndex } = Controller;\n\n  /**\n   * Stores all pagination items.\n   */\n  const items: PaginationItem[] = [];\n\n  /**\n   * The pagination element.\n   */\n  let list: HTMLUListElement;\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    init();\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\n    on( [ EVENT_MOVE, EVENT_SCROLLED ], update );\n  }\n\n  /**\n   * Initializes the pagination.\n   */\n  function init(): void {\n    destroy();\n\n    if ( options.pagination && Slides.isEnough() ) {\n      createPagination();\n      emit( EVENT_PAGINATION_MOUNTED, { list, items }, getAt( Splide.index ) );\n      update();\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    if ( list ) {\n      remove( list );\n      items.forEach( item => { unbind( item.button, 'click' ) } );\n      empty( items );\n      list = null;\n    }\n  }\n\n  /**\n   * Creates the pagination element and appends it to the slider.\n   */\n  function createPagination(): void {\n    const { length } = Splide;\n    const { classes, i18n, perPage } = options;\n    const parent = options.pagination === 'slider' && Elements.slider || Elements.root;\n    const max    = hasFocus() ? length : ceil( length / perPage );\n\n    list = create( 'ul', classes.pagination, parent );\n\n    for ( let i = 0; i < max; i++ ) {\n      const li       = create( 'li', null, list );\n      const button   = create( 'button', { class: classes.page, type: 'button' }, li );\n      const controls = Slides.getIn( i ).map( Slide => Slide.slide.id );\n      const text     = ! hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\n\n      bind( button, 'click', onClick.bind( null, i ) );\n\n      setAttribute( button, ARIA_CONTROLS, controls.join( ' ' ) );\n      setAttribute( button, ARIA_LABEL, format( text, i + 1 ) );\n\n      items.push( { li, button, page: i } );\n    }\n  }\n\n  /**\n   * Called when the user clicks each pagination dot.\n   * Moves the focus to the active slide for accessibility.\n   *\n   * @link https://www.w3.org/WAI/tutorials/carousels/functionality/\n   *\n   * @param page - A clicked page index.\n   */\n  function onClick( page: number ): void {\n    Controller.go( `>${ page }`, true, () => {\n      const Slide = Slides.getAt( Controller.toIndex( page ) );\n      Slide && focus( Slide.slide );\n    } );\n  }\n\n  /**\n   * Returns the pagination item at the specified index.\n   *\n   * @param index - An index.\n   *\n   * @return A pagination item object if available, or otherwise `undefined`.\n   */\n  function getAt( index: number ): PaginationItem | undefined {\n    return items[ Controller.toPage( index ) ];\n  }\n\n  /**\n   * Updates the pagination status.\n   */\n  function update(): void {\n    const prev = getAt( getIndex( true ) );\n    const curr = getAt( getIndex() );\n\n    if ( prev ) {\n      removeClass( prev.button, CLASS_ACTIVE );\n      removeAttribute( prev.button, ARIA_CURRENT );\n    }\n\n    if ( curr ) {\n      addClass( curr.button, CLASS_ACTIVE );\n      setAttribute( curr.button, ARIA_CURRENT, true );\n    }\n\n    emit( EVENT_PAGINATION_UPDATED, { list, items }, prev, curr );\n  }\n\n  return {\n    items,\n    mount,\n    destroy,\n    getAt,\n    update,\n  };\n}\n","import { ALL_ATTRIBUTES, ARIA_ORIENTATION, ROLE } from '../../constants/attributes';\nimport { TTB } from '../../constants/directions';\nimport {\n  EVENT_CLICK,\n  EVENT_MOUNTED,\n  EVENT_MOVE,\n  EVENT_NAVIGATION_MOUNTED,\n  EVENT_SLIDE_KEYDOWN,\n  EVENT_UPDATED,\n} from '../../constants/events';\nimport { LOOP } from '../../constants/types';\nimport { EventInterface, EventInterfaceObject } from '../../constructors';\nimport { Splide } from '../../core/Splide/Splide';\nimport { BaseComponent, Components, Options } from '../../types';\nimport { empty, includes, prevent, removeAttribute, setAttribute } from '../../utils';\nimport { SlideComponent } from '../Slides/Slide';\n\n\n/**\n * The interface for the Sync component.\n *\n * @since 3.0.0\n */\nexport interface SyncComponent extends BaseComponent {\n  remount(): void;\n}\n\n/**\n * The keys for triggering the navigation slide.\n *\n * @since 3.0.0\n */\nconst TRIGGER_KEYS = [ ' ', 'Enter', 'Spacebar' ];\n\n/**\n * The component for syncing multiple sliders.\n *\n * @since 3.0.0\n *\n * @param Splide     - A Splide instance.\n * @param Components - A collection of components.\n * @param options    - Options.\n *\n * @return A Sync component object.\n */\nexport function Sync( Splide: Splide, Components: Components, options: Options ): SyncComponent {\n  const { list } = Components.Elements;\n  const events: EventInterfaceObject[] = [];\n\n  /**\n   * Called when the component is mounted.\n   */\n  function mount(): void {\n    Splide.splides.forEach( target => {\n      ! target.isParent && sync( target.splide );\n    } );\n\n    if ( options.isNavigation ) {\n      navigate();\n    }\n  }\n\n  /**\n   * Destroys the component.\n   */\n  function destroy(): void {\n    removeAttribute( list, ALL_ATTRIBUTES );\n    events.forEach( event => { event.destroy() } );\n    empty( events );\n  }\n\n  /**\n   * Remounts the component.\n   *\n   * @internal\n   */\n  function remount(): void {\n    destroy();\n    mount();\n  }\n\n  /**\n   * Syncs the current index with a provided child splide instance.\n   *\n   * @param splide - A splide instance to sync with.\n   */\n  function sync( splide: Splide ): void {\n    [ Splide, splide ].forEach( instance => {\n      const event  = EventInterface( instance );\n      const target = instance === Splide ? splide : Splide;\n\n      event.on( EVENT_MOVE, ( index, prev, dest ) => {\n        target.go( target.is( LOOP ) ? dest : index );\n      } );\n\n      events.push( event );\n    } );\n  }\n\n  /**\n   * Makes slides clickable and moves the slider to the index of clicked slide.\n   * Note that the direction of `menu` is implicitly `vertical` as default.\n   */\n  function navigate(): void {\n    const event = EventInterface( Splide );\n    const { on } = event;\n\n    on( EVENT_CLICK, onClick );\n    on( EVENT_SLIDE_KEYDOWN, onKeydown );\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], update );\n\n    setAttribute( list, ROLE, 'menu' );\n    events.push( event );\n    event.emit( EVENT_NAVIGATION_MOUNTED, Splide.splides );\n  }\n\n  /**\n   * Update attributes.\n   */\n  function update(): void {\n    setAttribute( list, ARIA_ORIENTATION, options.direction !== TTB ? 'horizontal' : null );\n  }\n\n  /**\n   * Called when the navigation slide is clicked.\n   *\n   * @param Slide - A clicked Slide component.\n   */\n  function onClick( Slide: SlideComponent ): void {\n    Splide.go( Slide.index );\n  }\n\n  /**\n   * Called when any key is pressed on the navigation slide.\n   *\n   * @param Slide - A Slide component.\n   * @param e     - A KeyboardEvent object.\n   */\n  function onKeydown( Slide: SlideComponent, e: KeyboardEvent ): void {\n    if ( includes( TRIGGER_KEYS, e.key ) ) {\n      onClick( Slide );\n      prevent( e );\n    }\n  }\n\n  return {\n    mount,\n    destroy,\n    remount,\n  };\n}\n","import { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { MOVING } from '../../constants/states';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { prevent } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Wheel component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface WheelComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for observing the mouse wheel and moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Wheel component object.\r\n */\r\nexport function Wheel( Splide: Splide, Components: Components, options: Options ): WheelComponent {\r\n  const { bind } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.wheel ) {\r\n      bind( Components.Elements.track, 'wheel', onWheel, SCROLL_LISTENER_OPTIONS );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user rotates the mouse wheel on the slider.\r\n   *\r\n   * @param e - A WheelEvent object.\r\n   */\r\n  function onWheel( e: WheelEvent ): void {\r\n    if ( e.cancelable ) {\r\n      const { deltaY } = e;\r\n\r\n      if ( deltaY ) {\r\n        const backwards = deltaY < 0;\r\n        Splide.go( backwards ? '<' : '>' );\r\n        shouldPrevent( backwards ) && prevent( e );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks whether the component should prevent the default action of the wheel event or not.\r\n   *\r\n   * @param backwards - Set this to `true` for backwards direction.\r\n   *\r\n   * @return `true` if the action should be prevented.\r\n   */\r\n  function shouldPrevent( backwards: boolean ): boolean {\r\n    return ! options.releaseWheel\r\n      || Splide.state.is( MOVING )\r\n      || Components.Controller.getAdjacent( backwards ) !== -1;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n  };\r\n}\r\n","/**\r\n * The collection of i18n strings.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const I18N = {\r\n  prev  : 'Previous slide',\r\n  next  : 'Next slide',\r\n  first : 'Go to first slide',\r\n  last  : 'Go to last slide',\r\n  slideX: 'Go to slide %s',\r\n  pageX : 'Go to page %s',\r\n  play  : 'Start autoplay',\r\n  pause : 'Pause autoplay',\r\n};\r\n","import { Options } from '../types';\r\nimport { CLASSES } from './classes';\r\nimport { I18N } from './i18n';\r\n\r\n\r\n/**\r\n * The collection of default options.\r\n * Note that this collection does not contain all options.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DEFAULTS: Options = {\r\n  type             : 'slide',\r\n  speed            : 400,\r\n  waitForTransition: true,\r\n  perPage          : 1,\r\n  cloneStatus      : true,\r\n  arrows           : true,\r\n  pagination       : true,\r\n  interval         : 5000,\r\n  pauseOnHover     : true,\r\n  pauseOnFocus     : true,\r\n  resetProgress    : true,\r\n  keyboard         : true,\r\n  easing           : 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  drag             : true,\r\n  direction        : 'ltr',\r\n  slideFocus       : true,\r\n  trimSpace        : true,\r\n  focusableNodes   : 'a, button, textarea, input, select, iframe',\r\n  classes          : CLASSES,\r\n  i18n             : I18N,\r\n};\r\n","import { EVENT_MOUNTED, EVENT_REFRESH } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { nextTick, noop, rect, unit, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the fade transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Fade( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { on } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   * The nextTick disables the initial fade transition of the first slide.\r\n   */\r\n  function mount(): void {\r\n    on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\r\n      nextTick( () => {\r\n        Components.Slides.style( 'transition', `opacity ${ options.speed }ms ${ options.easing }` );\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   * Explicitly sets the track height to avoid it will collapse in Safari.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    const { track } = Components.Elements;\r\n    style( track, 'height', unit( rect( track ).height ) );\r\n\r\n    nextTick( () => {\r\n      done();\r\n      style( track, 'height', '' );\r\n    } );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel: noop,\r\n  };\r\n}\r\n","import { SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the slide transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Slide( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { bind } = EventInterface( Splide );\r\n  const { Move, Controller } = Components;\r\n  const { list } = Components.Elements;\r\n\r\n  /**\r\n   * Holds the `done` callback function.\r\n   */\r\n  let endCallback: () => void;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    bind( list, 'transitionend', e => {\r\n      if ( e.target === list && endCallback ) {\r\n        cancel();\r\n        endCallback();\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   * The Move component calls this method just before the slider moves.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    const destination = Move.toPosition( index, true );\r\n    const position    = Move.getPosition();\r\n    const speed       = getSpeed( index );\r\n\r\n    if ( abs( destination - position ) >= 1 && speed >= 1 ) {\r\n      apply( `transform ${ speed }ms ${ options.easing }` );\r\n      Move.translate( destination, true );\r\n      endCallback = done;\r\n    } else {\r\n      Move.jump( index );\r\n      done();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the transition.\r\n   */\r\n  function cancel(): void {\r\n    apply( '' );\r\n  }\r\n\r\n  /**\r\n   * Returns the transition speed.\r\n   *\r\n   * @param index - A destination index.\r\n   */\r\n  function getSpeed( index: number ): number {\r\n    const { rewindSpeed } = options;\r\n\r\n    if ( Splide.is( SLIDE ) && rewindSpeed ) {\r\n      const prev = Controller.getIndex( true );\r\n      const end  = Controller.getEnd();\r\n\r\n      if ( ( prev === 0 && index >= end ) || ( prev >= end && index === 0 ) ) {\r\n        return rewindSpeed;\r\n      }\r\n    }\r\n\r\n    return options.speed;\r\n  }\r\n\r\n  /**\r\n   * Applies the transition CSS property to the list element.\r\n   *\r\n   * @param transition - A transition CSS value.\r\n   */\r\n  function apply( transition: string ): void {\r\n    style( list, 'transition', transition );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel,\r\n  };\r\n}\r\n","import * as ComponentConstructors from '../../components';\r\nimport { SlideMatcher } from '../../components/Slides/Slides';\r\nimport { CLASS_INITIALIZED } from '../../constants/classes';\r\nimport { DEFAULTS } from '../../constants/defaults';\r\nimport { EVENT_DESTROY, EVENT_MOUNTED, EVENT_READY, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { DEFAULT_USER_EVENT_PRIORITY } from '../../constants/priority';\r\nimport { CREATED, DESTROYED, IDLE, STATES } from '../../constants/states';\r\nimport { FADE } from '../../constants/types';\r\nimport { EventBus, EventBusCallback, EventBusObject, State, StateObject } from '../../constructors';\r\nimport { Fade, Slide } from '../../transitions';\r\nimport { ComponentConstructor, Components, EventMap, Options, SyncTarget } from '../../types';\r\nimport { addClass, assert, assign, empty, forOwn, isString, merge, query, slice } from '../../utils';\r\n\r\n\r\n/**\r\n * The frontend class for the Splide slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class Splide {\r\n  /**\r\n   * Changes the default options for all Splide instances.\r\n   */\r\n  static defaults: Options = {};\r\n\r\n  /**\r\n   * The collection of state numbers.\r\n   */\r\n  static readonly STATES = STATES;\r\n\r\n  /**\r\n   * The root element where the Splide is applied.\r\n   */\r\n  readonly root: HTMLElement;\r\n\r\n  /**\r\n   * The EventBusObject object.\r\n   */\r\n  readonly event: EventBusObject = EventBus();\r\n\r\n  /**\r\n   * The collection of all component objects.\r\n   */\r\n  readonly Components: Components = {} as Components;\r\n\r\n  /**\r\n   * The StateObject object.\r\n   */\r\n  readonly state: StateObject = State( CREATED );\r\n\r\n  /**\r\n   * An array with SyncTarget objects for splide instances to sync with.\r\n   */\r\n  readonly splides: SyncTarget[] = [];\r\n\r\n  /**\r\n   * The collection of options.\r\n   */\r\n  private readonly _options: Options = {};\r\n\r\n  /**\r\n   * The collection of all components.\r\n   */\r\n  private _Components: Components;\r\n\r\n  /**\r\n   * The collection of extensions.\r\n   */\r\n  private _Extensions: Record<string, ComponentConstructor> = {};\r\n\r\n  /**\r\n   * The Transition component.\r\n   */\r\n  private _Transition: ComponentConstructor;\r\n\r\n  /**\r\n   * The Splide constructor.\r\n   *\r\n   * @param target  - The selector for the target element, or the element itself.\r\n   * @param options - Optional. An object with options.\r\n   */\r\n  constructor( target: string | HTMLElement, options?: Options ) {\r\n    const root = isString( target ) ? query<HTMLElement>( document, target ) : target;\r\n    assert( root, `${ root } is invalid.` );\r\n\r\n    this.root = root;\r\n\r\n    merge( DEFAULTS, Splide.defaults );\r\n    merge( merge( this._options, DEFAULTS ), options || {} );\r\n  }\r\n\r\n  /**\r\n   * Initializes the instance.\r\n   *\r\n   * @param Extensions - Optional. An object with extensions.\r\n   * @param Transition - Optional. A Transition component.\r\n   *\r\n   * @return `this`\r\n   */\r\n  mount( Extensions?: Record<string, ComponentConstructor>, Transition?: ComponentConstructor ): this {\r\n    const { state, Components } = this;\r\n    assert( state.is( [ CREATED, DESTROYED ] ), 'Already mounted!' );\r\n\r\n    state.set( CREATED );\r\n\r\n    this._Components = Components;\r\n    this._Transition = Transition || this._Transition || ( this.is( FADE ) ? Fade : Slide );\r\n    this._Extensions = Extensions || this._Extensions;\r\n\r\n    const Constructors = assign( {}, ComponentConstructors, this._Extensions, { Transition: this._Transition } );\r\n\r\n    forOwn( Constructors, ( Component, key ) => {\r\n      const component = Component( this, Components, this._options );\r\n      Components[ key ] = component;\r\n      component.setup && component.setup();\r\n    } );\r\n\r\n    forOwn( Components, component => {\r\n      component.mount && component.mount();\r\n    } );\r\n\r\n    this.emit( EVENT_MOUNTED );\r\n\r\n    addClass( this.root, CLASS_INITIALIZED );\r\n\r\n    state.set( IDLE );\r\n    this.emit( EVENT_READY );\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Syncs the slider with the provided one.\r\n   * This method must be called before the `mount()`.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var primary   = new Splide();\r\n   * var secondary = new Splide();\r\n   *\r\n   * primary.sync( secondary );\r\n   * primary.mount();\r\n   * secondary.mount();\r\n   * ```\r\n   *\r\n   * @param splide - A Splide instance to sync with.\r\n   *\r\n   * @return `this`\r\n   */\r\n  sync( splide: Splide ): this {\r\n    this.splides.push( { splide } );\r\n    splide.splides.push( { splide: this, isParent: true } );\r\n\r\n    if ( this.state.is( IDLE ) ) {\r\n      this._Components.Sync.remount();\r\n      splide.Components.Sync.remount();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Moves the slider with the following control pattern.\r\n   *\r\n   * | Pattern | Description |\r\n   * |---|---|\r\n   * | `i` | Goes to the slide `i` |\r\n   * | `'+${i}'` | Increments the slide index by `i` |\r\n   * | `'-${i}'` | Decrements the slide index by `i` |\r\n   * | `'>'` | Goes to the next page |\r\n   * | `'<'` | Goes to the previous page |\r\n   * | `>${i}` | Goes to the page `i` |\r\n   *\r\n   * In most cases, `'>'` and `'<'` notations are enough to control the slider\r\n   * because they respect `perPage` and `perMove` options.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Goes to the slide 1:\r\n   * splide.go( 1 );\r\n   *\r\n   * // Increments the index:\r\n   * splide.go( '+2' );\r\n   *\r\n   * // Goes to the next page:\r\n   * splide.go( '>' );\r\n   *\r\n   * // Goes to the page 2:\r\n   * splide.go( '>2' );\r\n   * ```\r\n   *\r\n   * @param control - A control pattern.\r\n   *\r\n   * @return `this`\r\n   */\r\n  go( control: number | string ): this {\r\n    this._Components.Controller.go( control );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Registers an event handler.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Listens to a single event:\r\n   * splide.on( 'move', function() {} );\r\n   *\r\n   * // Listens to multiple events:\r\n   * splide.on( 'move resize', function() {} );\r\n   *\r\n   * // Appends a namespace:\r\n   * splide.on( 'move.myNamespace resize.myNamespace', function() {} );\r\n   * ```\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   * @param callback - A callback function.\r\n   *\r\n   * @return `this`\r\n   */\r\n  on<K extends keyof EventMap>( events: K, callback: EventMap[ K ] ): this;\r\n  on( events: string | string[], callback: EventBusCallback ): this;\r\n  on( events: string | string[], callback: EventBusCallback ): this {\r\n    this.event.on( events, callback, null, DEFAULT_USER_EVENT_PRIORITY );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes the registered all handlers for the specified event or events.\r\n   * If you want to only remove a particular handler, use namespace to identify it.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Removes all handlers assigned to \"move\":\r\n   * splide.off( 'move' );\r\n   *\r\n   * // Only removes handlers that belong to the specified namespace:\r\n   * splide.off( 'move.myNamespace' );\r\n   * ```\r\n   *\r\n   * @param events - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   *\r\n   * @return `this`\r\n   */\r\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): this {\r\n    this.event.off( events );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Emits an event and triggers registered handlers.\r\n   *\r\n   * @param event - An event name to emit.\r\n   * @param args  - Optional. Any number of arguments to pass to handlers.\r\n   *\r\n   * @return `this`\r\n   */\r\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): this;\r\n  emit( event: string, ...args: any[] ): this;\r\n  emit( event: string ): this {\r\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n    this.event.emit( event, ...slice( arguments, 1 ) );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Inserts a slide at the specified position.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   * splide.mount();\r\n   *\r\n   * // Adds the slide by the HTML:\r\n   * splide.add( '<li></li> );\r\n   *\r\n   * // or adds the element:\r\n   * splide.add( document.createElement( 'li' ) );\r\n   * ```\r\n   *\r\n   * @param slides - A slide element, an HTML string that represents a slide, or an array with them.\r\n   * @param index  - Optional. An index to insert a slide at.\r\n   *\r\n   * @return `this`\r\n   */\r\n  add( slides: string | HTMLElement | Array<string | HTMLElement>, index?: number ): this {\r\n    this._Components.Slides.add( slides, index );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\r\n  remove( matcher: SlideMatcher ): this {\r\n    this._Components.Slides.remove( matcher );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Checks the slider type.\r\n   *\r\n   * @param type - A type to test.\r\n   *\r\n   * @return `true` if the type matches the current one, or otherwise `false`.\r\n   */\r\n  is( type: string ): boolean {\r\n    return this._options.type === type;\r\n  }\r\n\r\n  /**\r\n   * Refreshes the slider.\r\n   *\r\n   * @return `this`\r\n   */\r\n  refresh(): this {\r\n    this.emit( EVENT_REFRESH );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Destroys the slider.\r\n   *\r\n   * @param completely - Optional. If `true`, Splide will not remount the slider by breakpoints.\r\n   *\r\n   * @return `this`\r\n   */\r\n  destroy( completely = true ): this {\r\n    const { event, state } = this;\r\n\r\n    if ( state.is( CREATED ) ) {\r\n      // Postpones destruction requested before the slider becomes ready.\r\n      event.on( EVENT_READY, this.destroy.bind( this, completely ), this );\r\n    } else {\r\n      forOwn( this._Components, component => {\r\n        component.destroy && component.destroy( completely );\r\n      }, true );\r\n\r\n      event.emit( EVENT_DESTROY );\r\n      event.destroy();\r\n      completely && empty( this.splides );\r\n      state.set( DESTROYED );\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns options.\r\n   *\r\n   * @return An object with the latest options.\r\n   */\r\n  get options(): Options {\r\n    return this._options;\r\n  }\r\n\r\n  /**\r\n   * Merges options to the current options and emits `updated` event.\r\n   *\r\n   * @param options - An object with new options.\r\n   */\r\n  set options( options: Options ) {\r\n    const { _options } = this;\r\n    merge( _options, options );\r\n\r\n    if ( ! this.state.is( CREATED ) ) {\r\n      this.emit( EVENT_UPDATED, _options );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the number of slides without clones.\r\n   *\r\n   * @return The number of slides.\r\n   */\r\n  get length(): number {\r\n    return this._Components.Slides.getLength( true );\r\n  }\r\n\r\n  /**\r\n   * Returns the active slide index.\r\n   *\r\n   * @return The active slide index.\r\n   */\r\n  get index(): number {\r\n    return this._Components.Controller.getIndex();\r\n  }\r\n}\r\n"],"names":["PROJECT_CODE","DATA_ATTRIBUTE","CREATED","MOUNTED","IDLE","MOVING","DESTROYED","STATES","DEFAULT_EVENT_PRIORITY","DEFAULT_USER_EVENT_PRIORITY","empty","array","length","isObject","subject","isNull","isArray","Array","isFunction","isString","isUndefined","isHTMLElement","HTMLElement","toArray","value","forEach","values","iteratee","includes","indexOf","push","items","arrayProto","prototype","slice","arrayLike","start","end","call","find","predicate","filter","toggleClass","elm","classes","add","name","classList","addClass","split","append","parent","children","appendChild","bind","before","nodes","ref","node","parentNode","insertBefore","matches","selector","child","firstElementChild","forOwn","object","right","keys","Object","reverse","i","key","assign","arguments","source","merge","removeAttribute","attrs","attr","setAttribute","value2","String","create","tag","document","createElement","style","prop","getComputedStyle","style2","display","display2","focus","preventScroll","getAttribute","hasClass","className","contains","rect","target","getBoundingClientRect","remove","removeChild","measure","div","width","parseHtml","html","DOMParser","parseFromString","body","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","querySelectorAll","removeClass","unit","assert","condition","message","Error","nextTick","callback","setTimeout","noop","raf","func","requestAnimationFrame","min","Math","max","floor","ceil","abs","approximatelyEqual","x","y","epsilon","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","sign","format","string","replacements","replacement","replace","pad","ids","uniqueId","prefix","EventBus","handlers","on","events","priority","forEachEvent","event","namespace","_event","_callback","_namespace","_priority","_key","sort","handler1","handler2","off","eventHandlers","handler","offBy","emit","apply","destroy","join","eventNS","fragments","EVENT_MOUNTED","EVENT_READY","EVENT_MOVE","EVENT_MOVED","EVENT_SHIFTED","EVENT_CLICK","EVENT_ACTIVE","EVENT_INACTIVE","EVENT_VISIBLE","EVENT_HIDDEN","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_REPOSITIONED","EVENT_DRAG","EVENT_DRAGGING","EVENT_DRAGGED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_ARROWS_MOUNTED","EVENT_ARROWS_UPDATED","EVENT_PAGINATION_MOUNTED","EVENT_PAGINATION_UPDATED","EVENT_NAVIGATION_MOUNTED","EVENT_AUTOPLAY_PLAY","EVENT_AUTOPLAY_PLAYING","EVENT_AUTOPLAY_PAUSE","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","listeners","targets","options","event2","addEventListener","unbind","listener","removeEventListener","data","RequestInterval","interval","onInterval","onUpdate","limit","now","Date","startTime","rate","id","paused","count","update","elapsed","pause","resume","cancel","rewind","cancelAnimationFrame","set","time","isPaused","State","initialState","state","is","states","Throttle","duration","throttled","Options","Components2","throttledObserve","observe","initialOptions","points","currPoint","setup","JSON","parse","root","breakpoints","isMin","mediaQuery","n","m","map","point","matchMedia","mount","completely","item","item2","onMatch","newOptions","RTL","TTB","ORIENTATION_MAP","marginRight","autoWidth","fixedWidth","paddingLeft","paddingRight","left","X","Y","ArrowLeft","ArrowRight","Direction","resolve","axisOnly","direction","index","orient","CLASS_ROOT","CLASS_SLIDER","CLASS_TRACK","CLASS_LIST","CLASS_SLIDE","CLASS_CLONE","CLASS_CONTAINER","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_PAGINATION_PAGE","CLASS_PROGRESS","CLASS_PROGRESS_BAR","CLASS_AUTOPLAY","CLASS_PLAY","CLASS_PAUSE","CLASS_SPINNER","CLASS_INITIALIZED","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","STATUS_CLASSES","CLASSES","slide","clone","arrows","arrow","prev","next","pagination","page","spinner","Elements","elements","slides","slider","track","list","collect","identify","getClasses","refresh","autoplay","bar","play","type","drag","isNavigation","ROLE","ARIA_CONTROLS","ARIA_CURRENT","ARIA_LABEL","ARIA_HIDDEN","TAB_INDEX","DISABLED","ARIA_ORIENTATION","ALL_ATTRIBUTES","SLIDE","LOOP","FADE","Slide","slideIndex","destroyEvents","Components","updateOnMove","styles","isClone","container","focusableNodes","destroyed","self","initNavigation","onMove","idx","label","i18n","slideX","controls","splides","splide","updateActivity","isActive","currIndex","updateVisibility","isVisible","active","visible","hidden","slideFocus","useContainer","_style","curr","cloneStatus","trackRect","slideRect","isWithin","from","distance","diff","Slides","Slides2","init","Slide1","Slide2","register","get","excludeClones","getIn","Controller","toIndex","hasFocus","perPage","getAt","forEachItem","observeImages","matcher","removeNode","images","img","getLength","isEnough","Layout","vertical","rootRect","window","resize","cssPadding","newRect","height","cssTrackHeight","gap","cssSlideWidth","setSlidesHeight","cssSlideHeight","padding","cssHeight","heightRatio","cssSlideSize","fixedHeight","autoHeight","listSize","slideSize","withoutGap","getGap","totalSize","sliderSize","parseFloat","getPadding","Clones","clones","cloneCount","computeCloneCount","generate","isHead","cloneDeep","cloneNode","clones2","fixedSize","fixedCount","baseCount","flickMaxPages","Move","Transition","reposition","isBusy","Scroll","jump","move","dest","position","getPosition","translate","shift","trimSpace","go","toPosition","preventLoop","destination","loop","transform","exceededMin","exceededLimit","exceededMax","backwards","excess","getLimit","size","minDistance","Infinity","trimming","offset","trim","getEnd","waitForTransition","isLoop","isSlide","prevIndex","slideCount","perMove","control","allowSameIndex","useScroll","scroll","speed","setIndex","useIndex","snap","toDest","match","indicator","computeDestIndex","getNext","getPrev","getAdjacent","incremental","toPage","closest","getIndex","XML_NAME_SPACE","PATH","SIZE","Arrows","wrapper","created","createArrows","listen","createArrow","prev2","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","INTERVAL_DATA_ATTRIBUTE","Autoplay","hovered","focused","initButton","forPause","button","pauseOnHover","autoToggle","pauseOnFocus","updateInterval","resetProgress","manual","Cover","cover","toggle","src","BOUNCE_DIFF_THRESHOLD","BOUNCE_DURATION","FRICTION_FACTOR","BASE_VELOCITY","MIN_DURATION","scrollCallback","clear","suppressConstraint","friction","computeDuration","onScrolled","easing","bounce","t","easingFunc","pow","SCROLL_LISTENER_OPTIONS","passive","capture","FRICTION","LOG_INTERVAL","POINTER_DOWN_EVENTS","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","Drag","basePosition","baseEvent","prevBaseEvent","lastEvent","isFree","dragging","hasExceeded","clickPrevented","onPointerDown","onClick","disable","noDrag","isTouch","isTouchEvent","isDraggable","onPointerMove","onPointerUp","save","cancelable","coordOf","constrain","expired","timeOf","exceeded","thresholds","dragMinThreshold","mouse","touch","isSliderDirection","velocity","computeVelocity","computeDestination","diffX","diffY","base","diffCoord","diffTime","isFlick","flickPower","orthogonal","touches","timeStamp","TouchEvent","isDragging","IE_ARROW_KEYS","KEYBOARD_EVENT","Keyboard","onUpdated","keyboard","onKeydown","_disabled","normalizedKey","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","LazyLoad","isSequential","lazyLoad","_Slide","_img","srcset","parentElement","_spinner","loadNext","preloadPages","load","onLoad","error","Pagination","createPagination","li","class","text","pageX","TRIGGER_KEYS","Sync","isParent","sync","navigate","remount","instance","Wheel","wheel","onWheel","deltaY","shouldPrevent","releaseWheel","I18N","DEFAULTS","Fade","done","endCallback","getSpeed","rewindSpeed","transition","_Splide","_options","_Extensions","defaults","Extensions","_Components","_Transition","Constructors","ComponentConstructors","Component","component","Splide"],"mappings":"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"}