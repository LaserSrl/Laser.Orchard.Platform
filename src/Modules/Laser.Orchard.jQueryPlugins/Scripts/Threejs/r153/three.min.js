/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
(function(n,t){typeof exports=="object"&&typeof module!="undefined"?t(exports):typeof define=="function"&&define.amd?define(["exports"],t):(n=typeof globalThis!="undefined"?globalThis:n||self,t(n.THREE={}))})(this,function(n){"use strict";function dt(){const n=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0,r=Math.random()*4294967295|0,u=ht[n&255]+ht[n>>8&255]+ht[n>>16&255]+ht[n>>24&255]+"-"+ht[t&255]+ht[t>>8&255]+"-"+ht[t>>16&15|64]+ht[t>>24&255]+"-"+ht[i&63|128]+ht[i>>8&255]+"-"+ht[i>>16&255]+ht[i>>24&255]+ht[r&255]+ht[r>>8&255]+ht[r>>16&255]+ht[r>>24&255];return u.toLowerCase()}function b(n,t,i){return Math.max(t,Math.min(i,n))}function bp(n,t){return(n%t+t)%t}function kot(n,t,i,r,u){return r+(n-t)*(u-r)/(i-t)}function dot(n,t,i){return n!==t?(i-n)/(t-n):0}function ss(n,t,i){return(1-i)*n+i*t}function got(n,t,i,r){return ss(n,t,1-Math.exp(-i*r))}function nst(n,t=1){return t-Math.abs(bp(n,t*2)-t)}function tst(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t),n*n*(3-2*n))}function ist(n,t,i){return n<=t?0:n>=i?1:(n=(n-t)/(i-t),n*n*n*(n*(n*6-15)+10))}function rst(n,t){return n+Math.floor(Math.random()*(t-n+1))}function ust(n,t){return n+Math.random()*(t-n)}function fst(n){return n*(.5-Math.random())}function est(n){n!==undefined&&(dn=n);let t=dn+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function ost(n){return n*gu}function sst(n){return n*ie}function kp(n){return(n&n-1)==0&&n!==0}function gn(n){return Math.pow(2,Math.ceil(Math.log(n)/Math.LN2))}function lc(n){return Math.pow(2,Math.floor(Math.log(n)/Math.LN2))}function hst(n,t,i,r,u){const h=Math.cos,c=Math.sin,f=h(i/2),e=c(i/2),o=h((t+r)/2),s=c((t+r)/2),l=h((t-r)/2),a=c((t-r)/2),v=h((r-t)/2),y=c((r-t)/2);switch(u){case"XYX":n.set(f*s,e*l,e*a,f*o);break;case"YZY":n.set(e*a,f*s,e*l,f*o);break;case"ZXZ":n.set(e*l,e*a,f*s,f*o);break;case"XZX":n.set(f*s,e*y,e*v,f*o);break;case"YXY":n.set(e*v,f*s,e*y,f*o);break;case"ZYZ":n.set(e*y,e*v,f*s,f*o);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+u)}}function gt(n,t){switch(t.constructor){case Float32Array:return n;case Uint32Array:return n/4294967295;case Uint16Array:return n/65535;case Uint8Array:return n/255;case Int32Array:return Math.max(n/2147483647,-1);case Int16Array:return Math.max(n/32767,-1);case Int8Array:return Math.max(n/127,-1);default:throw new Error("Invalid component type.");}}function s(n,t){switch(t.constructor){case Float32Array:return n;case Uint32Array:return Math.round(n*4294967295);case Uint16Array:return Math.round(n*65535);case Uint8Array:return Math.round(n*255);case Int32Array:return Math.round(n*2147483647);case Int16Array:return Math.round(n*32767);case Int8Array:return Math.round(n*127);default:throw new Error("Invalid component type.");}}function ntt(n){for(let t=n.length-1;t>=0;--t)if(n[t]>=65535)return!0;return!1}function re(n,t){return new lst[n](t)}function hs(n){return document.createElementNS("http://www.w3.org/1999/xhtml",n)}function cs(n){n in ttt||(ttt[n]=!0,console.warn(n))}function ue(n){return n<.04045?n*.0773993808:Math.pow(n*.9478672986+.0521327014,2.4)}function gp(n){return n<.0031308?n*12.92:1.055*Math.pow(n,.41666)-.055}function yst(n){return n.convertSRGBToLinear().applyMatrix3(vst)}function pst(n){return n.applyMatrix3(ast).convertLinearToSRGB()}function tw(n){return typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&n instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&n instanceof ImageBitmap?nw.getDataURL(n):n.data?{data:Array.from(n.data),width:n.width,height:n.height,type:n.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}function uw(n,t,i,r,u){for(let f=0,e=n.length-3;f<=e;f+=3){rf.fromArray(n,f);const h=u.x*Math.abs(rf.x)+u.y*Math.abs(rf.y)+u.z*Math.abs(rf.z),e=t.dot(rf),o=i.dot(rf),s=r.dot(rf);if(Math.max(-Math.max(e,o,s),Math.min(e,o,s))>h)return!1}return!0}function vw(n,t,i){return(i<0&&(i+=1),i>1&&(i-=1),i<1/6)?n+(t-n)*6*i:i<1/2?t:i<2/3?n+(t-n)*6*(2/3-i):n}function cht(){const u=new ArrayBuffer(4),e=new Float32Array(u),o=new Uint32Array(u),n=new Uint32Array(512),t=new Uint32Array(512);for(let i=0;i<256;++i){const r=i-127;r<-27?(n[i]=0,n[i|256]=32768,t[i]=24,t[i|256]=24):r<-14?(n[i]=1024>>-r-14,n[i|256]=1024>>-r-14|32768,t[i]=-r-1,t[i|256]=-r-1):r<=15?(n[i]=r+15<<10,n[i|256]=r+15<<10|32768,t[i]=13,t[i|256]=13):r<128?(n[i]=31744,n[i|256]=64512,t[i]=24,t[i|256]=24):(n[i]=31744,n[i|256]=64512,t[i]=13,t[i|256]=13)}const r=new Uint32Array(2048),i=new Uint32Array(64),f=new Uint32Array(64);for(let n=1;n<1024;++n){let t=n<<13,i=0;while((t&8388608)==0)t<<=1,i-=8388608;t&=-8388609;i+=947912704;r[n]=t|i}for(let n=1024;n<2048;++n)r[n]=939524096+(n-1024<<13);for(let n=1;n<31;++n)i[n]=n<<23;i[31]=1199570944;i[32]=2147483648;for(let n=33;n<63;++n)i[n]=2147483648+(n-32<<23);i[63]=3347054592;for(let n=1;n<64;++n)n!==32&&(f[n]=1024);return{floatView:e,uint32View:o,baseTable:n,shiftTable:t,mantissaTable:r,exponentTable:i,offsetTable:f}}function bt(n){Math.abs(n)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range.");n=b(n,-65504,65504);yr.floatView[0]=n;const t=yr.uint32View[0],i=t>>23&511;return yr.baseTable[i]+((t&8388607)>>yr.shiftTable[i])}function ys(n){const t=n>>10;return yr.uint32View[0]=yr.mantissaTable[yr.offsetTable[t]+(n&1023)]+yr.exponentTable[t],yr.floatView[0]}function ght(n,t,i,r,u,f,e,o){let h;if(h=t.side===at?r.intersectTriangle(e,f,u,!0,o):r.intersectTriangle(u,f,e,t.side===rr,o),h===null)return null;hl.copy(o);hl.applyMatrix4(n.matrixWorld);const s=i.ray.origin.distanceTo(hl);return s<i.near||s>i.far?null:{distance:s,point:hl.clone(),object:n}}function cl(n,r,u,f,e,o,s,h,c,l){n.getVertexPosition(h,we);n.getVertexPosition(c,be);n.getVertexPosition(l,ke);const a=ght(n,r,u,f,we,be,ke,sl);if(a){e&&(fl.fromBufferAttribute(e,h),el.fromBufferAttribute(e,c),ol.fromBufferAttribute(e,l),a.uv=ti.getInterpolation(sl,we,be,ke,fl,el,ol,new i));o&&(fl.fromBufferAttribute(o,h),el.fromBufferAttribute(o,c),ol.fromBufferAttribute(o,l),a.uv1=ti.getInterpolation(sl,we,be,ke,fl,el,ol,new i),a.uv2=a.uv1);s&&(ytt.fromBufferAttribute(s,h),ptt.fromBufferAttribute(s,c),wtt.fromBufferAttribute(s,l),a.normal=ti.getInterpolation(sl,we,be,ke,ytt,ptt,wtt,new t),a.normal.dot(f.direction)>0&&a.normal.multiplyScalar(-1));const n={a:h,b:c,c:l,normal:new t,materialIndex:0};ti.getNormal(we,be,ke,n.normal);a.face=n}return a}function de(n){const t={};for(const i in n){t[i]={};for(const r in n[i]){const u=n[i][r];u&&(u.isColor||u.isMatrix3||u.isMatrix4||u.isVector2||u.isVector3||u.isVector4||u.isTexture||u.isQuaternion)?u.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[i][r]=null):t[i][r]=u.clone():t[i][r]=Array.isArray(u)?u.slice():u}}return t}function vt(n){const t={};for(let i=0;i<n.length;i++){const r=de(n[i]);for(const n in r)t[n]=r[n]}return t}function nct(n){const t=[];for(let i=0;i<n.length;i++)t.push(n[i].clone());return t}function btt(n){return n.getRenderTarget()===null?n.outputColorSpace:oi}function iit(){function u(t,f){i(t,f);r=n.requestAnimationFrame(u)}let n=null,t=!1,i=null,r=null;return{start:function(){t!==!0&&i!==null&&(r=n.requestAnimationFrame(u),t=!0)},stop:function(){n.cancelAnimationFrame(r);t=!1},setAnimationLoop:function(n){i=n},setContext:function(t){n=t}}}function rct(n,t){function u(t,i){const u=t.array,o=t.usage,e=n.createBuffer();n.bindBuffer(i,e);n.bufferData(i,u,o);t.onUploadCallback();let f;if(u instanceof Float32Array)f=n.FLOAT;else if(u instanceof Uint16Array)if(t.isFloat16BufferAttribute)if(r)f=n.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else f=n.UNSIGNED_SHORT;else if(u instanceof Int16Array)f=n.SHORT;else if(u instanceof Uint32Array)f=n.UNSIGNED_INT;else if(u instanceof Int32Array)f=n.INT;else if(u instanceof Int8Array)f=n.BYTE;else if(u instanceof Uint8Array)f=n.UNSIGNED_BYTE;else if(u instanceof Uint8ClampedArray)f=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:e,type:f,bytesPerElement:u.BYTES_PER_ELEMENT,version:t.version}}function f(t,i,u){const e=i.array,f=i.updateRange;n.bindBuffer(u,t);f.count===-1?n.bufferSubData(u,0,e):(r?n.bufferSubData(u,f.offset*e.BYTES_PER_ELEMENT,e,f.offset,f.count):n.bufferSubData(u,f.offset*e.BYTES_PER_ELEMENT,e.subarray(f.offset,f.offset+f.count)),f.count=-1);i.onUploadCallback()}function e(n){return n.isInterleavedBufferAttribute&&(n=n.data),i.get(n)}function o(t){t.isInterleavedBufferAttribute&&(t=t.data);const r=i.get(t);r&&(n.deleteBuffer(r.buffer),i.delete(t))}function s(n,t){if(n.isGLBufferAttribute){const t=i.get(n);(!t||t.version<n.version)&&i.set(n,{buffer:n.buffer,type:n.type,bytesPerElement:n.elementSize,version:n.version});return}n.isInterleavedBufferAttribute&&(n=n.data);const r=i.get(n);r===undefined?i.set(n,u(n,t)):r.version<n.version&&(f(r.buffer,n,t),r.version=n.version)}const r=t.isWebGL2,i=new WeakMap;return{get:e,remove:o,update:s}}function uct(n,t,i,r,f,o,s){function b(u,o){let k=!1,b=o.isScene===!0?o.background:null;if(b&&b.isTexture){const n=o.backgroundBlurriness>0;b=(n?i:t).get(b)}b===null?w(a,l):b&&b.isColor&&(w(b,1),k=!0);const d=n.xr,g=d.getEnvironmentBlendMode();switch(g){case"opaque":k=!0;break;case"additive":r.buffers.color.setClear(0,0,0,1,s);k=!0;break;case"alpha-blend":r.buffers.color.setClear(0,0,0,0,s);k=!0}(n.autoClear||k)&&n.clear(n.autoClearColor,n.autoClearDepth,n.autoClearStencil);b&&(b.isCubeTexture||b.mapping===ne)?(h===undefined&&(h=new et(new ff(1,1,1),new tr({name:"BackgroundCubeMaterial",uniforms:de(vi.backgroundCube.uniforms),vertexShader:vi.backgroundCube.vertexShader,fragmentShader:vi.backgroundCube.fragmentShader,side:at,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(n,t,i){this.matrixWorld.copyPosition(i.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),f.update(h)),h.material.uniforms.envMap.value=b,h.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=o.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=o.backgroundIntensity,h.material.toneMapped=b.colorSpace===e?!1:!0,(v!==b||y!==b.version||p!==n.toneMapping)&&(h.material.needsUpdate=!0,v=b,y=b.version,p=n.toneMapping),h.layers.enableAll(),u.unshift(h,h.geometry,h.material,0,0,null)):b&&b.isTexture&&(c===undefined&&(c=new et(new bs(2,2),new tr({name:"BackgroundMaterial",uniforms:de(vi.background.uniforms),vertexShader:vi.background.vertexShader,fragmentShader:vi.background.fragmentShader,side:rr,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),f.update(c)),c.material.uniforms.t2D.value=b,c.material.uniforms.backgroundIntensity.value=o.backgroundIntensity,c.material.toneMapped=b.colorSpace===e?!1:!0,b.matrixAutoUpdate===!0&&b.updateMatrix(),c.material.uniforms.uvTransform.value.copy(b.matrix),(v!==b||y!==b.version||p!==n.toneMapping)&&(c.material.needsUpdate=!0,v=b,y=b.version,p=n.toneMapping),c.layers.enableAll(),u.unshift(c,c.geometry,c.material,0,0,null))}function w(t,i){t.getRGB(yl,btt(n));r.buffers.color.setClear(yl.r,yl.g,yl.b,i,s)}const a=new u(0);let l=o===!0?0:1,c,h,v=null,y=0,p=null;return{getClearColor:function(){return a},setClearColor:function(n,t=1){a.set(n);l=t;w(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(n){l=n;w(a,l)},render:b}}function fct(n,t,i,r){function nt(t,r,f,e,o){let h=!1;if(g){const n=it(e,f,r);u!==n&&(u=n,a(u.object));h=rt(t,e,f,o);h&&ut(t,e,f,o)}else{const n=r.wireframe===!0;(u.geometry!==e.id||u.program!==f.id||u.wireframe!==n)&&(u.geometry=e.id,u.program=f.id,u.wireframe=n,h=!0)}o!==null&&i.update(o,n.ELEMENT_ARRAY_BUFFER);(h||s)&&(s=!1,ft(t,r,f,e),o!==null&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,i.get(o).buffer))}function tt(){return r.isWebGL2?n.createVertexArray():o.createVertexArrayOES()}function a(t){return r.isWebGL2?n.bindVertexArray(t):o.bindVertexArrayOES(t)}function h(t){return r.isWebGL2?n.deleteVertexArray(t):o.deleteVertexArrayOES(t)}function it(n,t,i){const o=i.wireframe===!0;let r=f[n.id];r===undefined&&(r={},f[n.id]=r);let u=r[t.id];u===undefined&&(u={},r[t.id]=u);let e=u[o];return e===undefined&&(e=v(tt()),u[o]=e),e}function v(n){const t=[],i=[],r=[];for(let n=0;n<d;n++)t[n]=0,i[n]=0,r[n]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:i,attributeDivisors:r,object:n,attributes:{},index:null}}function rt(n,t,i,r){const o=u.attributes,s=t.attributes;let f=0;const e=i.getAttributes();for(const t in e){const i=e[t];if(i.location>=0){const r=o[t];let i=s[t];if((i===undefined&&(t==="instanceMatrix"&&n.instanceMatrix&&(i=n.instanceMatrix),t==="instanceColor"&&n.instanceColor&&(i=n.instanceColor)),r===undefined)||r.attribute!==i||i&&r.data!==i.data)return!0;f++}}return u.attributesNum!==f?!0:u.index!==r?!0:!1}function ut(n,t,i,r){const f={},s=t.attributes;let e=0;const o=i.getAttributes();for(const t in o){const i=o[t];if(i.location>=0){let i=s[t];i===undefined&&(t==="instanceMatrix"&&n.instanceMatrix&&(i=n.instanceMatrix),t==="instanceColor"&&n.instanceColor&&(i=n.instanceColor));const r={};r.attribute=i;i&&i.data&&(r.data=i.data);f[t]=r;e++}}u.attributes=f;u.attributesNum=e;u.index=r}function y(){const n=u.newAttributes;for(let t=0,i=n.length;t<i;t++)n[t]=0}function c(n){l(n,0)}function l(i,f){const s=u.newAttributes,e=u.enabledAttributes,o=u.attributeDivisors;if(s[i]=1,e[i]===0&&(n.enableVertexAttribArray(i),e[i]=1),o[i]!==f){const u=r.isWebGL2?n:t.get("ANGLE_instanced_arrays");u[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](i,f);o[i]=f}}function p(){const i=u.newAttributes,t=u.enabledAttributes;for(let r=0,u=t.length;r<u;r++)t[r]!==i[r]&&(n.disableVertexAttribArray(r),t[r]=0)}function w(t,i,r,u,f,e,o){o===!0?n.vertexAttribIPointer(t,i,r,f,e):n.vertexAttribPointer(t,i,r,u,f,e)}function ft(u,f,e,o){if(r.isWebGL2!==!1||!(u.isInstancedMesh||o.isInstancedBufferGeometry)||t.get("ANGLE_instanced_arrays")!==null){y();const a=o.attributes,s=e.getAttributes(),h=f.defaultAttributeValues;for(const t in s){const f=s[t];if(f.location>=0){let e=a[t];if(e===undefined&&(t==="instanceMatrix"&&u.instanceMatrix&&(e=u.instanceMatrix),t==="instanceColor"&&u.instanceColor&&(e=u.instanceColor)),e!==undefined){const v=e.normalized,t=e.itemSize,s=i.get(e);if(s===undefined)continue;const y=s.buffer,h=s.type,a=s.bytesPerElement,p=r.isWebGL2===!0&&(h===n.INT||h===n.UNSIGNED_INT||e.gpuType===fy);if(e.isInterleavedBufferAttribute){const i=e.data,r=i.stride,s=e.offset;if(i.isInstancedInterleavedBuffer){for(let n=0;n<f.locationSize;n++)l(f.location+n,i.meshPerAttribute);u.isInstancedMesh!==!0&&o._maxInstanceCount===undefined&&(o._maxInstanceCount=i.meshPerAttribute*i.count)}else for(let n=0;n<f.locationSize;n++)c(f.location+n);n.bindBuffer(n.ARRAY_BUFFER,y);for(let n=0;n<f.locationSize;n++)w(f.location+n,t/f.locationSize,h,v,r*a,(s+t/f.locationSize*n)*a,p)}else{if(e.isInstancedBufferAttribute){for(let n=0;n<f.locationSize;n++)l(f.location+n,e.meshPerAttribute);u.isInstancedMesh!==!0&&o._maxInstanceCount===undefined&&(o._maxInstanceCount=e.meshPerAttribute*e.count)}else for(let n=0;n<f.locationSize;n++)c(f.location+n);n.bindBuffer(n.ARRAY_BUFFER,y);for(let n=0;n<f.locationSize;n++)w(f.location+n,t/f.locationSize,h,v,t*a,t/f.locationSize*n*a,p)}}else if(h!==undefined){const i=h[t];if(i!==undefined)switch(i.length){case 2:n.vertexAttrib2fv(f.location,i);break;case 3:n.vertexAttrib3fv(f.location,i);break;case 4:n.vertexAttrib4fv(f.location,i);break;default:n.vertexAttrib1fv(f.location,i)}}}}p()}}function et(){b();for(const n in f){const t=f[n];for(const n in t){const i=t[n];for(const n in i)h(i[n].object),delete i[n];delete t[n]}delete f[n]}}function ot(n){if(f[n.id]!==undefined){const t=f[n.id];for(const n in t){const i=t[n];for(const n in i)h(i[n].object),delete i[n];delete t[n]}delete f[n.id]}}function st(n){for(const t in f){const i=f[t];if(i[n.id]!==undefined){const r=i[n.id];for(const n in r)h(r[n].object),delete r[n];delete i[n.id]}}}function b(){(k(),s=!0,u!==e)&&(u=e,a(u.object))}function k(){e.geometry=null;e.program=null;e.wireframe=!1}const d=n.getParameter(n.MAX_VERTEX_ATTRIBS),o=r.isWebGL2?null:t.get("OES_vertex_array_object"),g=r.isWebGL2||o!==null,f={},e=v(null);let u=e,s=!1;return{setup:nt,reset:b,resetDefaultState:k,dispose:et,releaseStatesOfGeometry:ot,releaseStatesOfProgram:st,initAttributes:y,enableAttribute:c,disableUnusedAttributes:p}}function ect(n,t,i,r){function e(n){u=n}function o(t,r){n.drawArrays(u,t,r);i.update(r,u,1)}function s(r,e,o){if(o!==0){let s,h;if(f)s=n,h="drawArraysInstanced";else if(s=t.get("ANGLE_instanced_arrays"),h="drawArraysInstancedANGLE",s===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}s[h](u,r,e,o);i.update(e,u,o)}}const f=r.isWebGL2;let u;this.setMode=e;this.render=o;this.renderInstances=s}function oct(n,t,i){function l(){if(r!==undefined)return r;if(t.has("EXT_texture_filter_anisotropic")===!0){const i=t.get("EXT_texture_filter_anisotropic");r=n.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else r=0;return r}function o(t){if(t==="highp"){if(n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return t==="mediump"&&n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT).precision>0&&n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let r;const f=typeof WebGL2RenderingContext!="undefined"&&n.constructor.name==="WebGL2RenderingContext";let u=i.precision!==undefined?i.precision:"highp";const e=o(u);e!==u&&(console.warn("THREE.WebGLRenderer:",u,"not supported, using",e,"instead."),u=e);const a=f||t.has("WEBGL_draw_buffers"),v=i.logarithmicDepthBuffer===!0,y=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),s=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=n.getParameter(n.MAX_TEXTURE_SIZE),w=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),b=n.getParameter(n.MAX_VERTEX_ATTRIBS),k=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),d=n.getParameter(n.MAX_VARYING_VECTORS),g=n.getParameter(n.MAX_FRAGMENT_UNIFORM_VECTORS),h=s>0,c=f||t.has("OES_texture_float"),nt=h&&c,tt=f?n.getParameter(n.MAX_SAMPLES):0;return{isWebGL2:f,drawBuffers:a,getMaxAnisotropy:l,getMaxPrecision:o,precision:u,logarithmicDepthBuffer:v,maxTextures:y,maxVertexTextures:s,maxTextureSize:p,maxCubemapSize:w,maxAttributes:b,maxVertexUniforms:k,maxVaryings:d,maxFragmentUniforms:g,vertexTextures:h,floatFragmentTextures:c,floatVertexTextures:nt,maxSamples:tt}}function sct(n){function l(){t.value!==f&&(t.value=f,t.needsUpdate=i>0);u.numPlanes=i;u.numIntersection=0}function e(n,i,r,f){const o=n!==null?n.length:0;let e=null;if(o!==0){if(e=t.value,f!==!0||e===null){const t=r+o*4,u=i.matrixWorldInverse;h.getNormalMatrix(u);(e===null||e.length<t)&&(e=new Float32Array(t));for(let t=0,i=r;t!==o;++t,i+=4)s.copy(n[t]).applyMatrix4(u,h),s.normal.toArray(e,i),e[i+3]=s.constant}t.value=e;t.needsUpdate=!0}return u.numPlanes=o,u.numIntersection=0,e}const u=this;let f=null,i=0,o=!1,r=!1;const s=new cu,h=new c,t={value:null,needsUpdate:!1};this.uniform=t;this.numPlanes=0;this.numIntersection=0;this.init=function(n,t){const r=n.length!==0||t||i!==0||o;return o=t,i=n.length,r};this.beginShadows=function(){r=!0;e(null)};this.endShadows=function(){r=!1};this.setGlobalState=function(n,t){f=e(n,t,0)};this.setState=function(u,s,h){const c=u.clippingPlanes,v=u.clipIntersection,y=u.clipShadows,a=n.get(u);if(o&&c!==null&&c.length!==0&&(!r||y)){const u=r?0:i,o=u*4;let n=a.clippingState||null;t.value=n;n=e(c,s,o,h);for(let t=0;t!==o;++t)n[t]=f[t];a.clippingState=n;this.numIntersection=v?this.numPlanes:0;this.numPlanes+=u}else r?e(null):l()}}function hct(n){function i(n,t){return t===ko?n.mapping=kr:t===go&&(n.mapping=dr),n}function u(u){if(u&&u.isTexture&&u.isRenderTargetTexture===!1){const f=u.mapping;if(f===ko||f===go)if(t.has(u)){const n=t.get(u).texture;return i(n,u.mapping)}else{const f=u.image;if(f&&f.height>0){const e=new tit(f.height/2);return e.fromEquirectangularTexture(n,u),t.set(u,e),u.addEventListener("dispose",r),i(e.texture,u.mapping)}return null}}return u}function r(n){const i=n.target;i.removeEventListener("dispose",r);const u=t.get(i);u!==undefined&&(t.delete(i),u.dispose())}function f(){t=new WeakMap}let t=new WeakMap;return{get:u,dispose:f}}function cct(n){const i=[],r=[],u=[];let t=n;const f=n-to+1+rit.length;for(let e=0;e<f;e++){const a=Math.pow(2,t);r.push(a);let v=1/a;e>n-to?v=rit[e-n+to-1]:e===0&&(v=0);u.push(v);const k=1/(a-2),f=-k,o=1+k,tt=[f,f,o,f,o,o,f,f,o,o,f,o],h=6,s=6,y=3,w=2,b=1,d=new Float32Array(y*s*h),g=new Float32Array(w*s*h),nt=new Float32Array(b*s*h);for(let n=0;n<h;n++){const t=n%3*2/3-1,i=n>2?0:-1,r=[t,i,0,t+2/3,i,0,t+2/3,i+1,0,t,i,0,t+2/3,i+1,0,t,i+1,0];d.set(r,y*s*n);g.set(tt,w*s*n);const u=[n,n,n,n,n,n];nt.set(u,b*s*n)}const c=new l;c.setAttribute("position",new p(d,y));c.setAttribute("uv",new p(g,w));c.setAttribute("faceIndex",new p(nt,b));i.push(c);t>to&&t--}return{lodPlanes:i,sizeLods:r,sigmas:u}}function eit(n,t,i){const r=new si(n,t,i);return r.texture.mapping=ne,r.texture.name="PMREM.cubeUv",r.scissorTest=!0,r}function wl(n,t,i,r,u){n.viewport.set(t,i,r,u);n.scissor.set(t,i,r,u)}function lct(n,i,r){const u=new Float32Array(sf),f=new t(0,1,0);return new tr({name:"SphericalGaussianBlur",defines:{n:sf,CUBEUV_TEXEL_WIDTH:1/i,CUBEUV_TEXEL_HEIGHT:1/r,CUBEUV_MAX_MIP:`${n}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:u},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:f}},vertexShader:tb(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ur,depthTest:!1,depthWrite:!1})}function oit(){return new tr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:tb(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ur,depthTest:!1,depthWrite:!1})}function sit(){return new tr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:tb(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ur,depthTest:!1,depthWrite:!1})}function tb(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function act(n){function u(u){if(u&&u.isTexture){const e=u.mapping,o=e===ko||e===go,s=e===kr||e===dr;if(o||s){if(u.isRenderTargetTexture&&u.needsPMREMUpdate===!0){u.needsPMREMUpdate=!1;let r=i.get(u);return t===null&&(t=new nb(n)),r=o?t.fromEquirectangular(u,r):t.fromCubemap(u,r),i.set(u,r),r.texture}if(i.has(u))return i.get(u).texture;else{const e=u.image;if(o&&e&&e.height>0||s&&e&&f(e)){t===null&&(t=new nb(n));const f=o?t.fromEquirectangular(u):t.fromCubemap(u);return i.set(u,f),u.addEventListener("dispose",r),f.texture}return null}}}return u}function f(n){let t=0;const i=6;for(let r=0;r<i;r++)n[r]!==undefined&&t++;return t===i}function r(n){const t=n.target;t.removeEventListener("dispose",r);const u=i.get(t);u!==undefined&&(i.delete(t),u.dispose())}function e(){i=new WeakMap;t!==null&&(t.dispose(),t=null)}let i=new WeakMap,t=null;return{get:u,dispose:e}}function vct(n){function t(t){if(i[t]!==undefined)return i[t];let r;switch(t){case"WEBGL_depth_texture":r=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=n.getExtension(t)}return i[t]=r,r}const i={};return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays"));t("OES_texture_float_linear");t("EXT_color_buffer_half_float");t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function yct(n,t,i,r){function e(n){const o=n.target;o.index!==null&&t.remove(o.index);for(const n in o.attributes)t.remove(o.attributes[n]);for(const n in o.morphAttributes){const i=o.morphAttributes[n];for(let n=0,r=i.length;n<r;n++)t.remove(i[n])}o.removeEventListener("dispose",e);delete f[o.id];const s=u.get(o);s&&(t.remove(s),u.delete(o));r.releaseStatesOfGeometry(o);o.isInstancedBufferGeometry===!0&&delete o._maxInstanceCount;i.memory.geometries--}function s(n,t){return f[t.id]===!0?t:(t.addEventListener("dispose",e),f[t.id]=!0,i.memory.geometries++,t)}function h(i){const r=i.attributes;for(const i in r)t.update(r[i],n.ARRAY_BUFFER);const u=i.morphAttributes;for(const i in u){const r=u[i];for(let i=0,u=r.length;i<u;i++)t.update(r[i],n.ARRAY_BUFFER)}}function o(n){const i=[],r=n.index,e=n.attributes.position;let f=0;if(r!==null){const n=r.array;f=r.version;for(let t=0,r=n.length;t<r;t+=3){const r=n[t+0],u=n[t+1],f=n[t+2];i.push(r,u,u,f,f,r)}}else{const n=e.array;f=e.version;for(let t=0,r=n.length/3-1;t<r;t+=3){const n=t+0,r=t+1,u=t+2;i.push(n,r,r,u,u,n)}}const o=new(ntt(i)?pw:yw)(i,1);o.version=f;const s=u.get(n);s&&t.remove(s);u.set(n,o)}function c(n){const t=u.get(n);if(t){const i=n.index;i!==null&&t.version<i.version&&o(n)}else o(n);return u.get(n)}const f={},u=new WeakMap;return{get:s,update:h,getWireframeAttribute:c}}function pct(n,t,i,r){function s(n){u=n}function h(n){f=n.type;e=n.bytesPerElement}function c(t,r){n.drawElements(u,r,f,t*e);i.update(r,u,1)}function l(r,s,h){if(h!==0){let c,l;if(o)c=n,l="drawElementsInstanced";else if(c=t.get("ANGLE_instanced_arrays"),l="drawElementsInstancedANGLE",c===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}c[l](u,s,f,r*e,h);i.update(s,u,h)}}const o=r.isWebGL2;let u;let f,e;this.setMode=s;this.setIndex=h;this.render=c;this.renderInstances=l}function wct(n){function i(i,r,u){t.calls++;switch(r){case n.TRIANGLES:t.triangles+=u*(i/3);break;case n.LINES:t.lines+=u*(i/2);break;case n.LINE_STRIP:t.lines+=u*(i-1);break;case n.LINE_LOOP:t.lines+=u*i;break;case n.POINTS:t.points+=u*i;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",r)}}function r(){t.calls=0;t.triangles=0;t.points=0;t.lines=0}const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:r,update:i}}function bct(n,t){return n[0]-t[0]}function kct(n,t){return Math.abs(t[1])-Math.abs(n[1])}function dct(n,t,r){function h(h,c,l){const a=h.morphTargetInfluences;if(t.isWebGL2===!0){const s=c.morphAttributes.position||c.morphAttributes.normal||c.morphAttributes.color,e=s!==undefined?s.length:0;let f=o.get(c);if(f===undefined||f.count!==e){f!==undefined&&f.texture.dispose();const a=c.morphAttributes.position!==undefined,v=c.morphAttributes.normal!==undefined,y=c.morphAttributes.color!==undefined,w=c.morphAttributes.position||[],b=c.morphAttributes.normal||[],k=c.morphAttributes.color||[];let s=0;a===!0&&(s=1);v===!0&&(s=2);y===!0&&(s=3);let r=c.attributes.position.count*s,h=1;r>t.maxTextureSize&&(h=Math.ceil(r/t.maxTextureSize),r=t.maxTextureSize);const n=new Float32Array(r*h*4*e),l=new ac(n,r,h,e);l.type=di;l.needsUpdate=!0;const d=s*4;for(let t=0;t<e;t++){const f=w[t],o=b[t],e=k[t],i=r*h*4*t;for(let t=0;t<f.count;t++){const r=t*d;a===!0&&(u.fromBufferAttribute(f,t),n[i+r+0]=u.x,n[i+r+1]=u.y,n[i+r+2]=u.z,n[i+r+3]=0);v===!0&&(u.fromBufferAttribute(o,t),n[i+r+4]=u.x,n[i+r+5]=u.y,n[i+r+6]=u.z,n[i+r+7]=0);y===!0&&(u.fromBufferAttribute(e,t),n[i+r+8]=u.x,n[i+r+9]=u.y,n[i+r+10]=u.z,n[i+r+11]=e.itemSize===4?u.w:1)}}f={count:e,texture:l,size:new i(r,h)};o.set(c,f);function p(){l.dispose();o.delete(c);c.removeEventListener("dispose",p)}c.addEventListener("dispose",p)}let h=0;for(let n=0;n<a.length;n++)h+=a[n];const v=c.morphTargetsRelative?1:1-h;l.getUniforms().setValue(n,"morphTargetBaseInfluence",v);l.getUniforms().setValue(n,"morphTargetInfluences",a);l.getUniforms().setValue(n,"morphTargetsTexture",f.texture,r);l.getUniforms().setValue(n,"morphTargetsTextureSize",f.size)}else{const i=a===undefined?0:a.length;let t=s[c.id];if(t===undefined||t.length!==i){t=[];for(let n=0;n<i;n++)t[n]=[n,0];s[c.id]=t}for(let n=0;n<i;n++){const i=t[n];i[0]=n;i[1]=a[n]}t.sort(kct);for(let n=0;n<8;n++)n<i&&t[n][1]?(f[n][0]=t[n][0],f[n][1]=t[n][1]):(f[n][0]=Number.MAX_SAFE_INTEGER,f[n][1]=0);f.sort(bct);const r=c.morphAttributes.position,u=c.morphAttributes.normal;let o=0;for(let n=0;n<8;n++){const s=f[n],t=s[0],i=s[1];t!==Number.MAX_SAFE_INTEGER&&i?(r&&c.getAttribute("morphTarget"+n)!==r[t]&&c.setAttribute("morphTarget"+n,r[t]),u&&c.getAttribute("morphNormal"+n)!==u[t]&&c.setAttribute("morphNormal"+n,u[t]),e[n]=i,o+=i):(r&&c.hasAttribute("morphTarget"+n)===!0&&c.deleteAttribute("morphTarget"+n),u&&c.hasAttribute("morphNormal"+n)===!0&&c.deleteAttribute("morphNormal"+n),e[n]=0)}const h=c.morphTargetsRelative?1:1-o;l.getUniforms().setValue(n,"morphTargetBaseInfluence",h);l.getUniforms().setValue(n,"morphTargetInfluences",e)}}const s={},e=new Float32Array(8),o=new WeakMap,u=new y,f=[];for(let n=0;n<8;n++)f[n]=[n,0];return{update:h}}function gct(n,t,i,r){function e(e){const s=r.render.frame,h=e.geometry,o=t.get(e,h);return u.get(o)!==s&&(t.update(o),u.set(o,s)),e.isInstancedMesh&&(e.hasEventListener("dispose",f)===!1&&e.addEventListener("dispose",f),i.update(e.instanceMatrix,n.ARRAY_BUFFER),e.instanceColor!==null&&i.update(e.instanceColor,n.ARRAY_BUFFER)),o}function o(){u=new WeakMap}function f(n){const t=n.target;t.removeEventListener("dispose",f);i.remove(t.instanceMatrix);t.instanceColor!==null&&i.remove(t.instanceColor)}let u=new WeakMap;return{update:e,dispose:o}}function ro(n,t,i){const u=n[0];if(u<=0||u>0)return n;const f=t*i;let r=vit[f];if(r===undefined&&(r=new Float32Array(f),vit[f]=r),t!==0){u.toArray(r,0);for(let u=1,f=0;u!==t;++u)f+=i,n[u].toArray(r,f)}return r}function rt(n,t){if(n.length!==t.length)return!1;for(let i=0,r=n.length;i<r;i++)if(n[i]!==t[i])return!1;return!0}function ut(n,t){for(let i=0,r=t.length;i<r;i++)n[i]=t[i]}function bl(n,t){let i=yit[t];i===undefined&&(i=new Int32Array(t),yit[t]=i);for(let r=0;r!==t;++r)i[r]=n.allocateTextureUnit();return i}function nlt(n,t){const i=this.cache;i[0]!==t&&(n.uniform1f(this.addr,t),i[0]=t)}function tlt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y)&&(n.uniform2f(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(rt(i,t))return;n.uniform2fv(this.addr,t);ut(i,t)}}function ilt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(n.uniform3f(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else if(t.r!==undefined)(i[0]!==t.r||i[1]!==t.g||i[2]!==t.b)&&(n.uniform3f(this.addr,t.r,t.g,t.b),i[0]=t.r,i[1]=t.g,i[2]=t.b);else{if(rt(i,t))return;n.uniform3fv(this.addr,t);ut(i,t)}}function rlt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(n.uniform4f(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(rt(i,t))return;n.uniform4fv(this.addr,t);ut(i,t)}}function ult(n,t){const i=this.cache,r=t.elements;if(r===undefined){if(rt(i,t))return;n.uniformMatrix2fv(this.addr,!1,t);ut(i,t)}else{if(rt(i,r))return;bit.set(r);n.uniformMatrix2fv(this.addr,!1,bit);ut(i,r)}}function flt(n,t){const i=this.cache,r=t.elements;if(r===undefined){if(rt(i,t))return;n.uniformMatrix3fv(this.addr,!1,t);ut(i,t)}else{if(rt(i,r))return;wit.set(r);n.uniformMatrix3fv(this.addr,!1,wit);ut(i,r)}}function elt(n,t){const i=this.cache,r=t.elements;if(r===undefined){if(rt(i,t))return;n.uniformMatrix4fv(this.addr,!1,t);ut(i,t)}else{if(rt(i,r))return;pit.set(r);n.uniformMatrix4fv(this.addr,!1,pit);ut(i,r)}}function olt(n,t){const i=this.cache;i[0]!==t&&(n.uniform1i(this.addr,t),i[0]=t)}function slt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y)&&(n.uniform2i(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(rt(i,t))return;n.uniform2iv(this.addr,t);ut(i,t)}}function hlt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(n.uniform3i(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(rt(i,t))return;n.uniform3iv(this.addr,t);ut(i,t)}}function clt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(n.uniform4i(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(rt(i,t))return;n.uniform4iv(this.addr,t);ut(i,t)}}function llt(n,t){const i=this.cache;i[0]!==t&&(n.uniform1ui(this.addr,t),i[0]=t)}function alt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y)&&(n.uniform2ui(this.addr,t.x,t.y),i[0]=t.x,i[1]=t.y);else{if(rt(i,t))return;n.uniform2uiv(this.addr,t);ut(i,t)}}function vlt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z)&&(n.uniform3ui(this.addr,t.x,t.y,t.z),i[0]=t.x,i[1]=t.y,i[2]=t.z);else{if(rt(i,t))return;n.uniform3uiv(this.addr,t);ut(i,t)}}function ylt(n,t){const i=this.cache;if(t.x!==undefined)(i[0]!==t.x||i[1]!==t.y||i[2]!==t.z||i[3]!==t.w)&&(n.uniform4ui(this.addr,t.x,t.y,t.z,t.w),i[0]=t.x,i[1]=t.y,i[2]=t.z,i[3]=t.w);else{if(rt(i,t))return;n.uniform4uiv(this.addr,t);ut(i,t)}}function plt(n,t,i){const u=this.cache,r=i.allocateTextureUnit();u[0]!==r&&(n.uniform1i(this.addr,r),u[0]=r);i.setTexture2D(t||hit,r)}function wlt(n,t,i){const u=this.cache,r=i.allocateTextureUnit();u[0]!==r&&(n.uniform1i(this.addr,r),u[0]=r);i.setTexture3D(t||lit,r)}function blt(n,t,i){const u=this.cache,r=i.allocateTextureUnit();u[0]!==r&&(n.uniform1i(this.addr,r),u[0]=r);i.setTextureCube(t||ait,r)}function klt(n,t,i){const u=this.cache,r=i.allocateTextureUnit();u[0]!==r&&(n.uniform1i(this.addr,r),u[0]=r);i.setTexture2DArray(t||cit,r)}function dlt(n){switch(n){case 5126:return nlt;case 35664:return tlt;case 35665:return ilt;case 35666:return rlt;case 35674:return ult;case 35675:return flt;case 35676:return elt;case 5124:case 35670:return olt;case 35667:case 35671:return slt;case 35668:case 35672:return hlt;case 35669:case 35673:return clt;case 5125:return llt;case 36294:return alt;case 36295:return vlt;case 36296:return ylt;case 35678:case 36198:case 36298:case 36306:case 35682:return plt;case 35679:case 36299:case 36307:return wlt;case 35680:case 36300:case 36308:case 36293:return blt;case 36289:case 36303:case 36311:case 36292:return klt}}function glt(n,t){n.uniform1fv(this.addr,t)}function nat(n,t){const i=ro(t,this.size,2);n.uniform2fv(this.addr,i)}function tat(n,t){const i=ro(t,this.size,3);n.uniform3fv(this.addr,i)}function iat(n,t){const i=ro(t,this.size,4);n.uniform4fv(this.addr,i)}function rat(n,t){const i=ro(t,this.size,4);n.uniformMatrix2fv(this.addr,!1,i)}function uat(n,t){const i=ro(t,this.size,9);n.uniformMatrix3fv(this.addr,!1,i)}function fat(n,t){const i=ro(t,this.size,16);n.uniformMatrix4fv(this.addr,!1,i)}function eat(n,t){n.uniform1iv(this.addr,t)}function oat(n,t){n.uniform2iv(this.addr,t)}function sat(n,t){n.uniform3iv(this.addr,t)}function hat(n,t){n.uniform4iv(this.addr,t)}function cat(n,t){n.uniform1uiv(this.addr,t)}function lat(n,t){n.uniform2uiv(this.addr,t)}function aat(n,t){n.uniform3uiv(this.addr,t)}function vat(n,t){n.uniform4uiv(this.addr,t)}function yat(n,t,i){const u=this.cache,f=t.length,r=bl(i,f);rt(u,r)||(n.uniform1iv(this.addr,r),ut(u,r));for(let n=0;n!==f;++n)i.setTexture2D(t[n]||hit,r[n])}function pat(n,t,i){const u=this.cache,f=t.length,r=bl(i,f);rt(u,r)||(n.uniform1iv(this.addr,r),ut(u,r));for(let n=0;n!==f;++n)i.setTexture3D(t[n]||lit,r[n])}function wat(n,t,i){const u=this.cache,f=t.length,r=bl(i,f);rt(u,r)||(n.uniform1iv(this.addr,r),ut(u,r));for(let n=0;n!==f;++n)i.setTextureCube(t[n]||ait,r[n])}function bat(n,t,i){const u=this.cache,f=t.length,r=bl(i,f);rt(u,r)||(n.uniform1iv(this.addr,r),ut(u,r));for(let n=0;n!==f;++n)i.setTexture2DArray(t[n]||cit,r[n])}function kat(n){switch(n){case 5126:return glt;case 35664:return nat;case 35665:return tat;case 35666:return iat;case 35674:return rat;case 35675:return uat;case 35676:return fat;case 5124:case 35670:return eat;case 35667:case 35671:return oat;case 35668:case 35672:return sat;case 35669:case 35673:return hat;case 5125:return cat;case 36294:return lat;case 36295:return aat;case 36296:return vat;case 35678:case 36198:case 36298:case 36306:case 35682:return yat;case 35679:case 36299:case 36307:return pat;case 35680:case 36300:case 36308:case 36293:return wat;case 36289:case 36303:case 36311:case 36292:return bat}}function kit(n,t){n.seq.push(t);n.map[t.id]=t}function tvt(n,t,i){const r=n.name,u=r.length;for(ib.lastIndex=0;;){const e=ib.exec(r),s=ib.lastIndex;let f=e[1];const h=e[2]==="]",o=e[3];if(h&&(f=f|0),o===undefined||o==="["&&s+2===u){kit(i,o===undefined?new dat(f,n,t):new gat(f,n,t));break}else{const t=i.map;let n=t[f];n===undefined&&(n=new nvt(f),kit(i,n));i=n}}}function dit(n,t,i){const r=n.createShader(t);return n.shaderSource(r,i),n.compileShader(r),r}function rvt(n,t){const i=n.split("\n"),r=[],u=Math.max(t-6,0),f=Math.min(t+6,i.length);for(let n=u;n<f;n++){const u=n+1;r.push(`${u===t?">":" "} ${u}: ${i[n]}`)}return r.join("\n")}function uvt(n){switch(n){case oi:return["Linear","( value )"];case e:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",n),["Linear","( value )"]}}function git(n,t,i){const f=n.getShaderParameter(t,n.COMPILE_STATUS),r=n.getShaderInfoLog(t).trim();if(f&&r==="")return"";const u=/ERROR: 0:(\d+)/.exec(r);if(u){const f=parseInt(u[1]);return i.toUpperCase()+"\n\n"+r+"\n\n"+rvt(n.getShaderSource(t),f)}return r}function fvt(n,t){const i=uvt(t);return"vec4 "+n+"( vec4 value ) { return LinearTo"+i[0]+i[1]+"; }"}function evt(n,t){let i;switch(t){case cg:i="Linear";break;case lg:i="Reinhard";break;case ag:i="OptimizedCineon";break;case vg:i="ACESFilmic";break;case yg:i="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t);i="Linear"}return"vec3 "+n+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function ovt(n){const t=[n.extensionDerivatives||!!n.envMapCubeUVHeight||n.bumpMap||n.normalMapTangentSpace||n.clearcoatNormalMap||n.flatShading||n.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(n.extensionFragDepth||n.logarithmicDepthBuffer)&&n.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",n.extensionDrawBuffers&&n.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(n.extensionShaderTextureLOD||n.envMap||n.transmission)&&n.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(ks).join("\n")}function svt(n){const t=[];for(const i in n){const r=n[i];r!==!1&&t.push("#define "+i+" "+r)}return t.join("\n")}function hvt(n,t){const i={},r=n.getProgramParameter(t,n.ACTIVE_ATTRIBUTES);for(let u=0;u<r;u++){const r=n.getActiveAttrib(t,u),e=r.name;let f=1;r.type===n.FLOAT_MAT2&&(f=2);r.type===n.FLOAT_MAT3&&(f=3);r.type===n.FLOAT_MAT4&&(f=4);i[e]={type:r.type,location:n.getAttribLocation(t,e),locationSize:f}}return i}function ks(n){return n!==""}function nrt(n,t){const i=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return n.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,i).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function trt(n,t){return n.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}function rb(n){return n.replace(cvt,lvt)}function lvt(n,t){const i=h[t];if(i===undefined)throw new Error("Can not resolve #include <"+t+">");return rb(i)}function irt(n){return n.replace(avt,vvt)}function vvt(n,t,i,r){let u="";for(let n=parseInt(t);n<parseInt(i);n++)u+=r.replace(/\[\s*i\s*\]/g,"[ "+n+" ]").replace(/UNROLLED_LOOP_INDEX/g,n);return u}function rrt(n){let t="precision "+n.precision+" float;\nprecision "+n.precision+" int;";return n.precision==="highp"?t+="\n#define HIGH_PRECISION":n.precision==="mediump"?t+="\n#define MEDIUM_PRECISION":n.precision==="lowp"&&(t+="\n#define LOW_PRECISION"),t}function yvt(n){let t="SHADOWMAP_TYPE_BASIC";return n.shadowMapType===bv?t="SHADOWMAP_TYPE_PCF":n.shadowMapType===hd?t="SHADOWMAP_TYPE_PCF_SOFT":n.shadowMapType===wi&&(t="SHADOWMAP_TYPE_VSM"),t}function pvt(n){let t="ENVMAP_TYPE_CUBE";if(n.envMap)switch(n.envMapMode){case kr:case dr:t="ENVMAP_TYPE_CUBE";break;case ne:t="ENVMAP_TYPE_CUBE_UV"}return t}function wvt(n){let t="ENVMAP_MODE_REFLECTION";if(n.envMap)switch(n.envMapMode){case dr:t="ENVMAP_MODE_REFRACTION"}return t}function bvt(n){let t="ENVMAP_BLENDING_NONE";if(n.envMap)switch(n.combine){case bo:t="ENVMAP_BLENDING_MULTIPLY";break;case sg:t="ENVMAP_BLENDING_MIX";break;case hg:t="ENVMAP_BLENDING_ADD"}return t}function kvt(n){const t=n.envMapCubeUVHeight;if(t===null)return null;const i=Math.log2(t)-2,r=1/t,u=1/(3*Math.max(Math.pow(2,i),112));return{texelWidth:u,texelHeight:r,maxMip:i}}function dvt(n,t,i,r){const u=n.getContext(),nt=i.defines;let e=i.vertexShader,o=i.fragmentShader;const k=yvt(i),tt=pvt(i),d=wvt(i),it=bvt(i),l=kvt(i),g=i.isWebGL2?"":ovt(i),y=svt(nt),f=u.createProgram();let s,c,p=i.glslVersion?"#version "+i.glslVersion+"\n":"";i.isRawShaderMaterial?(s=["#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,y].filter(ks).join("\n"),s.length>0&&(s+="\n"),c=[g,"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,y].filter(ks).join("\n"),c.length>0&&(c+="\n")):(s=[rrt(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,y,i.instancing?"#define USE_INSTANCING":"",i.instancingColor?"#define USE_INSTANCING_COLOR":"",i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+d:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.displacementMap?"#define USE_DISPLACEMENTMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.mapUv?"#define MAP_UV "+i.mapUv:"",i.alphaMapUv?"#define ALPHAMAP_UV "+i.alphaMapUv:"",i.lightMapUv?"#define LIGHTMAP_UV "+i.lightMapUv:"",i.aoMapUv?"#define AOMAP_UV "+i.aoMapUv:"",i.emissiveMapUv?"#define EMISSIVEMAP_UV "+i.emissiveMapUv:"",i.bumpMapUv?"#define BUMPMAP_UV "+i.bumpMapUv:"",i.normalMapUv?"#define NORMALMAP_UV "+i.normalMapUv:"",i.displacementMapUv?"#define DISPLACEMENTMAP_UV "+i.displacementMapUv:"",i.metalnessMapUv?"#define METALNESSMAP_UV "+i.metalnessMapUv:"",i.roughnessMapUv?"#define ROUGHNESSMAP_UV "+i.roughnessMapUv:"",i.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+i.anisotropyMapUv:"",i.clearcoatMapUv?"#define CLEARCOATMAP_UV "+i.clearcoatMapUv:"",i.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+i.clearcoatNormalMapUv:"",i.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+i.clearcoatRoughnessMapUv:"",i.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+i.iridescenceMapUv:"",i.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+i.iridescenceThicknessMapUv:"",i.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+i.sheenColorMapUv:"",i.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+i.sheenRoughnessMapUv:"",i.specularMapUv?"#define SPECULARMAP_UV "+i.specularMapUv:"",i.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+i.specularColorMapUv:"",i.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+i.specularIntensityMapUv:"",i.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+i.transmissionMapUv:"",i.thicknessMapUv?"#define THICKNESSMAP_UV "+i.thicknessMapUv:"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&i.flatShading===!1?"#define USE_MORPHNORMALS":"",i.morphColors&&i.isWebGL2?"#define USE_MORPHCOLORS":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+i.morphTextureStride:"",i.morphTargetsCount>0&&i.isWebGL2?"#define MORPHTARGETS_COUNT "+i.morphTargetsCount:"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+k:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.useLegacyLights?"#define LEGACY_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ks).join("\n"),c=[g,rrt(i),"#define SHADER_TYPE "+i.shaderType,"#define SHADER_NAME "+i.shaderName,y,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp2?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.matcap?"#define USE_MATCAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+tt:"",i.envMap?"#define "+d:"",i.envMap?"#define "+it:"",l?"#define CUBEUV_TEXEL_WIDTH "+l.texelWidth:"",l?"#define CUBEUV_TEXEL_HEIGHT "+l.texelHeight:"",l?"#define CUBEUV_MAX_MIP "+l.maxMip+".0":"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",i.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.anisotropy?"#define USE_ANISOTROPY":"",i.anisotropyMap?"#define USE_ANISOTROPYMAP":"",i.clearcoat?"#define USE_CLEARCOAT":"",i.clearcoatMap?"#define USE_CLEARCOATMAP":"",i.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",i.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",i.iridescence?"#define USE_IRIDESCENCE":"",i.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",i.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",i.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.alphaTest?"#define USE_ALPHATEST":"",i.sheen?"#define USE_SHEEN":"",i.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",i.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",i.transmission?"#define USE_TRANSMISSION":"",i.transmissionMap?"#define USE_TRANSMISSIONMAP":"",i.thicknessMap?"#define USE_THICKNESSMAP":"",i.vertexTangents?"#define USE_TANGENT":"",i.vertexColors||i.instancingColor?"#define USE_COLOR":"",i.vertexAlphas?"#define USE_COLOR_ALPHA":"",i.vertexUv1s?"#define USE_UV1":"",i.vertexUv2s?"#define USE_UV2":"",i.vertexUv3s?"#define USE_UV3":"",i.pointsUvs?"#define USE_POINTS_UV":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"",i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+k:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.useLegacyLights?"#define LEGACY_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&i.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",i.toneMapping!==ki?"#define TONE_MAPPING":"",i.toneMapping!==ki?h.tonemapping_pars_fragment:"",i.toneMapping!==ki?evt("toneMapping",i.toneMapping):"",i.dithering?"#define DITHERING":"",i.opaque?"#define OPAQUE":"",h.encodings_pars_fragment,fvt("linearToOutputTexel",i.outputColorSpace),i.useDepthPacking?"#define DEPTH_PACKING "+i.depthPacking:"","\n"].filter(ks).join("\n"));e=rb(e);e=nrt(e,i);e=trt(e,i);o=rb(o);o=nrt(o,i);o=trt(o,i);e=irt(e);o=irt(o);i.isWebGL2&&i.isRawShaderMaterial!==!0&&(p="#version 300 es\n",s="precision mediump sampler2DArray;\n#define attribute in\n#define varying out\n#define texture2D texture\n"+s,c=["#define varying in",i.glslVersion===wp?"":"layout(location = 0) out highp vec4 pc_fragColor;",i.glslVersion===wp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+c);const rt=p+s+e,ut=p+c+o,a=dit(u,u.VERTEX_SHADER,rt),v=dit(u,u.FRAGMENT_SHADER,ut);if(u.attachShader(f,a),u.attachShader(f,v),i.index0AttributeName!==undefined?u.bindAttribLocation(f,0,i.index0AttributeName):i.morphTargets===!0&&u.bindAttribLocation(f,0,"position"),u.linkProgram(f),n.debug.checkShaderErrors){const t=u.getProgramInfoLog(f).trim(),i=u.getShaderInfoLog(a).trim(),r=u.getShaderInfoLog(v).trim();let e=!0,o=!0;if(u.getProgramParameter(f,u.LINK_STATUS)===!1)if(e=!1,typeof n.debug.onShaderError=="function")n.debug.onShaderError(u,f,a,v);else{const n=git(u,a,"vertex"),i=git(u,v,"fragment");console.error("THREE.WebGLProgram: Shader Error "+u.getError()+" - VALIDATE_STATUS "+u.getProgramParameter(f,u.VALIDATE_STATUS)+"\n\nProgram Info Log: "+t+"\n"+n+"\n"+i)}else t!==""?console.warn("THREE.WebGLProgram: Program Info Log:",t):(i===""||r==="")&&(o=!1);o&&(this.diagnostics={runnable:e,programLog:t,vertexShader:{log:i,prefix:s},fragmentShader:{log:r,prefix:c}})}u.deleteShader(a);u.deleteShader(v);let w;this.getUniforms=function(){return w===undefined&&(w=new kl(u,f)),w};let b;return this.getAttributes=function(){return b===undefined&&(b=hvt(u,f)),b},this.destroy=function(){r.releaseStatesOfProgram(this);u.deleteProgram(f);this.program=undefined},this.type=i.shaderType,this.name=i.shaderName,this.id=ivt++,this.cacheKey=t,this.usedTimes=1,this.program=f,this.vertexShader=a,this.fragmentShader=v,this}function iyt(n,t,i,r,u,f,e){function s(n){return n===0?"uv":`uv${n}`}function w(f,o,h,w,b){const rt=w.fog,k=b.geometry,ir=f.isMeshStandardMaterial?w.environment:null,d=(f.isMeshStandardMaterial?i:t).get(f.envMap||ir),rr=!!d&&d.mapping===ne?d.image.height:null,ut=y[f.type];f.precision!==null&&(a=u.getMaxPrecision(f.precision),a!==f.precision&&console.warn("THREE.WebGLProgram.getParameters:",f.precision,"not supported, using",a,"instead."));const pt=k.morphAttributes.position||k.morphAttributes.normal||k.morphAttributes.color,ur=pt!==undefined?pt.length:0;let nt=0;k.morphAttributes.position!==undefined&&(nt=1);k.morphAttributes.normal!==undefined&&(nt=2);k.morphAttributes.color!==undefined&&(nt=3);let ft,et,wt,bt;if(ut){const n=vi[ut];ft=n.vertexShader;et=n.fragmentShader}else ft=f.vertexShader,et=f.fragmentShader,c.update(f),wt=c.getVertexShaderID(f),bt=c.getFragmentShaderID(f);const ot=n.getRenderTarget(),kt=b.isInstancedMesh===!0,st=!!f.map,fr=!!f.matcap,dt=!!d,gt=!!f.aoMap,ni=!!f.lightMap,ti=!!f.bumpMap,g=!!f.normalMap,ii=!!f.displacementMap,ri=!!f.emissiveMap,ui=!!f.metalnessMap,fi=!!f.roughnessMap,ht=f.anisotropy>0,tt=f.clearcoat>0,ct=f.iridescence>0,lt=f.sheen>0,vt=f.transmission>0,ei=ht&&!!f.anisotropyMap,si=tt&&!!f.clearcoatMap,hi=tt&&!!f.clearcoatNormalMap,ci=tt&&!!f.clearcoatRoughnessMap,li=ct&&!!f.iridescenceMap,ai=ct&&!!f.iridescenceThicknessMap,yi=lt&&!!f.sheenColorMap,pi=lt&&!!f.sheenRoughnessMap,wi=!!f.specularMap,di=!!f.specularColorMap,gi=!!f.specularIntensityMap,nr=vt&&!!f.transmissionMap,tr=vt&&!!f.thicknessMap,er=!!f.gradientMap,yt=!!f.alphaMap,or=f.alphaTest>0,it=!!f.extensions,sr=!!k.attributes.uv1,hr=!!k.attributes.uv2,cr=!!k.attributes.uv3;return{isWebGL2:l,shaderID:ut,shaderType:f.type,shaderName:f.name,vertexShader:ft,fragmentShader:et,defines:f.defines,customVertexShaderID:wt,customFragmentShaderID:bt,isRawShaderMaterial:f.isRawShaderMaterial===!0,glslVersion:f.glslVersion,precision:a,instancing:kt,instancingColor:kt&&b.instanceColor!==null,supportsVertexTextures:v,outputColorSpace:ot===null?n.outputColorSpace:ot.isXRRenderTarget===!0?ot.texture.colorSpace:oi,map:st,matcap:fr,envMap:dt,envMapMode:dt&&d.mapping,envMapCubeUVHeight:rr,aoMap:gt,lightMap:ni,bumpMap:ti,normalMap:g,displacementMap:v&&ii,emissiveMap:ri,normalMapObjectSpace:g&&f.normalMapType===hn,normalMapTangentSpace:g&&f.normalMapType===ru,metalnessMap:ui,roughnessMap:fi,anisotropy:ht,anisotropyMap:ei,clearcoat:tt,clearcoatMap:si,clearcoatNormalMap:hi,clearcoatRoughnessMap:ci,iridescence:ct,iridescenceMap:li,iridescenceThicknessMap:ai,sheen:lt,sheenColorMap:yi,sheenRoughnessMap:pi,specularMap:wi,specularColorMap:di,specularIntensityMap:gi,transmission:vt,transmissionMap:nr,thicknessMap:tr,gradientMap:er,opaque:f.transparent===!1&&f.blending===pu,alphaMap:yt,alphaTest:or,combine:f.combine,mapUv:st&&s(f.map.channel),aoMapUv:gt&&s(f.aoMap.channel),lightMapUv:ni&&s(f.lightMap.channel),bumpMapUv:ti&&s(f.bumpMap.channel),normalMapUv:g&&s(f.normalMap.channel),displacementMapUv:ii&&s(f.displacementMap.channel),emissiveMapUv:ri&&s(f.emissiveMap.channel),metalnessMapUv:ui&&s(f.metalnessMap.channel),roughnessMapUv:fi&&s(f.roughnessMap.channel),anisotropyMapUv:ei&&s(f.anisotropyMap.channel),clearcoatMapUv:si&&s(f.clearcoatMap.channel),clearcoatNormalMapUv:hi&&s(f.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ci&&s(f.clearcoatRoughnessMap.channel),iridescenceMapUv:li&&s(f.iridescenceMap.channel),iridescenceThicknessMapUv:ai&&s(f.iridescenceThicknessMap.channel),sheenColorMapUv:yi&&s(f.sheenColorMap.channel),sheenRoughnessMapUv:pi&&s(f.sheenRoughnessMap.channel),specularMapUv:wi&&s(f.specularMap.channel),specularColorMapUv:di&&s(f.specularColorMap.channel),specularIntensityMapUv:gi&&s(f.specularIntensityMap.channel),transmissionMapUv:nr&&s(f.transmissionMap.channel),thicknessMapUv:tr&&s(f.thicknessMap.channel),alphaMapUv:yt&&s(f.alphaMap.channel),vertexTangents:!!k.attributes.tangent&&(g||ht),vertexColors:f.vertexColors,vertexAlphas:f.vertexColors===!0&&!!k.attributes.color&&k.attributes.color.itemSize===4,vertexUv1s:sr,vertexUv2s:hr,vertexUv3s:cr,pointsUvs:b.isPoints===!0&&!!k.attributes.uv&&(st||yt),fog:!!rt,useFog:f.fog===!0,fogExp2:rt&&rt.isFogExp2,flatShading:f.flatShading===!0,sizeAttenuation:f.sizeAttenuation===!0,logarithmicDepthBuffer:p,skinning:b.isSkinnedMesh===!0,morphTargets:k.morphAttributes.position!==undefined,morphNormals:k.morphAttributes.normal!==undefined,morphColors:k.morphAttributes.color!==undefined,morphTargetsCount:ur,morphTextureStride:nt,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:e.numPlanes,numClipIntersection:e.numIntersection,dithering:f.dithering,shadowMapEnabled:n.shadowMap.enabled&&h.length>0,shadowMapType:n.shadowMap.type,toneMapping:f.toneMapped?n.toneMapping:ki,useLegacyLights:n.useLegacyLights,premultipliedAlpha:f.premultipliedAlpha,doubleSided:f.side===bi,flipSided:f.side===at,useDepthPacking:f.depthPacking>=0,depthPacking:f.depthPacking||0,index0AttributeName:f.index0AttributeName,extensionDerivatives:it&&f.extensions.derivatives===!0,extensionFragDepth:it&&f.extensions.fragDepth===!0,extensionDrawBuffers:it&&f.extensions.drawBuffers===!0,extensionShaderTextureLOD:it&&f.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:l||r.has("EXT_frag_depth"),rendererExtensionDrawBuffers:l||r.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:l||r.has("EXT_shader_texture_lod"),customProgramCacheKey:f.customProgramCacheKey()}}function b(t){const i=[];if(t.shaderID?i.push(t.shaderID):(i.push(t.customVertexShaderID),i.push(t.customFragmentShaderID)),t.defines!==undefined)for(const n in t.defines)i.push(n),i.push(t.defines[n]);return t.isRawShaderMaterial===!1&&(k(i,t),d(i,t),i.push(n.outputColorSpace)),i.push(t.customProgramCacheKey),i.join()}function k(n,t){n.push(t.precision);n.push(t.outputColorSpace);n.push(t.envMapMode);n.push(t.envMapCubeUVHeight);n.push(t.mapUv);n.push(t.alphaMapUv);n.push(t.lightMapUv);n.push(t.aoMapUv);n.push(t.bumpMapUv);n.push(t.normalMapUv);n.push(t.displacementMapUv);n.push(t.emissiveMapUv);n.push(t.metalnessMapUv);n.push(t.roughnessMapUv);n.push(t.anisotropyMapUv);n.push(t.clearcoatMapUv);n.push(t.clearcoatNormalMapUv);n.push(t.clearcoatRoughnessMapUv);n.push(t.iridescenceMapUv);n.push(t.iridescenceThicknessMapUv);n.push(t.sheenColorMapUv);n.push(t.sheenRoughnessMapUv);n.push(t.specularMapUv);n.push(t.specularColorMapUv);n.push(t.specularIntensityMapUv);n.push(t.transmissionMapUv);n.push(t.thicknessMapUv);n.push(t.combine);n.push(t.fogExp2);n.push(t.sizeAttenuation);n.push(t.morphTargetsCount);n.push(t.morphAttributeCount);n.push(t.numDirLights);n.push(t.numPointLights);n.push(t.numSpotLights);n.push(t.numSpotLightMaps);n.push(t.numHemiLights);n.push(t.numRectAreaLights);n.push(t.numDirLightShadows);n.push(t.numPointLightShadows);n.push(t.numSpotLightShadows);n.push(t.numSpotLightShadowsWithMaps);n.push(t.shadowMapType);n.push(t.toneMapping);n.push(t.numClippingPlanes);n.push(t.numClipIntersection);n.push(t.depthPacking)}function d(n,t){o.disableAll();t.isWebGL2&&o.enable(0);t.supportsVertexTextures&&o.enable(1);t.instancing&&o.enable(2);t.instancingColor&&o.enable(3);t.matcap&&o.enable(4);t.envMap&&o.enable(5);t.normalMapObjectSpace&&o.enable(6);t.normalMapTangentSpace&&o.enable(7);t.clearcoat&&o.enable(8);t.iridescence&&o.enable(9);t.alphaTest&&o.enable(10);t.vertexColors&&o.enable(11);t.vertexAlphas&&o.enable(12);t.vertexUv1s&&o.enable(13);t.vertexUv2s&&o.enable(14);t.vertexUv3s&&o.enable(15);t.vertexTangents&&o.enable(16);t.anisotropy&&o.enable(17);n.push(o.mask);o.disableAll();t.fog&&o.enable(0);t.useFog&&o.enable(1);t.flatShading&&o.enable(2);t.logarithmicDepthBuffer&&o.enable(3);t.skinning&&o.enable(4);t.morphTargets&&o.enable(5);t.morphNormals&&o.enable(6);t.morphColors&&o.enable(7);t.premultipliedAlpha&&o.enable(8);t.shadowMapEnabled&&o.enable(9);t.useLegacyLights&&o.enable(10);t.doubleSided&&o.enable(11);t.flipSided&&o.enable(12);t.useDepthPacking&&o.enable(13);t.dithering&&o.enable(14);t.transmission&&o.enable(15);t.sheen&&o.enable(16);t.opaque&&o.enable(17);t.pointsUvs&&o.enable(18);n.push(o.mask)}function g(n){const i=y[n.type];let t;if(i){const n=vi[i];t=ktt.clone(n.uniforms)}else t=n.uniforms;return t}function nt(t,i){let r;for(let n=0,t=h.length;n<t;n++){const t=h[n];if(t.cacheKey===i){r=t;++r.usedTimes;break}}return r===undefined&&(r=new dvt(n,i,t,f),h.push(r)),r}function tt(n){if(--n.usedTimes==0){const t=h.indexOf(n);h[t]=h[h.length-1];h.pop();n.destroy()}}function it(n){c.remove(n)}function rt(){c.dispose()}const o=new dc,c=new nyt,h=[],l=u.isWebGL2,p=u.logarithmicDepthBuffer,v=u.vertexTextures;let a=u.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};return{getParameters:w,getProgramCacheKey:b,getUniforms:g,acquireProgram:nt,releaseProgram:tt,releaseShaderCache:it,programs:h,dispose:rt}}function ryt(){function t(t){let i=n.get(t);return i===undefined&&(i={},n.set(t,i)),i}function i(t){n.delete(t)}function r(t,i,r){n.get(t)[i]=r}function u(){n=new WeakMap}let n=new WeakMap;return{get:t,remove:i,update:r,dispose:u}}function uyt(n,t){return n.groupOrder!==t.groupOrder?n.groupOrder-t.groupOrder:n.renderOrder!==t.renderOrder?n.renderOrder-t.renderOrder:n.material.id!==t.material.id?n.material.id-t.material.id:n.z!==t.z?n.z-t.z:n.id-t.id}function urt(n,t){return n.groupOrder!==t.groupOrder?n.groupOrder-t.groupOrder:n.renderOrder!==t.renderOrder?n.renderOrder-t.renderOrder:n.z!==t.z?t.z-n.z:n.id-t.id}function frt(){function e(){r=0;n.length=0;t.length=0;i.length=0}function f(n,t,i,f,e,o){let s=u[r];return s===undefined?(s={id:n.id,object:n,geometry:t,material:i,groupOrder:f,renderOrder:n.renderOrder,z:e,group:o},u[r]=s):(s.id=n.id,s.object=n,s.geometry=t,s.material=i,s.groupOrder=f,s.renderOrder=n.renderOrder,s.z=e,s.group=o),r++,s}function o(r,u,e,o,s,h){const c=f(r,u,e,o,s,h);e.transmission>0?t.push(c):e.transparent===!0?i.push(c):n.push(c)}function s(r,u,e,o,s,h){const c=f(r,u,e,o,s,h);e.transmission>0?t.unshift(c):e.transparent===!0?i.unshift(c):n.unshift(c)}function h(r,u){n.length>1&&n.sort(r||uyt);t.length>1&&t.sort(u||urt);i.length>1&&i.sort(u||urt)}function c(){for(let n=r,t=u.length;n<t;n++){const t=u[n];if(t.id===null)break;t.id=null;t.object=null;t.geometry=null;t.material=null;t.group=null}}const u=[];let r=0;const n=[],t=[],i=[];return{opaque:n,transmissive:t,transparent:i,init:e,push:o,unshift:s,finish:c,sort:h}}function fyt(){function t(t,i){const u=n.get(t);let r;return u===undefined?(r=new frt,n.set(t,[r])):i>=u.length?(r=new frt,u.push(r)):r=u[i],r}function i(){n=new WeakMap}let n=new WeakMap;return{get:t,dispose:i}}function eyt(){const n={};return{get:function(i){if(n[i.id]!==undefined)return n[i.id];let r;switch(i.type){case"DirectionalLight":r={direction:new t,color:new u};break;case"SpotLight":r={position:new t,direction:new t,color:new u,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":r={position:new t,color:new u,distance:0,decay:0};break;case"HemisphereLight":r={direction:new t,skyColor:new u,groundColor:new u};break;case"RectAreaLight":r={color:new u,position:new t,halfWidth:new t,halfHeight:new t}}return n[i.id]=r,r}}}function oyt(){const n={};return{get:function(t){if(n[t.id]!==undefined)return n[t.id];let r;switch(t.type){case"DirectionalLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new i};break;case"SpotLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new i};break;case"PointLight":r={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new i,shadowCameraNear:1,shadowCameraFar:1e3}}return n[t.id]=r,r}}}function hyt(n,t){return(t.castShadow?2:0)-(n.castShadow?2:0)+(t.map?1:0)-(n.map?1:0)}function cyt(n,i){function l(t,e){let g=0,nt=0,tt=0;for(let n=0;n<9;n++)u.probe[n].set(0,0,0);let s=0,c=0,l=0,v=0,k=0,y=0,p=0,w=0,b=0,d=0;t.sort(hyt);const a=e===!0?Math.PI:1;for(let n=0,i=t.length;n<i;n++){const i=t[n],e=i.color,r=i.intensity,it=i.distance,o=i.shadow&&i.shadow.map?i.shadow.map.texture:null;if(i.isAmbientLight)g+=e.r*r*a,nt+=e.g*r*a,tt+=e.b*r*a;else if(i.isLightProbe)for(let n=0;n<9;n++)u.probe[n].addScaledVector(i.sh.coefficients[n],r);else if(i.isDirectionalLight){const n=f.get(i);if(n.color.copy(i.color).multiplyScalar(i.intensity*a),i.castShadow){const t=i.shadow,n=h.get(i);n.shadowBias=t.bias;n.shadowNormalBias=t.normalBias;n.shadowRadius=t.radius;n.shadowMapSize=t.mapSize;u.directionalShadow[s]=n;u.directionalShadowMap[s]=o;u.directionalShadowMatrix[s]=i.shadow.matrix;y++}u.directional[s]=n;s++}else if(i.isSpotLight){const n=f.get(i);n.position.setFromMatrixPosition(i.matrixWorld);n.color.copy(e).multiplyScalar(r*a);n.distance=it;n.coneCos=Math.cos(i.angle);n.penumbraCos=Math.cos(i.angle*(1-i.penumbra));n.decay=i.decay;u.spot[l]=n;const t=i.shadow;if(i.map&&(u.spotLightMap[b]=i.map,b++,t.updateMatrices(i),i.castShadow&&d++),u.spotLightMatrix[l]=t.matrix,i.castShadow){const n=h.get(i);n.shadowBias=t.bias;n.shadowNormalBias=t.normalBias;n.shadowRadius=t.radius;n.shadowMapSize=t.mapSize;u.spotShadow[l]=n;u.spotShadowMap[l]=o;w++}l++}else if(i.isRectAreaLight){const n=f.get(i);n.color.copy(e).multiplyScalar(r);n.halfWidth.set(i.width*.5,0,0);n.halfHeight.set(0,i.height*.5,0);u.rectArea[v]=n;v++}else if(i.isPointLight){const n=f.get(i);if(n.color.copy(i.color).multiplyScalar(i.intensity*a),n.distance=i.distance,n.decay=i.decay,i.castShadow){const t=i.shadow,n=h.get(i);n.shadowBias=t.bias;n.shadowNormalBias=t.normalBias;n.shadowRadius=t.radius;n.shadowMapSize=t.mapSize;n.shadowCameraNear=t.camera.near;n.shadowCameraFar=t.camera.far;u.pointShadow[c]=n;u.pointShadowMap[c]=o;u.pointShadowMatrix[c]=i.shadow.matrix;p++}u.point[c]=n;c++}else if(i.isHemisphereLight){const n=f.get(i);n.skyColor.copy(i.color).multiplyScalar(r*a);n.groundColor.copy(i.groundColor).multiplyScalar(r*a);u.hemi[k]=n;k++}}v>0&&(i.isWebGL2?(u.rectAreaLTC1=r.LTC_FLOAT_1,u.rectAreaLTC2=r.LTC_FLOAT_2):n.has("OES_texture_float_linear")===!0?(u.rectAreaLTC1=r.LTC_FLOAT_1,u.rectAreaLTC2=r.LTC_FLOAT_2):n.has("OES_texture_half_float_linear")===!0?(u.rectAreaLTC1=r.LTC_HALF_1,u.rectAreaLTC2=r.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions."));u.ambient[0]=g;u.ambient[1]=nt;u.ambient[2]=tt;const o=u.hash;(o.directionalLength!==s||o.pointLength!==c||o.spotLength!==l||o.rectAreaLength!==v||o.hemiLength!==k||o.numDirectionalShadows!==y||o.numPointShadows!==p||o.numSpotShadows!==w||o.numSpotMaps!==b)&&(u.directional.length=s,u.spot.length=l,u.rectArea.length=v,u.point.length=c,u.hemi.length=k,u.directionalShadow.length=y,u.directionalShadowMap.length=y,u.pointShadow.length=p,u.pointShadowMap.length=p,u.spotShadow.length=w,u.spotShadowMap.length=w,u.directionalShadowMatrix.length=y,u.pointShadowMatrix.length=p,u.spotLightMatrix.length=w+b-d,u.spotLightMap.length=b,u.numSpotLightShadowsWithMaps=d,o.directionalLength=s,o.pointLength=c,o.spotLength=l,o.rectAreaLength=v,o.hemiLength=k,o.numDirectionalShadows=y,o.numPointShadows=p,o.numSpotShadows=w,o.numSpotMaps=b,u.version=syt++)}function a(n,t){let r=0,f=0,o=0,h=0,l=0;const i=t.matrixWorldInverse;for(let t=0,a=n.length;t<a;t++){const a=n[t];if(a.isDirectionalLight){const n=u.directional[r];n.direction.setFromMatrixPosition(a.matrixWorld);e.setFromMatrixPosition(a.target.matrixWorld);n.direction.sub(e);n.direction.transformDirection(i);r++}else if(a.isSpotLight){const n=u.spot[o];n.position.setFromMatrixPosition(a.matrixWorld);n.position.applyMatrix4(i);n.direction.setFromMatrixPosition(a.matrixWorld);e.setFromMatrixPosition(a.target.matrixWorld);n.direction.sub(e);n.direction.transformDirection(i);o++}else if(a.isRectAreaLight){const n=u.rectArea[h];n.position.setFromMatrixPosition(a.matrixWorld);n.position.applyMatrix4(i);s.identity();c.copy(a.matrixWorld);c.premultiply(i);s.extractRotation(c);n.halfWidth.set(a.width*.5,0,0);n.halfHeight.set(0,a.height*.5,0);n.halfWidth.applyMatrix4(s);n.halfHeight.applyMatrix4(s);h++}else if(a.isPointLight){const n=u.point[f];n.position.setFromMatrixPosition(a.matrixWorld);n.position.applyMatrix4(i);f++}else if(a.isHemisphereLight){const n=u.hemi[l];n.direction.setFromMatrixPosition(a.matrixWorld);n.direction.transformDirection(i);l++}}}const f=new eyt,h=oyt(),u={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let n=0;n<9;n++)u.probe.push(new t);const e=new t,c=new o,s=new o;return{setup:l,setupView:a,state:u}}function ert(n,t){function f(){i.length=0;u.length=0}function e(n){i.push(n)}function o(n){u.push(n)}function s(n){r.setup(i,n)}function h(n){r.setupView(i,n)}const r=new cyt(n,t),i=[],u=[];const c={lightsArray:i,shadowsArray:u,lights:r};return{init:f,state:c,setupLights:s,setupLightsView:h,pushLight:e,pushShadow:o}}function lyt(n,t){function r(r,u=0){const e=i.get(r);let f;return e===undefined?(f=new ert(n,t),i.set(r,[f])):u>=e.length?(f=new ert(n,t),e.push(f)):f=e[u],f}function u(){i=new WeakMap}let i=new WeakMap;return{get:r,dispose:u}}function yyt(n,t,r){function ut(i,r){const f=t.update(c);e.defines.VSM_SAMPLES!==i.blurSamples&&(e.defines.VSM_SAMPLES=i.blurSamples,o.defines.VSM_SAMPLES=i.blurSamples,e.needsUpdate=!0,o.needsUpdate=!0);i.mapPass===null&&(i.mapPass=new si(u.x,u.y));e.uniforms.shadow_pass.value=i.map.texture;e.uniforms.resolution.value=i.mapSize;e.uniforms.radius.value=i.radius;n.setRenderTarget(i.mapPass);n.clear();n.renderBufferDirect(r,null,f,e,c,null);o.uniforms.shadow_pass.value=i.mapPass.texture;o.uniforms.resolution.value=i.mapSize;o.uniforms.radius.value=i.radius;n.setRenderTarget(i.map);n.clear();n.renderBufferDirect(r,null,f,o,c,null)}function g(t,i,r,u){let f=null;const e=r.isPointLight===!0?t.customDistanceMaterial:t.customDepthMaterial;if(e!==undefined)f=e;else if(f=r.isPointLight===!0?it:tt,n.localClippingEnabled&&i.clipShadows===!0&&Array.isArray(i.clippingPlanes)&&i.clippingPlanes.length!==0||i.displacementMap&&i.displacementScale!==0||i.alphaMap&&i.alphaTest>0||i.map&&i.alphaTest>0){const r=f.uuid,u=i.uuid;let n=b[r];n===undefined&&(n={},b[r]=n);let t=n[u];t===undefined&&(t=f.clone(),n[u]=t);f=t}if(f.visible=i.visible,f.wireframe=i.wireframe,f.side=u===wi?i.shadowSide!==null?i.shadowSide:i.side:i.shadowSide!==null?i.shadowSide:rt[i.side],f.alphaMap=i.alphaMap,f.alphaTest=i.alphaTest,f.map=i.map,f.clipShadows=i.clipShadows,f.clippingPlanes=i.clippingPlanes,f.clipIntersection=i.clipIntersection,f.displacementMap=i.displacementMap,f.displacementScale=i.displacementScale,f.displacementBias=i.displacementBias,f.wireframeLinewidth=i.wireframeLinewidth,f.linewidth=i.linewidth,r.isPointLight===!0&&f.isMeshDistanceMaterial===!0){const t=n.properties.get(f);t.light=r}return f}function nt(i,r,u,f,e){if(i.visible!==!1){const s=i.layers.test(r.layers);if(s&&(i.isMesh||i.isLine||i.isPoints)&&(i.castShadow||i.receiveShadow&&e===wi)&&(!i.frustumCulled||v.intersectsObject(i))){i.modelViewMatrix.multiplyMatrices(u.matrixWorldInverse,i.matrixWorld);const o=t.update(i),r=i.material;if(Array.isArray(r)){const t=o.groups;for(let s=0,h=t.length;s<h;s++){const c=t[s],h=r[c.materialIndex];if(h&&h.visible){const t=g(i,h,f,e);n.renderBufferDirect(u,null,o,t,i,c)}}}else if(r.visible){const t=g(i,r,f,e);n.renderBufferDirect(u,null,o,t,i,null)}}const o=i.children;for(let n=0,t=o.length;n<t;n++)nt(o[n],r,u,f,e)}}let v=new vl;const u=new i,f=new i,w=new y,tt=new ub({depthPacking:sn}),it=new fb,b={},s=r.maxTextureSize,rt={[rr]:at,[at]:rr,[bi]:bi},e=new tr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new i},radius:{value:4}},vertexShader:ayt,fragmentShader:vyt}),o=e.clone();o.defines.HORIZONTAL_PASS=1;const k=new l;k.setAttribute("position",new p(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const c=new et(k,e),h=this;this.enabled=!1;this.autoUpdate=!0;this.needsUpdate=!1;this.type=bv;let a=this.type;this.render=function(t,i,r){if(h.enabled!==!1&&(h.autoUpdate!==!1||h.needsUpdate!==!1)&&t.length!==0){const o=n.getRenderTarget(),c=n.getActiveCubeFace(),l=n.getActiveMipmapLevel(),e=n.state;e.setBlending(ur);e.buffers.color.setClear(1,1,1,1);e.buffers.depth.setTest(!0);e.setScissorTest(!1);const y=a!==wi&&this.type===wi,p=a===wi&&this.type!==wi;for(let o=0,h=t.length;o<h;o++){const c=t[o],h=c.shadow;if(h===undefined){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(h.autoUpdate!==!1||h.needsUpdate!==!1){u.copy(h.mapSize);const l=h.getFrameExtents();if(u.multiply(l),f.copy(h.mapSize),(u.x>s||u.y>s)&&(u.x>s&&(f.x=Math.floor(s/l.x),u.x=f.x*l.x,h.mapSize.x=f.x),u.y>s&&(f.y=Math.floor(s/l.y),u.y=f.y*l.y,h.mapSize.y=f.y)),h.map===null||y===!0||p===!0){const n=this.type!==wi?{minFilter:d,magFilter:d}:{};h.map!==null&&h.map.dispose();h.map=new si(u.x,u.y,n);h.map.texture.name=c.name+".shadowMap";h.camera.updateProjectionMatrix()}n.setRenderTarget(h.map);n.clear();const a=h.getViewportCount();for(let n=0;n<a;n++){const t=h.getViewport(n);w.set(f.x*t.x,f.y*t.y,f.x*t.z,f.y*t.w);e.viewport(w);h.updateMatrices(c,n);v=h.getFrustum();nt(i,r,h.camera,c,this.type)}h.isPointLightShadow!==!0&&this.type===wi&&ut(h,r);h.needsUpdate=!1}}a=this.type;h.needsUpdate=!1;n.setRenderTarget(o,c,l)}}}function pyt(n,t,i){function ei(){let t=!1;const i=new y;let r=null;const u=new y(0,0,0,0);return{setMask:function(i){r===i||t||(n.colorMask(i,i,i,i),r=i)},setLocked:function(n){t=n},setClear:function(t,r,f,e,o){o===!0&&(t*=e,r*=e,f*=e);i.set(t,r,f,e);u.equals(i)===!1&&(n.clearColor(t,r,f,e),u.copy(i))},reset:function(){t=!1;r=null;u.set(-1,0,0,0)}}}function oi(){let t=!1,i=null,f=null,e=null;return{setTest:function(t){t?r(n.DEPTH_TEST):u(n.DEPTH_TEST)},setMask:function(r){i===r||t||(n.depthMask(r),i=r)},setFunc:function(t){if(f!==t){switch(t){case tg:n.depthFunc(n.NEVER);break;case ig:n.depthFunc(n.ALWAYS);break;case rg:n.depthFunc(n.LESS);break;case dh:n.depthFunc(n.LEQUAL);break;case ug:n.depthFunc(n.EQUAL);break;case fg:n.depthFunc(n.GEQUAL);break;case eg:n.depthFunc(n.GREATER);break;case og:n.depthFunc(n.NOTEQUAL);break;default:n.depthFunc(n.LEQUAL)}f=t}},setLocked:function(n){t=n},setClear:function(t){e!==t&&(n.clearDepth(t),e=t)},reset:function(){t=!1;i=null;f=null;e=null}}}function si(){let t=!1,i=null,f=null,e=null,o=null,s=null,h=null,c=null,l=null;return{setTest:function(i){t||(i?r(n.STENCIL_TEST):u(n.STENCIL_TEST))},setMask:function(r){i===r||t||(n.stencilMask(r),i=r)},setFunc:function(t,i,r){(f!==t||e!==i||o!==r)&&(n.stencilFunc(t,i,r),f=t,e=i,o=r)},setOp:function(t,i,r){(s!==t||h!==i||c!==r)&&(n.stencilOp(t,i,r),s=t,h=i,c=r)},setLocked:function(n){t=n},setClear:function(t){l!==t&&(n.clearStencil(t),l=t)},reset:function(){t=!1;i=null;f=null;e=null;o=null;s=null;h=null;c=null;l=null}}}function et(t,i,r,u){const f=new Uint8Array(4),e=n.createTexture();n.bindTexture(t,e);n.texParameteri(t,n.TEXTURE_MIN_FILTER,n.NEAREST);n.texParameteri(t,n.TEXTURE_MAG_FILTER,n.NEAREST);for(let e=0;e<r;e++)h&&(t===n.TEXTURE_3D||t===n.TEXTURE_2D_ARRAY)?n.texImage3D(i,0,n.RGBA,1,1,u,0,n.RGBA,n.UNSIGNED_BYTE,f):n.texImage2D(i+e,0,n.RGBA,1,1,0,n.RGBA,n.UNSIGNED_BYTE,f);return e}function r(t){c[t]!==!0&&(n.enable(t),c[t]=!0)}function u(t){c[t]!==!1&&(n.disable(t),c[t]=!1)}function li(t,i){return l[t]!==i?(n.bindFramebuffer(t,i),l[t]=i,h&&(t===n.DRAW_FRAMEBUFFER&&(l[n.FRAMEBUFFER]=i),t===n.FRAMEBUFFER&&(l[n.DRAW_FRAMEBUFFER]=i)),!0):!1}function ai(r,u){let f=ii,e=!1;if(r)if(f=ct.get(u),f===undefined&&(f=[],ct.set(u,f)),r.isWebGLMultipleRenderTargets){const t=r.texture;if(f.length!==t.length||f[0]!==n.COLOR_ATTACHMENT0){for(let i=0,r=t.length;i<r;i++)f[i]=n.COLOR_ATTACHMENT0+i;f.length=t.length;e=!0}}else f[0]!==n.COLOR_ATTACHMENT0&&(f[0]=n.COLOR_ATTACHMENT0,e=!0);else f[0]!==n.BACK&&(f[0]=n.BACK,e=!0);e&&(i.isWebGL2?n.drawBuffers(f):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(f))}function vi(t){return lt!==t?(n.useProgram(t),lt=t,!0):!1}function st(t,i,f,e,o,h,c,l){if(t===ur){a===!0&&(u(n.BLEND),a=!1);return}if(a===!1&&(r(n.BLEND),a=!0),t!==cd){if(t!==k||l!==it){if((v!==wu||p!==wu)&&(n.blendEquation(n.FUNC_ADD),v=wu,p=wu),l)switch(t){case pu:n.blendFuncSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case kv:n.blendFunc(n.ONE,n.ONE);break;case dv:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case gv:n.blendFuncSeparate(n.ZERO,n.SRC_COLOR,n.ZERO,n.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case pu:n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA);break;case kv:n.blendFunc(n.SRC_ALPHA,n.ONE);break;case dv:n.blendFuncSeparate(n.ZERO,n.ONE_MINUS_SRC_COLOR,n.ZERO,n.ONE);break;case gv:n.blendFunc(n.ZERO,n.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}d=null;g=null;nt=null;tt=null;k=t;it=l}return}o=o||i;h=h||f;c=c||e;(i!==v||o!==p)&&(n.blendEquationSeparate(s[i],s[o]),v=i,p=o);(f!==d||e!==g||h!==nt||c!==tt)&&(n.blendFuncSeparate(ot[f],ot[e],ot[h],ot[c]),d=f,g=e,nt=h,tt=c);k=t;it=!1}function yi(t,i){t.side===bi?u(n.CULL_FACE):r(n.CULL_FACE);let f=t.side===at;i&&(f=!f);ni(f);t.blending===pu&&t.transparent===!1?st(ur):st(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha);e.setFunc(t.depthFunc);e.setTest(t.depthTest);e.setMask(t.depthWrite);b.setMask(t.colorWrite);const s=t.stencilWrite;o.setTest(s);s&&(o.setMask(t.stencilWriteMask),o.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),o.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass));fi(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits);t.alphaToCoverage===!0?r(n.SAMPLE_ALPHA_TO_COVERAGE):u(n.SAMPLE_ALPHA_TO_COVERAGE)}function ni(t){vt!==t&&(t?n.frontFace(n.CW):n.frontFace(n.CCW),vt=t)}function ui(t){t!==od?(r(n.CULL_FACE),t!==yt&&(t===wv?n.cullFace(n.BACK):t===sd?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK))):u(n.CULL_FACE);yt=t}function pi(t){t!==pt&&(kt&&n.lineWidth(t),pt=t)}function fi(t,i,f){t?(r(n.POLYGON_OFFSET_FILL),(wt!==i||bt!==f)&&(n.polygonOffset(i,f),wt=i,bt=f)):u(n.POLYGON_OFFSET_FILL)}function wi(t){t?r(n.SCISSOR_TEST):u(n.SCISSOR_TEST)}function ki(t){t===undefined&&(t=n.TEXTURE0+ri-1);f!==t&&(n.activeTexture(t),f=t)}function di(t,i,r){r===undefined&&(r=f===null?n.TEXTURE0+ri-1:f);let u=ft[r];u===undefined&&(u={type:undefined,texture:undefined},ft[r]=u);(u.type!==t||u.texture!==i)&&(f!==r&&(n.activeTexture(r),f=r),n.bindTexture(t,i||w[t]),u.type=t,u.texture=i)}function gi(){const t=ft[f];t!==undefined&&t.type!==undefined&&(n.bindTexture(t.type,null),t.type=undefined,t.texture=undefined)}function nr(){try{n.compressedTexImage2D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function tr(){try{n.compressedTexImage3D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function ir(){try{n.texSubImage2D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function rr(){try{n.texSubImage3D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function fr(){try{n.compressedTexSubImage2D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function er(){try{n.compressedTexSubImage3D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function or(){try{n.texStorage2D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function sr(){try{n.texStorage3D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function hr(){try{n.texImage2D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function cr(){try{n.texImage3D.apply(n,arguments)}catch(t){console.error("THREE.WebGLState:",t)}}function lr(t){dt.equals(t)===!1&&(n.scissor(t.x,t.y,t.z,t.w),dt.copy(t))}function ar(t){gt.equals(t)===!1&&(n.viewport(t.x,t.y,t.z,t.w),gt.copy(t))}function vr(t,i){let r=ht.get(i);r===undefined&&(r=new WeakMap,ht.set(i,r));let u=r.get(t);u===undefined&&(u=n.getUniformBlockIndex(i,t.name),r.set(t,u))}function yr(t,i){const u=ht.get(i),r=u.get(t);ti.get(i)!==r&&(n.uniformBlockBinding(i,r,t.__bindingPointIndex),ti.set(i,r))}function pr(){n.disable(n.BLEND);n.disable(n.CULL_FACE);n.disable(n.DEPTH_TEST);n.disable(n.POLYGON_OFFSET_FILL);n.disable(n.SCISSOR_TEST);n.disable(n.STENCIL_TEST);n.disable(n.SAMPLE_ALPHA_TO_COVERAGE);n.blendEquation(n.FUNC_ADD);n.blendFunc(n.ONE,n.ZERO);n.blendFuncSeparate(n.ONE,n.ZERO,n.ONE,n.ZERO);n.colorMask(!0,!0,!0,!0);n.clearColor(0,0,0,0);n.depthMask(!0);n.depthFunc(n.LESS);n.clearDepth(1);n.stencilMask(4294967295);n.stencilFunc(n.ALWAYS,0,4294967295);n.stencilOp(n.KEEP,n.KEEP,n.KEEP);n.clearStencil(0);n.cullFace(n.BACK);n.frontFace(n.CCW);n.polygonOffset(0,0);n.activeTexture(n.TEXTURE0);n.bindFramebuffer(n.FRAMEBUFFER,null);h===!0&&(n.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),n.bindFramebuffer(n.READ_FRAMEBUFFER,null));n.useProgram(null);n.lineWidth(1);n.scissor(0,0,n.canvas.width,n.canvas.height);n.viewport(0,0,n.canvas.width,n.canvas.height);c={};f=null;ft={};l={};ct=new WeakMap;ii=[];lt=null;a=!1;k=null;v=null;d=null;g=null;p=null;nt=null;tt=null;it=!1;vt=null;yt=null;pt=null;wt=null;bt=null;dt.set(0,0,n.canvas.width,n.canvas.height);gt.set(0,0,n.canvas.width,n.canvas.height);b.reset();e.reset();o.reset()}const h=i.isWebGL2;const b=new ei,e=new oi,o=new si,ti=new WeakMap,ht=new WeakMap;let c={},l={},ct=new WeakMap,ii=[],lt=null,a=!1,k=null,v=null,d=null,g=null,p=null,nt=null,tt=null,it=!1,vt=null,yt=null,pt=null,wt=null,bt=null;const ri=n.getParameter(n.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let kt=!1,rt=0;const ut=n.getParameter(n.VERSION);ut.indexOf("WebGL")!==-1?(rt=parseFloat(/^WebGL (\d)/.exec(ut)[1]),kt=rt>=1):ut.indexOf("OpenGL ES")!==-1&&(rt=parseFloat(/^OpenGL ES (\d)/.exec(ut)[1]),kt=rt>=2);let f=null,ft={};const hi=n.getParameter(n.SCISSOR_BOX),ci=n.getParameter(n.VIEWPORT),dt=(new y).fromArray(hi),gt=(new y).fromArray(ci);const w={};w[n.TEXTURE_2D]=et(n.TEXTURE_2D,n.TEXTURE_2D,1);w[n.TEXTURE_CUBE_MAP]=et(n.TEXTURE_CUBE_MAP,n.TEXTURE_CUBE_MAP_POSITIVE_X,6);h&&(w[n.TEXTURE_2D_ARRAY]=et(n.TEXTURE_2D_ARRAY,n.TEXTURE_2D_ARRAY,1,1),w[n.TEXTURE_3D]=et(n.TEXTURE_3D,n.TEXTURE_3D,1,1));b.setClear(0,0,0,1);e.setClear(1);o.setClear(0);r(n.DEPTH_TEST);e.setFunc(dh);ni(!1);ui(wv);r(n.CULL_FACE);st(ur);const s={[wu]:n.FUNC_ADD,[ld]:n.FUNC_SUBTRACT,[ad]:n.FUNC_REVERSE_SUBTRACT};if(h)s[ny]=n.MIN,s[ty]=n.MAX;else{const n=t.get("EXT_blend_minmax");n!==null&&(s[ny]=n.MIN_EXT,s[ty]=n.MAX_EXT)}const ot={[vd]:n.ZERO,[yd]:n.ONE,[pd]:n.SRC_COLOR,[iy]:n.SRC_ALPHA,[ng]:n.SRC_ALPHA_SATURATE,[dd]:n.DST_COLOR,[bd]:n.DST_ALPHA,[wd]:n.ONE_MINUS_SRC_COLOR,[ry]:n.ONE_MINUS_SRC_ALPHA,[gd]:n.ONE_MINUS_DST_COLOR,[kd]:n.ONE_MINUS_DST_ALPHA};return{buffers:{color:b,depth:e,stencil:o},enable:r,disable:u,bindFramebuffer:li,drawBuffers:ai,useProgram:vi,setBlending:st,setMaterial:yi,setFlipSided:ni,setCullFace:ui,setLineWidth:pi,setPolygonOffset:fi,setScissorTest:wi,activeTexture:ki,bindTexture:di,unbindTexture:gi,compressedTexImage2D:nr,compressedTexImage3D:tr,texImage2D:hr,texImage3D:cr,updateUBOMapping:vr,uniformBlockBinding:yr,texStorage2D:or,texStorage3D:sr,texSubImage2D:ir,texSubImage3D:rr,compressedTexSubImage2D:fr,compressedTexSubImage3D:er,scissor:lr,viewport:ar,reset:pr}}function wyt(n,t,i,r,u,f,o){function ct(n,t){return ht?new OffscreenCanvas(n,t):hs("canvas")}function lt(n,t,i,r){let u=1;if((n.width>r||n.height>r)&&(u=r/Math.max(n.width,n.height)),u<1||t===!0){if(typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&n instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&n instanceof ImageBitmap){const o=t?lc:Math.floor,r=o(u*n.width),f=o(u*n.height);tt===undefined&&(tt=ct(r,f));const e=i?ct(r,f):tt;e.width=r;e.height=f;const s=e.getContext("2d");return s.drawImage(n,0,0,r,f),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+n.width+"x"+n.height+") to ("+r+"x"+f+")."),e}return"data"in n&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+n.width+"x"+n.height+")."),n}return n}function p(n){return kp(n.width)&&kp(n.height)}function fi(n){return s?!1:n.wrapS!==st||n.wrapT!==st||n.minFilter!==d&&n.minFilter!==g}function c(n,t){return n.generateMipmaps&&t&&n.minFilter!==d&&n.minFilter!==g}function a(t){n.generateMipmap(t)}function w(i,r,u,f,o=false){if(s===!1)return r;if(i!==null){if(n[i]!==undefined)return n[i];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+i+"'")}let h=r;return r===n.RED&&(u===n.FLOAT&&(h=n.R32F),u===n.HALF_FLOAT&&(h=n.R16F),u===n.UNSIGNED_BYTE&&(h=n.R8)),r===n.RG&&(u===n.FLOAT&&(h=n.RG32F),u===n.HALF_FLOAT&&(h=n.RG16F),u===n.UNSIGNED_BYTE&&(h=n.RG8)),r===n.RGBA&&(u===n.FLOAT&&(h=n.RGBA32F),u===n.HALF_FLOAT&&(h=n.RGBA16F),u===n.UNSIGNED_BYTE&&(h=f===e&&o===!1?n.SRGB8_ALPHA8:n.RGBA8),u===n.UNSIGNED_SHORT_4_4_4_4&&(h=n.RGBA4),u===n.UNSIGNED_SHORT_5_5_5_1&&(h=n.RGB5_A1)),(h===n.R16F||h===n.R32F||h===n.RG16F||h===n.RG32F||h===n.RGBA16F||h===n.RGBA32F)&&t.get("EXT_color_buffer_float"),h}function at(n,t,i){return c(n,i)===!0||n.isFramebufferTexture&&n.minFilter!==d&&n.minFilter!==g?Math.log2(Math.max(t.width,t.height))+1:n.mipmaps!==undefined&&n.mipmaps.length>0?n.mipmaps.length:n.isCompressedTexture&&Array.isArray(n.image)?t.mipmaps.length:1}function vt(t){return t===d||t===nc||t===is?n.NEAREST:n.LINEAR}function yt(n){const t=n.target;t.removeEventListener("dispose",yt);ei(t);t.isVideoTexture&&nt.delete(t)}function pt(n){const t=n.target;t.removeEventListener("dispose",pt);si(t)}function ei(n){const i=r.get(n);if(i.__webglInit!==undefined){const u=n.source,t=y.get(u);if(t){const r=t[i.__cacheKey];r.usedTimes--;r.usedTimes===0&&wt(n);Object.keys(t).length===0&&y.delete(u)}r.remove(n)}}function wt(t){const i=r.get(t);n.deleteTexture(i.__webglTexture);const u=t.source,f=y.get(u);delete f[i.__cacheKey];o.memory.textures--}function si(t){const u=t.texture,i=r.get(t),f=r.get(u);if(f.__webglTexture!==undefined&&(n.deleteTexture(f.__webglTexture),o.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)n.deleteFramebuffer(i.__webglFramebuffer[t]),i.__webglDepthbuffer&&n.deleteRenderbuffer(i.__webglDepthbuffer[t]);else{if(n.deleteFramebuffer(i.__webglFramebuffer),i.__webglDepthbuffer&&n.deleteRenderbuffer(i.__webglDepthbuffer),i.__webglMultisampledFramebuffer&&n.deleteFramebuffer(i.__webglMultisampledFramebuffer),i.__webglColorRenderbuffer)for(let t=0;t<i.__webglColorRenderbuffer.length;t++)i.__webglColorRenderbuffer[t]&&n.deleteRenderbuffer(i.__webglColorRenderbuffer[t]);i.__webglDepthRenderbuffer&&n.deleteRenderbuffer(i.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,i=u.length;t<i;t++){const i=r.get(u[t]);i.__webglTexture&&(n.deleteTexture(i.__webglTexture),o.memory.textures--);r.remove(u[t])}r.remove(u);r.remove(t)}function hi(){it=0}function ci(){const n=it;return n>=ot&&console.warn("THREE.WebGLTextures: Trying to use "+n+" texture units while this GPU supports only "+ot),it+=1,n}function li(n){const t=[];return t.push(n.wrapS),t.push(n.wrapT),t.push(n.wrapR||0),t.push(n.magFilter),t.push(n.minFilter),t.push(n.anisotropy),t.push(n.internalFormat),t.push(n.format),t.push(n.type),t.push(n.generateMipmaps),t.push(n.premultiplyAlpha),t.push(n.flipY),t.push(n.unpackAlignment),t.push(n.colorSpace),t.join()}function bt(t,u){const f=r.get(t);if(t.isVideoTexture&&ir(t),t.isRenderTargetTexture===!1&&t.version>0&&f.__version!==t.version){const n=t.image;if(n===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(n.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ut(f,t,u);return}}i.bindTexture(n.TEXTURE_2D,f.__webglTexture,n.TEXTURE0+u)}function ai(t,u){const f=r.get(t);if(t.version>0&&f.__version!==t.version){ut(f,t,u);return}i.bindTexture(n.TEXTURE_2D_ARRAY,f.__webglTexture,n.TEXTURE0+u)}function vi(t,u){const f=r.get(t);if(t.version>0&&f.__version!==t.version){ut(f,t,u);return}i.bindTexture(n.TEXTURE_3D,f.__webglTexture,n.TEXTURE0+u)}function yi(t,u){const f=r.get(t);if(t.version>0&&f.__version!==t.version){wi(f,t,u);return}i.bindTexture(n.TEXTURE_CUBE_MAP,f.__webglTexture,n.TEXTURE0+u)}function b(i,f,e){if(e?(n.texParameteri(i,n.TEXTURE_WRAP_S,rt[f.wrapS]),n.texParameteri(i,n.TEXTURE_WRAP_T,rt[f.wrapT]),(i===n.TEXTURE_3D||i===n.TEXTURE_2D_ARRAY)&&n.texParameteri(i,n.TEXTURE_WRAP_R,rt[f.wrapR]),n.texParameteri(i,n.TEXTURE_MAG_FILTER,dt[f.magFilter]),n.texParameteri(i,n.TEXTURE_MIN_FILTER,dt[f.minFilter])):(n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),(i===n.TEXTURE_3D||i===n.TEXTURE_2D_ARRAY)&&n.texParameteri(i,n.TEXTURE_WRAP_R,n.CLAMP_TO_EDGE),(f.wrapS!==st||f.wrapT!==st)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),n.texParameteri(i,n.TEXTURE_MAG_FILTER,vt(f.magFilter)),n.texParameteri(i,n.TEXTURE_MIN_FILTER,vt(f.minFilter)),f.minFilter!==d&&f.minFilter!==g&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),f.compareFunction&&(n.texParameteri(i,n.TEXTURE_COMPARE_MODE,n.COMPARE_REF_TO_TEXTURE),n.texParameteri(i,n.TEXTURE_COMPARE_FUNC,pi[f.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){const e=t.get("EXT_texture_filter_anisotropic");if(f.magFilter===d)return;if(f.minFilter!==is&&f.minFilter!==gr)return;if(f.type===di&&t.has("OES_texture_float_linear")===!1)return;if(s===!1&&f.type===te&&t.has("OES_texture_half_float_linear")===!1)return;(f.anisotropy>1||r.get(f).__currentAnisotropy)&&(n.texParameterf(i,e.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(f.anisotropy,u.getMaxAnisotropy())),r.get(f).__currentAnisotropy=f.anisotropy)}}function gt(t,i){let f=!1;t.__webglInit===undefined&&(t.__webglInit=!0,i.addEventListener("dispose",yt));const e=i.source;let r=y.get(e);r===undefined&&(r={},y.set(e,r));const u=li(i);if(u!==t.__cacheKey){r[u]===undefined&&(r[u]={texture:n.createTexture(),usedTimes:0},o.memory.textures++,f=!0);r[u].usedTimes++;const e=r[t.__cacheKey];e!==undefined&&(r[t.__cacheKey].usedTimes--,e.usedTimes===0&&wt(i));t.__cacheKey=u;t.__webglTexture=r[u].texture}return f}function ut(t,u,e){let o=n.TEXTURE_2D;(u.isDataArrayTexture||u.isCompressedArrayTexture)&&(o=n.TEXTURE_2D_ARRAY);u.isData3DTexture&&(o=n.TEXTURE_3D);const v=gt(t,u),h=u.source;i.bindTexture(o,t.__webglTexture,n.TEXTURE0+e);const l=r.get(h);if(h.version!==l.__version||v===!0){i.activeTexture(n.TEXTURE0+e);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,u.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,u.premultiplyAlpha);n.pixelStorei(n.UNPACK_ALIGNMENT,u.unpackAlignment);n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const ut=fi(u)&&p(u.image)===!1;let t=lt(u.image,ut,!1,ii);t=ni(u,t);const rt=p(t)||s,k=f.convert(u.format,u.colorSpace);let d=f.convert(u.type),y=w(u.internalFormat,k,d,u.colorSpace);b(o,u,rt);let r;const g=u.mipmaps,nt=s&&u.isVideoTexture!==!0,tt=l.__version===undefined||v===!0,it=at(u,t,rt);if(u.isDepthTexture)y=n.DEPTH_COMPONENT,s?y=u.type===di?n.DEPTH_COMPONENT32F:u.type===er?n.DEPTH_COMPONENT24:u.type===nu?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT16:u.type===di&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),u.format===tu&&y===n.DEPTH_COMPONENT&&u.type!==tc&&u.type!==er&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),u.type=er,d=f.convert(u.type)),u.format===bu&&y===n.DEPTH_COMPONENT&&(y=n.DEPTH_STENCIL,u.type!==nu&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),u.type=nu,d=f.convert(u.type))),tt&&(nt?i.texStorage2D(n.TEXTURE_2D,1,y,t.width,t.height):i.texImage2D(n.TEXTURE_2D,0,y,t.width,t.height,0,k,d,null));else if(u.isDataTexture)if(g.length>0&&rt){nt&&tt&&i.texStorage2D(n.TEXTURE_2D,it,y,g[0].width,g[0].height);for(let t=0,u=g.length;t<u;t++)r=g[t],nt?i.texSubImage2D(n.TEXTURE_2D,t,0,0,r.width,r.height,k,d,r.data):i.texImage2D(n.TEXTURE_2D,t,y,r.width,r.height,0,k,d,r.data);u.generateMipmaps=!1}else nt?(tt&&i.texStorage2D(n.TEXTURE_2D,it,y,t.width,t.height),i.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,k,d,t.data)):i.texImage2D(n.TEXTURE_2D,0,y,t.width,t.height,0,k,d,t.data);else if(u.isCompressedTexture)if(u.isCompressedArrayTexture){nt&&tt&&i.texStorage3D(n.TEXTURE_2D_ARRAY,it,y,g[0].width,g[0].height,t.depth);for(let f=0,e=g.length;f<e;f++)r=g[f],u.format!==kt?k!==null?nt?i.compressedTexSubImage3D(n.TEXTURE_2D_ARRAY,f,0,0,0,r.width,r.height,t.depth,k,r.data,0,0):i.compressedTexImage3D(n.TEXTURE_2D_ARRAY,f,y,r.width,r.height,t.depth,0,r.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?i.texSubImage3D(n.TEXTURE_2D_ARRAY,f,0,0,0,r.width,r.height,t.depth,k,d,r.data):i.texImage3D(n.TEXTURE_2D_ARRAY,f,y,r.width,r.height,t.depth,0,k,d,r.data)}else{nt&&tt&&i.texStorage2D(n.TEXTURE_2D,it,y,g[0].width,g[0].height);for(let t=0,f=g.length;t<f;t++)r=g[t],u.format!==kt?k!==null?nt?i.compressedTexSubImage2D(n.TEXTURE_2D,t,0,0,r.width,r.height,k,r.data):i.compressedTexImage2D(n.TEXTURE_2D,t,y,r.width,r.height,0,r.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):nt?i.texSubImage2D(n.TEXTURE_2D,t,0,0,r.width,r.height,k,d,r.data):i.texImage2D(n.TEXTURE_2D,t,y,r.width,r.height,0,k,d,r.data)}else if(u.isDataArrayTexture)nt?(tt&&i.texStorage3D(n.TEXTURE_2D_ARRAY,it,y,t.width,t.height,t.depth),i.texSubImage3D(n.TEXTURE_2D_ARRAY,0,0,0,0,t.width,t.height,t.depth,k,d,t.data)):i.texImage3D(n.TEXTURE_2D_ARRAY,0,y,t.width,t.height,t.depth,0,k,d,t.data);else if(u.isData3DTexture)nt?(tt&&i.texStorage3D(n.TEXTURE_3D,it,y,t.width,t.height,t.depth),i.texSubImage3D(n.TEXTURE_3D,0,0,0,0,t.width,t.height,t.depth,k,d,t.data)):i.texImage3D(n.TEXTURE_3D,0,y,t.width,t.height,t.depth,0,k,d,t.data);else if(u.isFramebufferTexture){if(tt)if(nt)i.texStorage2D(n.TEXTURE_2D,it,y,t.width,t.height);else{let r=t.width,u=t.height;for(let t=0;t<it;t++)i.texImage2D(n.TEXTURE_2D,t,y,r,u,0,k,d,null),r>>=1,u>>=1}}else if(g.length>0&&rt){nt&&tt&&i.texStorage2D(n.TEXTURE_2D,it,y,g[0].width,g[0].height);for(let t=0,u=g.length;t<u;t++)r=g[t],nt?i.texSubImage2D(n.TEXTURE_2D,t,0,0,k,d,r):i.texImage2D(n.TEXTURE_2D,t,y,k,d,r);u.generateMipmaps=!1}else nt?(tt&&i.texStorage2D(n.TEXTURE_2D,it,y,t.width,t.height),i.texSubImage2D(n.TEXTURE_2D,0,0,0,k,d,t)):i.texImage2D(n.TEXTURE_2D,0,y,k,d,t);if(c(u,rt)&&a(o),l.__version=h.version,u.onUpdate)u.onUpdate(u)}t.__version=u.version}function wi(t,u,e){if(u.image.length===6){const l=gt(t,u),o=u.source;i.bindTexture(n.TEXTURE_CUBE_MAP,t.__webglTexture,n.TEXTURE0+e);const h=r.get(o);if(o.version!==h.__version||l===!0){i.activeTexture(n.TEXTURE0+e);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,u.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,u.premultiplyAlpha);n.pixelStorei(n.UNPACK_ALIGNMENT,u.unpackAlignment);n.pixelStorei(n.UNPACK_COLORSPACE_CONVERSION_WEBGL,n.NONE);const rt=u.isCompressedTexture||u.image[0].isCompressedTexture,nt=u.image[0]&&u.image[0].isDataTexture,t=[];for(let n=0;n<6;n++)t[n]=rt||nt?nt?u.image[n].image:u.image[n]:lt(u.image[n],!1,!0,ti),t[n]=ni(u,t[n]);const g=t[0],tt=p(g)||s,r=f.convert(u.format,u.colorSpace),v=f.convert(u.type),k=w(u.internalFormat,r,v,u.colorSpace),d=s&&u.isVideoTexture!==!0,ut=h.__version===undefined||l===!0;let it=at(u,g,tt);b(n.TEXTURE_CUBE_MAP,u,tt);let y;if(rt){d&&ut&&i.texStorage2D(n.TEXTURE_CUBE_MAP,it,k,g.width,g.height);for(let f=0;f<6;f++){y=t[f].mipmaps;for(let t=0;t<y.length;t++){const e=y[t];u.format!==kt?r!==null?d?i.compressedTexSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,t,0,0,e.width,e.height,r,e.data):i.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,t,k,e.width,e.height,0,e.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):d?i.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,t,0,0,e.width,e.height,r,v,e.data):i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,t,k,e.width,e.height,0,r,v,e.data)}}}else{y=u.mipmaps;d&&ut&&(y.length>0&&it++,i.texStorage2D(n.TEXTURE_CUBE_MAP,it,k,t[0].width,t[0].height));for(let u=0;u<6;u++)if(nt){d?i.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,0,0,t[u].width,t[u].height,r,v,t[u].data):i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,k,t[u].width,t[u].height,0,r,v,t[u].data);for(let t=0;t<y.length;t++){const e=y[t],f=e.image[u].image;d?i.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,t+1,0,0,f.width,f.height,r,v,f.data):i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,t+1,k,f.width,f.height,0,r,v,f.data)}}else{d?i.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,0,0,r,v,t[u]):i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,k,r,v,t[u]);for(let t=0;t<y.length;t++){const f=y[t];d?i.texSubImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,t+1,0,0,r,v,f.image[u]):i.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+u,t+1,k,r,v,f.image[u])}}}if(c(u,tt)&&a(n.TEXTURE_CUBE_MAP),h.__version=o.version,u.onUpdate)u.onUpdate(u)}t.__version=u.version}}function k(t,u,e,o,s){const c=f.convert(e.format,e.colorSpace),a=f.convert(e.type),y=w(e.internalFormat,c,a,e.colorSpace),p=r.get(u);p.__hasExternalTextures||(s===n.TEXTURE_3D||s===n.TEXTURE_2D_ARRAY?i.texImage3D(s,0,y,u.width,u.height,u.depth,0,c,a,null):i.texImage2D(s,0,y,u.width,u.height,0,c,a,null));i.bindFramebuffer(n.FRAMEBUFFER,t);h(u)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,o,s,r.get(e).__webglTexture,0,v(u)):(s===n.TEXTURE_2D||s>=n.TEXTURE_CUBE_MAP_POSITIVE_X&&s<=n.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&n.framebufferTexture2D(n.FRAMEBUFFER,o,s,r.get(e).__webglTexture,0);i.bindFramebuffer(n.FRAMEBUFFER,null)}function ft(t,i,r){if(n.bindRenderbuffer(n.RENDERBUFFER,t),i.depthBuffer&&!i.stencilBuffer){let u=n.DEPTH_COMPONENT16;if(r||h(i)){const t=i.depthTexture;t&&t.isDepthTexture&&(t.type===di?u=n.DEPTH_COMPONENT32F:t.type===er&&(u=n.DEPTH_COMPONENT24));const r=v(i);h(i)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,r,u,i.width,i.height):n.renderbufferStorageMultisample(n.RENDERBUFFER,r,u,i.width,i.height)}else n.renderbufferStorage(n.RENDERBUFFER,u,i.width,i.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,t)}else if(i.depthBuffer&&i.stencilBuffer){const u=v(i);r&&h(i)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,u,n.DEPTH24_STENCIL8,i.width,i.height):h(i)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,u,n.DEPTH24_STENCIL8,i.width,i.height):n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,i.width,i.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,t)}else{const t=i.isWebGLMultipleRenderTargets===!0?i.texture:[i.texture];for(let u=0;u<t.length;u++){const e=t[u],c=f.convert(e.format,e.colorSpace),a=f.convert(e.type),o=w(e.internalFormat,c,a,e.colorSpace),s=v(i);r&&h(i)===!1?n.renderbufferStorageMultisample(n.RENDERBUFFER,s,o,i.width,i.height):h(i)?l.renderbufferStorageMultisampleEXT(n.RENDERBUFFER,s,o,i.width,i.height):n.renderbufferStorage(n.RENDERBUFFER,o,i.width,i.height)}}n.bindRenderbuffer(n.RENDERBUFFER,null)}function bi(t,u){const o=u&&u.isWebGLCubeRenderTarget;if(o)throw new Error("Depth Texture with cube render targets is not supported");if(i.bindFramebuffer(n.FRAMEBUFFER,t),!(u.depthTexture&&u.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(u.depthTexture).__webglTexture&&u.depthTexture.image.width===u.width&&u.depthTexture.image.height===u.height||(u.depthTexture.image.width=u.width,u.depthTexture.image.height=u.height,u.depthTexture.needsUpdate=!0);bt(u.depthTexture,0);const f=r.get(u.depthTexture).__webglTexture,e=v(u);if(u.depthTexture.format===tu)h(u)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,f,0,e):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.TEXTURE_2D,f,0);else if(u.depthTexture.format===bu)h(u)?l.framebufferTexture2DMultisampleEXT(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,f,0,e):n.framebufferTexture2D(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.TEXTURE_2D,f,0);else throw new Error("Unknown depthTexture format");}function et(t){const u=r.get(t),f=t.isWebGLCubeRenderTarget===!0;if(t.depthTexture&&!u.__autoAllocateDepthBuffer){if(f)throw new Error("target.depthTexture not supported in Cube render targets");bi(u.__webglFramebuffer,t)}else if(f){u.__webglDepthbuffer=[];for(let r=0;r<6;r++)i.bindFramebuffer(n.FRAMEBUFFER,u.__webglFramebuffer[r]),u.__webglDepthbuffer[r]=n.createRenderbuffer(),ft(u.__webglDepthbuffer[r],t,!1)}else i.bindFramebuffer(n.FRAMEBUFFER,u.__webglFramebuffer),u.__webglDepthbuffer=n.createRenderbuffer(),ft(u.__webglDepthbuffer,t,!1);i.bindFramebuffer(n.FRAMEBUFFER,null)}function ki(t,i,u){const f=r.get(t);i!==undefined&&k(f.__webglFramebuffer,t,t.texture,n.COLOR_ATTACHMENT0,n.TEXTURE_2D);u!==undefined&&et(t)}function gi(t){const l=t.texture,e=r.get(t),d=r.get(l);t.addEventListener("dispose",pt);t.isWebGLMultipleRenderTargets!==!0&&(d.__webglTexture===undefined&&(d.__webglTexture=n.createTexture()),d.__version=l.version,o.memory.textures++);const nt=t.isWebGLCubeRenderTarget===!0,g=t.isWebGLMultipleRenderTargets===!0,y=p(t)||s;if(nt){e.__webglFramebuffer=[];for(let t=0;t<6;t++)e.__webglFramebuffer[t]=n.createFramebuffer()}else{if(e.__webglFramebuffer=n.createFramebuffer(),g)if(u.drawBuffers){const i=t.texture;for(let t=0,u=i.length;t<u;t++){const u=r.get(i[t]);u.__webglTexture===undefined&&(u.__webglTexture=n.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(s&&t.samples>0&&h(t)===!1){const r=g?l:[l];e.__webglMultisampledFramebuffer=n.createFramebuffer();e.__webglColorRenderbuffer=[];i.bindFramebuffer(n.FRAMEBUFFER,e.__webglMultisampledFramebuffer);for(let i=0;i<r.length;i++){const u=r[i];e.__webglColorRenderbuffer[i]=n.createRenderbuffer();n.bindRenderbuffer(n.RENDERBUFFER,e.__webglColorRenderbuffer[i]);const o=f.convert(u.format,u.colorSpace),s=f.convert(u.type),h=w(u.internalFormat,o,s,u.colorSpace,t.isXRRenderTarget===!0),c=v(t);n.renderbufferStorageMultisample(n.RENDERBUFFER,c,h,t.width,t.height);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+i,n.RENDERBUFFER,e.__webglColorRenderbuffer[i])}n.bindRenderbuffer(n.RENDERBUFFER,null);t.depthBuffer&&(e.__webglDepthRenderbuffer=n.createRenderbuffer(),ft(e.__webglDepthRenderbuffer,t,!0));i.bindFramebuffer(n.FRAMEBUFFER,null)}}if(nt){i.bindTexture(n.TEXTURE_CUBE_MAP,d.__webglTexture);b(n.TEXTURE_CUBE_MAP,l,y);for(let i=0;i<6;i++)k(e.__webglFramebuffer[i],t,l,n.COLOR_ATTACHMENT0,n.TEXTURE_CUBE_MAP_POSITIVE_X+i);c(l,y)&&a(n.TEXTURE_CUBE_MAP);i.unbindTexture()}else if(g){const u=t.texture;for(let f=0,o=u.length;f<o;f++){const o=u[f],s=r.get(o);i.bindTexture(n.TEXTURE_2D,s.__webglTexture);b(n.TEXTURE_2D,o,y);k(e.__webglFramebuffer,t,o,n.COLOR_ATTACHMENT0+f,n.TEXTURE_2D);c(o,y)&&a(n.TEXTURE_2D)}i.unbindTexture()}else{let r=n.TEXTURE_2D;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(s?r=t.isWebGL3DRenderTarget?n.TEXTURE_3D:n.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2."));i.bindTexture(r,d.__webglTexture);b(r,l,y);k(e.__webglFramebuffer,t,l,n.COLOR_ATTACHMENT0,r);c(l,y)&&a(r);i.unbindTexture()}t.depthBuffer&&et(t)}function nr(t){const f=p(t)||s,u=t.isWebGLMultipleRenderTargets===!0?t.texture:[t.texture];for(let e=0,o=u.length;e<o;e++){const o=u[e];if(c(o,f)){const u=t.isWebGLCubeRenderTarget?n.TEXTURE_CUBE_MAP:n.TEXTURE_2D,f=r.get(o).__webglTexture;i.bindTexture(u,f);a(u);i.unbindTexture()}}}function tr(t){if(s&&t.samples>0&&h(t)===!1){const f=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],c=t.width,l=t.height;let o=n.COLOR_BUFFER_BIT;const s=[],h=t.stencilBuffer?n.DEPTH_STENCIL_ATTACHMENT:n.DEPTH_ATTACHMENT,u=r.get(t),e=t.isWebGLMultipleRenderTargets===!0;if(e)for(let t=0;t<f.length;t++)i.bindFramebuffer(n.FRAMEBUFFER,u.__webglMultisampledFramebuffer),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+t,n.RENDERBUFFER,null),i.bindFramebuffer(n.FRAMEBUFFER,u.__webglFramebuffer),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+t,n.TEXTURE_2D,null,0);i.bindFramebuffer(n.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer);i.bindFramebuffer(n.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let i=0;i<f.length;i++){s.push(n.COLOR_ATTACHMENT0+i);t.depthBuffer&&s.push(h);const a=u.__ignoreDepthValues!==undefined?u.__ignoreDepthValues:!1;if(a===!1&&(t.depthBuffer&&(o|=n.DEPTH_BUFFER_BIT),t.stencilBuffer&&(o|=n.STENCIL_BUFFER_BIT)),e&&n.framebufferRenderbuffer(n.READ_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.RENDERBUFFER,u.__webglColorRenderbuffer[i]),a===!0&&(n.invalidateFramebuffer(n.READ_FRAMEBUFFER,[h]),n.invalidateFramebuffer(n.DRAW_FRAMEBUFFER,[h])),e){const t=r.get(f[i]).__webglTexture;n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0)}n.blitFramebuffer(0,0,c,l,0,0,c,l,o,n.NEAREST);ui&&n.invalidateFramebuffer(n.READ_FRAMEBUFFER,s)}if(i.bindFramebuffer(n.READ_FRAMEBUFFER,null),i.bindFramebuffer(n.DRAW_FRAMEBUFFER,null),e)for(let t=0;t<f.length;t++){i.bindFramebuffer(n.FRAMEBUFFER,u.__webglMultisampledFramebuffer);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0+t,n.RENDERBUFFER,u.__webglColorRenderbuffer[t]);const e=r.get(f[t]).__webglTexture;i.bindFramebuffer(n.FRAMEBUFFER,u.__webglFramebuffer);n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,n.COLOR_ATTACHMENT0+t,n.TEXTURE_2D,e,0)}i.bindFramebuffer(n.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}}function v(n){return Math.min(ri,n.samples)}function h(n){const i=r.get(n);return s&&n.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&i.__useRenderToTexture!==!1}function ir(n){const t=o.render.frame;nt.get(n)!==t&&(nt.set(n,t),n.update())}function ni(n,i){const r=n.colorSpace,u=n.format,f=n.type;return n.isCompressedTexture===!0||n.format===cc?i:(r!==oi&&r!==uu&&(r===e?s===!1?t.has("EXT_sRGB")===!0&&u===kt?(n.format=cc,n.minFilter=g,n.generateMipmaps=!1):i=nw.sRGBToLinear(i):(u!==kt||f!==fr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",r)),i)}const s=u.isWebGL2,ot=u.maxTextures,ti=u.maxCubemapSize,ii=u.maxTextureSize,ri=u.maxSamples,l=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,ui=typeof navigator=="undefined"?!1:/OculusBrowser/g.test(navigator.userAgent),nt=new WeakMap;let tt;const y=new WeakMap;let ht=!1;try{ht=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(rr){}let it=0;const rt={[ns]:n.REPEAT,[st]:n.CLAMP_TO_EDGE,[ts]:n.MIRRORED_REPEAT},dt={[d]:n.NEAREST,[nc]:n.NEAREST_MIPMAP_NEAREST,[is]:n.NEAREST_MIPMAP_LINEAR,[g]:n.LINEAR,[uy]:n.LINEAR_MIPMAP_NEAREST,[gr]:n.LINEAR_MIPMAP_LINEAR},pi={[ln]:n.NEVER,[kn]:n.ALWAYS,[an]:n.LESS,[yn]:n.LEQUAL,[vn]:n.EQUAL,[bn]:n.GEQUAL,[pn]:n.GREATER,[wn]:n.NOTEQUAL};this.allocateTextureUnit=ci;this.resetTextureUnits=hi;this.setTexture2D=bt;this.setTexture2DArray=ai;this.setTexture3D=vi;this.setTextureCube=yi;this.rebindTextures=ki;this.setupRenderTarget=gi;this.updateRenderTargetMipmap=nr;this.updateMultisampleRenderTarget=tr;this.setupDepthRenderbuffer=et;this.setupFrameBufferTexture=k;this.useMultisampledRTT=h}function ort(n,t,i){function u(i,u=uu){let f;if(i===fr)return n.UNSIGNED_BYTE;if(i===ey)return n.UNSIGNED_SHORT_4_4_4_4;if(i===oy)return n.UNSIGNED_SHORT_5_5_5_1;if(i===pg)return n.BYTE;if(i===wg)return n.SHORT;if(i===tc)return n.UNSIGNED_SHORT;if(i===fy)return n.INT;if(i===er)return n.UNSIGNED_INT;if(i===di)return n.FLOAT;if(i===te)return r?n.HALF_FLOAT:(f=t.get("OES_texture_half_float"),f!==null?f.HALF_FLOAT_OES:null);if(i===bg)return n.ALPHA;if(i===kt)return n.RGBA;if(i===kg)return n.LUMINANCE;if(i===dg)return n.LUMINANCE_ALPHA;if(i===tu)return n.DEPTH_COMPONENT;if(i===bu)return n.DEPTH_STENCIL;if(i===cc)return f=t.get("EXT_sRGB"),f!==null?f.SRGB_ALPHA_EXT:null;if(i===gg)return n.RED;if(i===sy)return n.RED_INTEGER;if(i===nn)return n.RG;if(i===hy)return n.RG_INTEGER;if(i===cy)return n.RGBA_INTEGER;if(i===ic||i===rc||i===uc||i===fc)if(u===e)if(f=t.get("WEBGL_compressed_texture_s3tc_srgb"),f!==null){if(i===ic)return f.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===rc)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===uc)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===fc)return f.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(f=t.get("WEBGL_compressed_texture_s3tc"),f!==null){if(i===ic)return f.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===rc)return f.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===uc)return f.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===fc)return f.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===ly||i===ay||i===vy||i===yy)if(f=t.get("WEBGL_compressed_texture_pvrtc"),f!==null){if(i===ly)return f.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===ay)return f.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===vy)return f.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===yy)return f.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===tn)return f=t.get("WEBGL_compressed_texture_etc1"),f!==null?f.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===py||i===wy)if(f=t.get("WEBGL_compressed_texture_etc"),f!==null){if(i===py)return u===e?f.COMPRESSED_SRGB8_ETC2:f.COMPRESSED_RGB8_ETC2;if(i===wy)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:f.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===by||i===ky||i===dy||i===gy||i===np||i===tp||i===ip||i===rp||i===up||i===fp||i===ep||i===op||i===sp||i===hp)if(f=t.get("WEBGL_compressed_texture_astc"),f!==null){if(i===by)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:f.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===ky)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:f.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===dy)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:f.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===gy)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:f.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===np)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:f.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===tp)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:f.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===ip)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:f.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===rp)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:f.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===up)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:f.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===fp)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:f.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===ep)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:f.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===op)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:f.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===sp)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:f.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===hp)return u===e?f.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:f.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===ec)if(f=t.get("EXT_texture_compression_bptc"),f!==null){if(i===ec)return u===e?f.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:f.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(i===rn||i===cp||i===lp||i===ap)if(f=t.get("EXT_texture_compression_rgtc"),f!==null){if(i===ec)return f.COMPRESSED_RED_RGTC1_EXT;if(i===cp)return f.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===lp)return f.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===ap)return f.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===nu?r?n.UNSIGNED_INT_24_8:(f=t.get("WEBGL_depth_texture"),f!==null?f.UNSIGNED_INT_24_8_WEBGL:null):n[i]!==undefined?n[i]:null}const r=i.isWebGL2;return{convert:u}}function dyt(n,t){function i(n,t){n.matrixAutoUpdate===!0&&n.updateMatrix();t.value.copy(n.matrix)}function u(t,i){i.color.getRGB(t.fogColor.value,btt(n));i.isFog?(t.fogNear.value=i.near,t.fogFar.value=i.far):i.isFogExp2&&(t.fogDensity.value=i.density)}function f(n,t,i,u,f){t.isMeshBasicMaterial?r(n,t):t.isMeshLambertMaterial?r(n,t):t.isMeshToonMaterial?(r(n,t),l(n,t)):t.isMeshPhongMaterial?(r(n,t),c(n,t)):t.isMeshStandardMaterial?(r(n,t),a(n,t),t.isMeshPhysicalMaterial&&v(n,t,f)):t.isMeshMatcapMaterial?(r(n,t),y(n,t)):t.isMeshDepthMaterial?r(n,t):t.isMeshDistanceMaterial?(r(n,t),p(n,t)):t.isMeshNormalMaterial?r(n,t):t.isLineBasicMaterial?(e(n,t),t.isLineDashedMaterial&&o(n,t)):t.isPointsMaterial?s(n,t,i,u):t.isSpriteMaterial?h(n,t):t.isShadowMaterial?(n.color.value.copy(t.color),n.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}function r(r,u){r.opacity.value=u.opacity;u.color&&r.diffuse.value.copy(u.color);u.emissive&&r.emissive.value.copy(u.emissive).multiplyScalar(u.emissiveIntensity);u.map&&(r.map.value=u.map,i(u.map,r.mapTransform));u.alphaMap&&(r.alphaMap.value=u.alphaMap,i(u.alphaMap,r.alphaMapTransform));u.bumpMap&&(r.bumpMap.value=u.bumpMap,i(u.bumpMap,r.bumpMapTransform),r.bumpScale.value=u.bumpScale,u.side===at&&(r.bumpScale.value*=-1));u.normalMap&&(r.normalMap.value=u.normalMap,i(u.normalMap,r.normalMapTransform),r.normalScale.value.copy(u.normalScale),u.side===at&&r.normalScale.value.negate());u.displacementMap&&(r.displacementMap.value=u.displacementMap,i(u.displacementMap,r.displacementMapTransform),r.displacementScale.value=u.displacementScale,r.displacementBias.value=u.displacementBias);u.emissiveMap&&(r.emissiveMap.value=u.emissiveMap,i(u.emissiveMap,r.emissiveMapTransform));u.specularMap&&(r.specularMap.value=u.specularMap,i(u.specularMap,r.specularMapTransform));u.alphaTest>0&&(r.alphaTest.value=u.alphaTest);const f=t.get(u).envMap;if(f&&(r.envMap.value=f,r.flipEnvMap.value=f.isCubeTexture&&f.isRenderTargetTexture===!1?-1:1,r.reflectivity.value=u.reflectivity,r.ior.value=u.ior,r.refractionRatio.value=u.refractionRatio),u.lightMap){r.lightMap.value=u.lightMap;const t=n.useLegacyLights===!0?Math.PI:1;r.lightMapIntensity.value=u.lightMapIntensity*t;i(u.lightMap,r.lightMapTransform)}u.aoMap&&(r.aoMap.value=u.aoMap,r.aoMapIntensity.value=u.aoMapIntensity,i(u.aoMap,r.aoMapTransform))}function e(n,t){n.diffuse.value.copy(t.color);n.opacity.value=t.opacity;t.map&&(n.map.value=t.map,i(t.map,n.mapTransform))}function o(n,t){n.dashSize.value=t.dashSize;n.totalSize.value=t.dashSize+t.gapSize;n.scale.value=t.scale}function s(n,t,r,u){n.diffuse.value.copy(t.color);n.opacity.value=t.opacity;n.size.value=t.size*r;n.scale.value=u*.5;t.map&&(n.map.value=t.map,i(t.map,n.uvTransform));t.alphaMap&&(n.alphaMap.value=t.alphaMap,i(t.alphaMap,n.alphaMapTransform));t.alphaTest>0&&(n.alphaTest.value=t.alphaTest)}function h(n,t){n.diffuse.value.copy(t.color);n.opacity.value=t.opacity;n.rotation.value=t.rotation;t.map&&(n.map.value=t.map,i(t.map,n.mapTransform));t.alphaMap&&(n.alphaMap.value=t.alphaMap,i(t.alphaMap,n.alphaMapTransform));t.alphaTest>0&&(n.alphaTest.value=t.alphaTest)}function c(n,t){n.specular.value.copy(t.specular);n.shininess.value=Math.max(t.shininess,.0001)}function l(n,t){t.gradientMap&&(n.gradientMap.value=t.gradientMap)}function a(n,r){n.metalness.value=r.metalness;r.metalnessMap&&(n.metalnessMap.value=r.metalnessMap,i(r.metalnessMap,n.metalnessMapTransform));n.roughness.value=r.roughness;r.roughnessMap&&(n.roughnessMap.value=r.roughnessMap,i(r.roughnessMap,n.roughnessMapTransform));const u=t.get(r).envMap;u&&(n.envMapIntensity.value=r.envMapIntensity)}function v(n,t,r){n.ior.value=t.ior;t.sheen>0&&(n.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),n.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(n.sheenColorMap.value=t.sheenColorMap,i(t.sheenColorMap,n.sheenColorMapTransform)),t.sheenRoughnessMap&&(n.sheenRoughnessMap.value=t.sheenRoughnessMap,i(t.sheenRoughnessMap,n.sheenRoughnessMapTransform)));t.clearcoat>0&&(n.clearcoat.value=t.clearcoat,n.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(n.clearcoatMap.value=t.clearcoatMap,i(t.clearcoatMap,n.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(n.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,i(t.clearcoatRoughnessMap,n.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(n.clearcoatNormalMap.value=t.clearcoatNormalMap,i(t.clearcoatNormalMap,n.clearcoatNormalMapTransform),n.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),t.side===at&&n.clearcoatNormalScale.value.negate()));t.iridescence>0&&(n.iridescence.value=t.iridescence,n.iridescenceIOR.value=t.iridescenceIOR,n.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],n.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(n.iridescenceMap.value=t.iridescenceMap,i(t.iridescenceMap,n.iridescenceMapTransform)),t.iridescenceThicknessMap&&(n.iridescenceThicknessMap.value=t.iridescenceThicknessMap,i(t.iridescenceThicknessMap,n.iridescenceThicknessMapTransform)));t.transmission>0&&(n.transmission.value=t.transmission,n.transmissionSamplerMap.value=r.texture,n.transmissionSamplerSize.value.set(r.width,r.height),t.transmissionMap&&(n.transmissionMap.value=t.transmissionMap,i(t.transmissionMap,n.transmissionMapTransform)),n.thickness.value=t.thickness,t.thicknessMap&&(n.thicknessMap.value=t.thicknessMap,i(t.thicknessMap,n.thicknessMapTransform)),n.attenuationDistance.value=t.attenuationDistance,n.attenuationColor.value.copy(t.attenuationColor));t.anisotropy>0&&(n.anisotropyVector.value.set(t.anisotropy*Math.cos(t.anisotropyRotation),t.anisotropy*Math.sin(t.anisotropyRotation)),t.anisotropyMap&&(n.anisotropyMap.value=t.anisotropyMap,i(t.anisotropyMap,n.anisotropyMapTransform)));n.specularIntensity.value=t.specularIntensity;n.specularColor.value.copy(t.specularColor);t.specularColorMap&&(n.specularColorMap.value=t.specularColorMap,i(t.specularColorMap,n.specularColorMapTransform));t.specularIntensityMap&&(n.specularIntensityMap.value=t.specularIntensityMap,i(t.specularIntensityMap,n.specularIntensityMapTransform))}function y(n,t){t.matcap&&(n.matcap.value=t.matcap)}function p(n,i){const r=t.get(i).light;n.referencePosition.value.setFromMatrixPosition(r.matrixWorld);n.nearDistance.value=r.shadow.camera.near;n.farDistance.value=r.shadow.camera.far}return{refreshFogUniforms:u,refreshMaterialUniforms:f}}function gyt(n,t,i,r){function c(n,t){const i=t.program;r.uniformBlockBinding(n,i)}function l(n,i){let f=u[n.id];f===undefined&&(w(n),f=a(n),u[n.id]=f,n.addEventListener("dispose",s));const h=i.program;r.updateUBOMapping(n,h);const o=t.render.frame;e[n.id]!==o&&(y(n),e[n.id]=o)}function a(t){const r=v();t.__bindingPointIndex=r;const i=n.createBuffer(),u=t.__size,f=t.usage;return n.bindBuffer(n.UNIFORM_BUFFER,i),n.bufferData(n.UNIFORM_BUFFER,u,f),n.bindBuffer(n.UNIFORM_BUFFER,null),n.bindBufferBase(n.UNIFORM_BUFFER,r,i),i}function v(){for(let n=0;n<h;n++)if(f.indexOf(n)===-1)return f.push(n),n;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function y(t){const r=u[t.id],i=t.uniforms,f=t.__cache;n.bindBuffer(n.UNIFORM_BUFFER,r);for(let t=0,r=i.length;t<r;t++){const r=i[t];if(p(r,t,f)===!0){const i=r.__offset,u=Array.isArray(r.value)?r.value:[r.value];let t=0;for(let f=0;f<u.length;f++){const e=u[f],s=o(e);typeof e=="number"?(r.__data[0]=e,n.bufferSubData(n.UNIFORM_BUFFER,i+t,r.__data)):e.isMatrix3?(r.__data[0]=e.elements[0],r.__data[1]=e.elements[1],r.__data[2]=e.elements[2],r.__data[3]=e.elements[0],r.__data[4]=e.elements[3],r.__data[5]=e.elements[4],r.__data[6]=e.elements[5],r.__data[7]=e.elements[0],r.__data[8]=e.elements[6],r.__data[9]=e.elements[7],r.__data[10]=e.elements[8],r.__data[11]=e.elements[0]):(e.toArray(r.__data,t),t+=s.storage/Float32Array.BYTES_PER_ELEMENT)}n.bufferSubData(n.UNIFORM_BUFFER,i,r.__data)}}n.bindBuffer(n.UNIFORM_BUFFER,null)}function p(n,t,i){const r=n.value;if(i[t]===undefined){if(typeof r=="number")i[t]=r;else{const n=Array.isArray(r)?r:[r],u=[];for(let t=0;t<n.length;t++)u.push(n[t].clone());i[t]=u}return!0}if(typeof r=="number"){if(i[t]!==r)return i[t]=r,!0}else{const n=Array.isArray(i[t])?i[t]:[i[t]],u=Array.isArray(r)?r:[r];for(let t=0;t<n.length;t++){const i=n[t];if(i.equals(u[t])===!1)return i.copy(u[t]),!0}}return!1}function w(n){const u=n.uniforms;let t=0;const r=16;let i=0;for(let n=0,f=u.length;n<f;n++){const f=u[n],e={boundary:0,storage:0},s=Array.isArray(f.value)?f.value:[f.value];for(let n=0,t=s.length;n<t;n++){const i=s[n],t=o(i);e.boundary+=t.boundary;e.storage+=t.storage}if(f.__data=new Float32Array(e.storage/Float32Array.BYTES_PER_ELEMENT),f.__offset=t,n>0){i=t%r;const n=r-i;i!==0&&n-e.boundary<0&&(t+=r-i,f.__offset=t)}t+=e.storage}return i=t%r,i>0&&(t+=r-i),n.__size=t,n.__cache={},this}function o(n){const t={boundary:0,storage:0};return typeof n=="number"?(t.boundary=4,t.storage=4):n.isVector2?(t.boundary=8,t.storage=8):n.isVector3||n.isColor?(t.boundary=16,t.storage=12):n.isVector4?(t.boundary=16,t.storage=16):n.isMatrix3?(t.boundary=48,t.storage=48):n.isMatrix4?(t.boundary=64,t.storage=64):n.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",n),t}function s(t){const i=t.target;i.removeEventListener("dispose",s);const r=f.indexOf(i.__bindingPointIndex);f.splice(r,1);n.deleteBuffer(u[i.id]);delete u[i.id];delete e[i.id]}function b(){for(const t in u)n.deleteBuffer(u[t]);f=[];u={};e={}}let u={},e={},f=[];const h=i.isWebGL2?n.getParameter(n.MAX_UNIFORM_BUFFER_BINDINGS):0;return{bind:c,update:l,dispose:b}}function ta(n,t,i,r,u,f){ho.subVectors(n,i).addScalar(.5).multiply(r);u!==undefined?(gs.x=f*ho.x-u*ho.y,gs.y=u*ho.x+f*ho.y):gs.copy(ho);n.copy(t);n.x+=gs.x;n.y+=gs.y;n.applyMatrix4(vrt)}function wut(n,i,r,u,f,e,o){const s=bb.distanceSqToPoint(n);if(s<r){const r=new t;bb.closestPointToPoint(n,r);r.applyMatrix4(u);const h=f.ray.origin.distanceTo(r);if(h<f.near||h>f.far)return;e.push({distance:h,distanceToRay:Math.sqrt(s),point:r,index:i,face:null,object:o})}}function db(){function u(u,f,e,o){n=u;t=e;i=-3*u+3*f-2*e-o;r=2*u-2*f+e+o}let n=0,t=0,i=0,r=0;return{initCatmullRom:function(n,t,i,r,f){u(t,i,f*(i-n),f*(r-t))},initNonuniformCatmullRom:function(n,t,i,r,f,e,o){let s=(t-n)/f-(i-n)/(f+e)+(i-t)/e,h=(i-t)/e-(r-t)/(e+o)+(r-i)/o;s*=e;h*=e;u(t,i,s,h)},calc:function(u){const f=u*u,e=f*u;return n+t*u+i*f+r*e}}}function dut(n,t,i,r,u){const f=(r-t)*.5,e=(u-i)*.5,o=n*n,s=n*o;return(2*i-2*r+f+e)*s+(-3*i+3*r-2*f-e)*o+f*n+i}function opt(n,t){const i=1-n;return i*i*t}function spt(n,t){return 2*(1-n)*n*t}function hpt(n,t){return n*n*t}function rh(n,t,i,r){return opt(n,t)+spt(n,i)+hpt(n,r)}function cpt(n,t){const i=1-n;return i*i*i*t}function lpt(n,t){const i=1-n;return 3*i*i*n*t}function apt(n,t){return 3*(1-n)*n*n*t}function vpt(n,t){return n*n*n*t}function uh(n,t,i,r,u){return cpt(n,t)+lpt(n,i)+apt(n,r)+vpt(n,u)}function rft(n,t,i,r,u){let f,e;if(u===hwt(n,t,i,r)>0)for(f=t;f<i;f+=r)e=eft(f,n[f],n[f+1],e);else for(f=i-r;f>=t;f-=r)e=eft(f,n[f],n[f+1],e);return e&&ka(e,e.next)&&(hh(e),e=e.next),e}function lf(n,t){if(!n)return n;t||(t=n);let i=n,r;do if(r=!1,!i.steiner&&(ka(i,i.next)||w(i.prev,i,i.next)===0)){if(hh(i),i=t=i.prev,i===i.next)break;r=!0}else i=i.next;while(r||i!==t);return t}function oh(n,t,i,r,u,f,e){if(n){!e&&f&&rwt(n,r,u,f);let s=n,h,o;while(n.prev!==n.next){if(h=n.prev,o=n.next,f?wpt(n,r,u,f):ppt(n)){t.push(h.i/i|0);t.push(n.i/i|0);t.push(o.i/i|0);hh(n);n=o.next;s=o.next;continue}if(n=o,n===s){e?e===1?(n=bpt(lf(n),t,i),oh(n,t,i,r,u,f,2)):e===2&&kpt(n,t,i,r,u,f):oh(lf(n),t,i,r,u,f,1);break}}}}function ppt(n){const s=n.prev,c=n,h=n.next;if(w(s,c,h)>=0)return!1;const u=s.x,f=c.x,i=h.x,e=s.y,o=c.y,r=h.y,l=u<f?u<i?u:i:f<i?f:i,a=e<o?e<r?e:r:o<r?o:r,v=u>f?u>i?u:i:f>i?f:i,y=e>o?e>r?e:r:o>r?o:r;let t=h.next;while(t!==s){if(t.x>=l&&t.x<=v&&t.y>=a&&t.y<=y&&po(u,e,f,o,i,r,t.x,t.y)&&w(t.prev,t,t.next)>=0)return!1;t=t.next}return!0}function wpt(n,t,i,r){const a=n.prev,d=n,v=n.next;if(w(a,d,v)>=0)return!1;const s=a.x,h=d.x,e=v.x,c=a.y,l=d.y,o=v.y,y=s<h?s<e?s:e:h<e?h:e,p=c<l?c<o?c:o:l<o?l:o,b=s>h?s>e?s:e:h>e?h:e,k=c>l?c>o?c:o:l>o?l:o,g=ok(y,p,t,i,r),nt=ok(b,k,t,i,r);let u=n.prevZ,f=n.nextZ;while(u&&u.z>=g&&f&&f.z<=nt){if(u.x>=y&&u.x<=b&&u.y>=p&&u.y<=k&&u!==a&&u!==v&&po(s,c,h,l,e,o,u.x,u.y)&&w(u.prev,u,u.next)>=0||(u=u.prevZ,f.x>=y&&f.x<=b&&f.y>=p&&f.y<=k&&f!==a&&f!==v&&po(s,c,h,l,e,o,f.x,f.y)&&w(f.prev,f,f.next)>=0))return!1;f=f.nextZ}while(u&&u.z>=g){if(u.x>=y&&u.x<=b&&u.y>=p&&u.y<=k&&u!==a&&u!==v&&po(s,c,h,l,e,o,u.x,u.y)&&w(u.prev,u,u.next)>=0)return!1;u=u.prevZ}while(f&&f.z<=nt){if(f.x>=y&&f.x<=b&&f.y>=p&&f.y<=k&&f!==a&&f!==v&&po(s,c,h,l,e,o,f.x,f.y)&&w(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function bpt(n,t,i){let r=n;do{const f=r.prev,u=r.next.next;!ka(f,u)&&uft(f,r,r.next,u)&&sh(f,u)&&sh(u,f)&&(t.push(f.i/i|0),t.push(r.i/i|0),t.push(u.i/i|0),hh(r),hh(r.next),r=n=u);r=r.next}while(r!==n);return lf(r)}function kpt(n,t,i,r,u,f){let e=n;do{let n=e.next.next;while(n!==e.prev){if(e.i!==n.i&&ewt(e,n)){let o=fft(e,n);e=lf(e,e.next);o=lf(o,o.next);oh(e,t,i,r,u,f,0);oh(o,t,i,r,u,f,0);return}n=n.next}e=e.next}while(e!==n)}function dpt(n,t,i,r){const e=[];let u,o,s,h,f;for(u=0,o=t.length;u<o;u++)s=t[u]*r,h=u<o-1?t[u+1]*r:n.length,f=rft(n,s,h,r,!1),f===f.next&&(f.steiner=!0),e.push(fwt(f));for(e.sort(gpt),u=0;u<e.length;u++)i=nwt(e[u],i);return i}function gpt(n,t){return n.x-t.x}function nwt(n,t){const i=twt(n,t);if(!i)return t;const r=fft(i,n);return lf(r,r.next),lf(i,i.next)}function twt(n,t){let i=t,e=- Infinity,r;const f=n.x,u=n.y;do{if(u<=i.y&&u>=i.next.y&&i.next.y!==i.y){const n=i.x+(u-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(n<=f&&n>e&&(e=n,r=i.x<i.next.x?i:i.next,n===f))return r}i=i.next}while(i!==t);if(!r)return null;const l=r,c=r.x,s=r.y;let h=Infinity,o;i=r;do f>=i.x&&i.x>=c&&f!==i.x&&po(u<s?f:e,u,c,s,u<s?e:f,u,i.x,i.y)&&(o=Math.abs(u-i.y)/(f-i.x),sh(i,n)&&(o<h||o===h&&(i.x>r.x||i.x===r.x&&iwt(r,i)))&&(r=i,h=o)),i=i.next;while(i!==l);return r}function iwt(n,t){return w(n.prev,n,t.prev)<0&&w(t.next,n,n.next)<0}function rwt(n,t,i,r){let u=n;do u.z===0&&(u.z=ok(u.x,u.y,t,i,r)),u.prevZ=u.prev,u.nextZ=u.next,u=u.next;while(u!==n);u.prevZ.nextZ=null;u.prevZ=null;uwt(u)}function uwt(n){let o,i,t,r,u,s,f,e,h=1;do{for(i=n,n=null,u=null,s=0;i;){for(s++,t=i,f=0,o=0;o<h;o++)if(f++,t=t.nextZ,!t)break;for(e=h;f>0||e>0&&t;)f!==0&&(e===0||!t||i.z<=t.z)?(r=i,i=i.nextZ,f--):(r=t,t=t.nextZ,e--),u?u.nextZ=r:n=r,r.prevZ=u,u=r;i=t}u.nextZ=null;h*=2}while(s>1);return n}function ok(n,t,i,r,u){return n=(n-i)*u|0,t=(t-r)*u|0,n=(n|n<<8)&16711935,n=(n|n<<4)&252645135,n=(n|n<<2)&858993459,n=(n|n<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,n|t<<1}function fwt(n){let t=n,i=n;do(t.x<i.x||t.x===i.x&&t.y<i.y)&&(i=t),t=t.next;while(t!==n);return i}function po(n,t,i,r,u,f,e,o){return(u-e)*(t-o)>=(n-e)*(f-o)&&(n-e)*(r-o)>=(i-e)*(t-o)&&(i-e)*(f-o)>=(u-e)*(r-o)}function ewt(n,t){return n.next.i!==t.i&&n.prev.i!==t.i&&!owt(n,t)&&(sh(n,t)&&sh(t,n)&&swt(n,t)&&(w(n.prev,n,t.prev)||w(n,t.prev,t))||ka(n,t)&&w(n.prev,n,n.next)>0&&w(t.prev,t,t.next)>0)}function w(n,t,i){return(t.y-n.y)*(i.x-t.x)-(t.x-n.x)*(i.y-t.y)}function ka(n,t){return n.x===t.x&&n.y===t.y}function uft(n,t,i,r){const u=ga(w(n,t,i)),f=ga(w(n,t,r)),e=ga(w(i,r,n)),o=ga(w(i,r,t));return u!==f&&e!==o?!0:u===0&&da(n,i,t)?!0:f===0&&da(n,r,t)?!0:e===0&&da(i,n,r)?!0:o===0&&da(i,t,r)?!0:!1}function da(n,t,i){return t.x<=Math.max(n.x,i.x)&&t.x>=Math.min(n.x,i.x)&&t.y<=Math.max(n.y,i.y)&&t.y>=Math.min(n.y,i.y)}function ga(n){return n>0?1:n<0?-1:0}function owt(n,t){let i=n;do{if(i.i!==n.i&&i.next.i!==n.i&&i.i!==t.i&&i.next.i!==t.i&&uft(i,i.next,n,t))return!0;i=i.next}while(i!==n);return!1}function sh(n,t){return w(n.prev,n,n.next)<0?w(n,t,n.next)>=0&&w(n,n.prev,t)>=0:w(n,t,n.prev)<0||w(n,n.next,t)<0}function swt(n,t){let i=n,r=!1;const f=(n.x+t.x)/2,u=(n.y+t.y)/2;do i.y>u!=i.next.y>u&&i.next.y!==i.y&&f<(i.next.x-i.x)*(u-i.y)/(i.next.y-i.y)+i.x&&(r=!r),i=i.next;while(i!==n);return r}function fft(n,t){const r=new sk(n.i,n.x,n.y),i=new sk(t.i,t.x,t.y),u=n.next,f=t.prev;return n.next=t,t.prev=n,r.next=u,u.prev=r,i.next=r,r.prev=i,f.next=i,i.prev=f,i}function eft(n,t,i,r){const u=new sk(n,t,i);return r?(u.next=r.next,u.prev=r,r.next.prev=u,r.next=u):(u.prev=u,u.next=u),u}function hh(n){n.next.prev=n.prev;n.prev.next=n.next;n.prevZ&&(n.prevZ.nextZ=n.nextZ);n.nextZ&&(n.nextZ.prevZ=n.prevZ)}function sk(n,t,i){this.i=n;this.x=t;this.y=i;this.prev=null;this.next=null;this.z=0;this.prevZ=null;this.nextZ=null;this.steiner=!1}function hwt(n,t,i,r){let u=0;for(let f=t,e=i-r;f<i;f+=r)u+=(n[e]-n[f])*(n[f+1]+n[e+1]),e=f;return u}function oft(n){const t=n.length;t>2&&n[t-1].equals(n[0])&&n.pop()}function sft(n,t){for(let i=0;i<t.length;i++)n.push(t[i].x),n.push(t[i].y)}function lwt(n,t,i){if(i.shapes=[],Array.isArray(n))for(let t=0,r=n.length;t<r;t++){const r=n[t];i.shapes.push(r.uuid)}else i.shapes.push(n.uuid);return i.options=Object.assign({},t),t.extrudePath!==undefined&&(i.options.extrudePath=t.extrudePath.toJSON()),i}function awt(n,t){if(t.shapes=[],Array.isArray(n))for(let i=0,r=n.length;i<r;i++){const r=n[i];t.shapes.push(r.uuid)}else t.shapes.push(n.uuid);return t}function cft(n,t,i){const r=`${n.x},${n.y},${n.z}-${t.x},${t.y},${t.z}`,u=`${t.x},${t.y},${t.z}-${n.x},${n.y},${n.z}`;return i.has(r)===!0||i.has(u)===!0?!1:(i.add(r),i.add(u),!0)}function ei(n,t,i){return lk(n)?new n.constructor(n.subarray(t,i!==undefined?i:n.length)):n.slice(t,i)}function af(n,t,i){return!n||!i&&n.constructor===t?n:typeof t.BYTES_PER_ELEMENT=="number"?new t(n):Array.prototype.slice.call(n)}function lk(n){return ArrayBuffer.isView(n)&&!(n instanceof DataView)}function gft(n){function r(t,i){return n[t]-n[i]}const i=n.length,t=new Array(i);for(let n=0;n!==i;++n)t[n]=n;return t.sort(r),t}function ak(n,t,i){const r=n.length,u=new n.constructor(r);for(let f=0,e=0;e!==r;++f){const r=i[f]*t;for(let i=0;i!==t;++i)u[e++]=n[r+i]}return u}function vk(n,t,i,r){let e=1,u=n[0];while(u!==undefined&&u[r]===undefined)u=n[e++];if(u!==undefined){let f=u[r];if(f!==undefined)if(Array.isArray(f)){do f=u[r],f!==undefined&&(t.push(u.time),i.push.apply(i,f)),u=n[e++];while(u!==undefined)}else if(f.toArray!==undefined){do f=u[r],f!==undefined&&(t.push(u.time),f.toArray(i,i.length)),u=n[e++];while(u!==undefined)}else do f=u[r],f!==undefined&&(t.push(u.time),i.push(f)),u=n[e++];while(u!==undefined)}}function vwt(n,t,i,r,u=30){const f=n.clone();f.name=t;const o=[];for(let n=0;n<f.tracks.length;++n){const t=f.tracks[n],s=t.getValueSize(),e=[],h=[];for(let n=0;n<t.times.length;++n){const f=t.times[n]*u;if(!(f<i)&&!(f>=r)){e.push(t.times[n]);for(let i=0;i<s;++i)h.push(t.values[n*s+i])}}e.length!==0&&(t.times=af(e,t.times.constructor),t.values=af(h,t.values.constructor),o.push(t))}f.tracks=o;let e=Infinity;for(let n=0;n<f.tracks.length;++n)e>f.tracks[n].times[0]&&(e=f.tracks[n].times[0]);for(let n=0;n<f.tracks.length;++n)f.tracks[n].shift(-1*e);return f.resetDuration(),f}function ywt(n,t=0,i=n,r=30){r<=0&&(r=30);const f=i.tracks.length,u=t/r;for(let t=0;t<f;++t){const r=i.tracks[t],s=r.ValueTypeName;if(s!=="bool"&&s!=="string"){const f=n.tracks.find(function(n){return n.name===r.name&&n.ValueTypeName===s});if(f!==undefined){let e=0;const h=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=h/3);let c=0;const l=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=l/3);const a=r.times.length-1;let o;if(u<=r.times[0]){const n=e,t=h-e;o=ei(r.values,n,t)}else if(u>=r.times[a]){const n=a*h+e,t=n+h-e;o=ei(r.values,n,t)}else{const n=r.createInterpolant(),t=e,i=h-e;n.evaluate(u);o=ei(n.resultBuffer,t,i)}if(s==="quaternion"){const n=(new wt).fromArray(o).normalize().conjugate();n.toArray(o)}const v=f.times.length;for(let n=0;n<v;++n){const t=n*l+c;if(s==="quaternion")wt.multiplyQuaternionsFlat(f.values,t,o,0,f.values,t);else{const n=l-c*2;for(let i=0;i<n;++i)f.values[t+i]-=o[i]}}}}}return n.blendMode=vp,n}function wwt(n){switch(n.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return vh;case"vector":case"vector2":case"vector3":case"vector4":return yh;case"color":return pk;case"quaternion":return wo;case"bool":case"boolean":return vf;case"string":return yf}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+n);}function bwt(n){if(n.type===undefined)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=wwt(n.type);if(n.times===undefined){const t=[],i=[];vk(n.keys,t,i,"value");n.times=t;n.values=i}return t.parse!==undefined?t.parse(n):new t(n.name,n.times,n.values,n.interpolation)}function tot(){return(typeof performance=="undefined"?Date:performance).now()}function sot(n,t){return n.distance-t.distance}function ud(n,t,i,r){if(n.layers.test(t.layers)&&n.raycast(t,i),r===!0){const r=n.children;for(let n=0,u=r.length;n<u;n++)ud(r[n],t,i,!0)}}function aot(n){const t=[];n.isBone===!0&&t.push(n);for(let i=0;i<n.children.length;i++)t.push.apply(t,aot(n.children[i]));return t}function nt(n,t,i,r,u,f,e){vv.set(u,f,e).unproject(r);const o=t[n];if(o!==undefined){const n=i.getAttribute("position");for(let t=0,i=o.length;t<i;t++)n.setXYZ(o[t],vv.x,vv.y,vv.z)}}var dtt,gtt,ca,hk;const kh="153",od=0,wv=1,sd=2,bv=1,hd=2,wi=3,rr=0,at=1,bi=2,ur=0,pu=1,kv=2,dv=3,gv=4,cd=5,wu=100,ld=101,ad=102,ny=103,ty=104,vd=200,yd=201,pd=202,wd=203,iy=204,ry=205,bd=206,kd=207,dd=208,gd=209,ng=210,tg=0,ig=1,rg=2,dh=3,ug=4,fg=5,eg=6,og=7,bo=0,sg=1,hg=2,ki=0,cg=1,lg=2,ag=3,vg=4,yg=5,gh=300,kr=301,dr=302,ko=303,go=304,ne=306,ns=1e3,st=1001,ts=1002,d=1003,nc=1004,is=1005,g=1006,uy=1007,gr=1008,fr=1009,pg=1010,wg=1011,tc=1012,fy=1013,er=1014,di=1015,te=1016,ey=1017,oy=1018,nu=1020,bg=1021,kt=1023,kg=1024,dg=1025,tu=1026,bu=1027,gg=1028,sy=1029,nn=1030,hy=1031,cy=1033,ic=33776,rc=33777,uc=33778,fc=33779,ly=35840,ay=35841,vy=35842,yy=35843,tn=36196,py=37492,wy=37496,by=37808,ky=37809,dy=37810,gy=37811,np=37812,tp=37813,ip=37814,rp=37815,up=37816,fp=37817,ep=37818,op=37819,sp=37820,hp=37821,ec=36492,rn=36283,cp=36284,lp=36285,ap=36286,un=2200,fn=2201,en=2202,rs=2300,us=2301,oc=2302,ku=2400,du=2401,fs=2402,sc=2500,vp=2501,yp=3e3,iu=3001,on=3200,sn=3201,ru=0,hn=1,uu="",e="srgb",oi="srgb-linear",pp="display-p3",hc=7680,cn=519,ln=512,an=513,vn=514,yn=515,pn=516,wn=517,bn=518,kn=519,es=35044,wp="300 es",cc=1035,gi=2e3,os=2001;class or{addEventListener(n,t){this._listeners===undefined&&(this._listeners={});const i=this._listeners;i[n]===undefined&&(i[n]=[]);i[n].indexOf(t)===-1&&i[n].push(t)}hasEventListener(n,t){if(this._listeners===undefined)return!1;const i=this._listeners;return i[n]!==undefined&&i[n].indexOf(t)!==-1}removeEventListener(n,t){if(this._listeners!==undefined){const r=this._listeners,i=r[n];if(i!==undefined){const n=i.indexOf(t);n!==-1&&i.splice(n,1)}}}dispatchEvent(n){if(this._listeners!==undefined){const i=this._listeners,t=i[n.type];if(t!==undefined){n.target=this;const i=t.slice(0);for(let t=0,r=i.length;t<r;t++)i[t].call(this,n);n.target=null}}}}const ht=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let dn=1234567;const gu=Math.PI/180,ie=180/Math.PI;const cst={DEG2RAD:gu,RAD2DEG:ie,generateUUID:dt,clamp:b,euclideanModulo:bp,mapLinear:kot,inverseLerp:dot,lerp:ss,damp:got,pingpong:nst,smoothstep:tst,smootherstep:ist,randInt:rst,randFloat:ust,randFloatSpread:fst,seededRandom:est,degToRad:ost,radToDeg:sst,isPowerOfTwo:kp,ceilPowerOfTwo:gn,floorPowerOfTwo:lc,setQuaternionFromProperEuler:hst,normalize:s,denormalize:gt};class i{constructor(n=0,t=0){i.prototype.isVector2=!0;this.x=n;this.y=t}get width(){return this.x}set width(n){this.x=n}get height(){return this.y}set height(n){this.y=n}set(n,t){return this.x=n,this.y=t,this}setScalar(n){return this.x=n,this.y=n,this}setX(n){return this.x=n,this}setY(n){return this.y=n,this}setComponent(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+n);}return this}getComponent(n){switch(n){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+n);}}clone(){return new this.constructor(this.x,this.y)}copy(n){return this.x=n.x,this.y=n.y,this}add(n){return this.x+=n.x,this.y+=n.y,this}addScalar(n){return this.x+=n,this.y+=n,this}addVectors(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this}addScaledVector(n,t){return this.x+=n.x*t,this.y+=n.y*t,this}sub(n){return this.x-=n.x,this.y-=n.y,this}subScalar(n){return this.x-=n,this.y-=n,this}subVectors(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this}multiply(n){return this.x*=n.x,this.y*=n.y,this}multiplyScalar(n){return this.x*=n,this.y*=n,this}divide(n){return this.x/=n.x,this.y/=n.y,this}divideScalar(n){return this.multiplyScalar(1/n)}applyMatrix3(n){const i=this.x,r=this.y,t=n.elements;return this.x=t[0]*i+t[3]*r+t[6],this.y=t[1]*i+t[4]*r+t[7],this}min(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this}max(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this}clamp(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this}clampScalar(n,t){return this.x=Math.max(n,Math.min(t,this.x)),this.y=Math.max(n,Math.min(t,this.y)),this}clampLength(n,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(n,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(n){return this.x*n.x+this.y*n.y}cross(n){return this.x*n.y-this.y*n.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(n){const t=Math.sqrt(this.lengthSq()*n.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(n)/t;return Math.acos(b(i,-1,1))}distanceTo(n){return Math.sqrt(this.distanceToSquared(n))}distanceToSquared(n){const t=this.x-n.x,i=this.y-n.y;return t*t+i*i}manhattanDistanceTo(n){return Math.abs(this.x-n.x)+Math.abs(this.y-n.y)}setLength(n){return this.normalize().multiplyScalar(n)}lerp(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this}lerpVectors(n,t,i){return this.x=n.x+(t.x-n.x)*i,this.y=n.y+(t.y-n.y)*i,this}equals(n){return n.x===this.x&&n.y===this.y}fromArray(n,t=0){return this.x=n[t],this.y=n[t+1],this}toArray(n=[],t=0){return n[t]=this.x,n[t+1]=this.y,n}fromBufferAttribute(n,t){return this.x=n.getX(t),this.y=n.getY(t),this}rotateAround(n,t){const i=Math.cos(t),r=Math.sin(t),u=this.x-n.x,f=this.y-n.y;return this.x=u*i-f*r+n.x,this.y=u*r+f*i+n.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x;yield this.y}}class c{constructor(n,t,i,r,u,f,e,o,s){c.prototype.isMatrix3=!0;this.elements=[1,0,0,0,1,0,0,0,1];n!==undefined&&this.set(n,t,i,r,u,f,e,o,s)}set(n,t,i,r,u,f,e,o,s){const h=this.elements;return h[0]=n,h[1]=r,h[2]=e,h[3]=t,h[4]=u,h[5]=o,h[6]=i,h[7]=f,h[8]=s,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(n){const t=this.elements,i=n.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(n,t,i){return n.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(n){const t=n.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(n){return this.multiplyMatrices(this,n)}premultiply(n){return this.multiplyMatrices(n,this)}multiplyMatrices(n,t){const i=n.elements,r=t.elements,u=this.elements,f=i[0],e=i[3],o=i[6],s=i[1],h=i[4],c=i[7],l=i[2],a=i[5],v=i[8],y=r[0],p=r[3],w=r[6],b=r[1],k=r[4],d=r[7],g=r[2],nt=r[5],tt=r[8];return u[0]=f*y+e*b+o*g,u[3]=f*p+e*k+o*nt,u[6]=f*w+e*d+o*tt,u[1]=s*y+h*b+c*g,u[4]=s*p+h*k+c*nt,u[7]=s*w+h*d+c*tt,u[2]=l*y+a*b+v*g,u[5]=l*p+a*k+v*nt,u[8]=l*w+a*d+v*tt,this}multiplyScalar(n){const t=this.elements;return t[0]*=n,t[3]*=n,t[6]*=n,t[1]*=n,t[4]*=n,t[7]*=n,t[2]*=n,t[5]*=n,t[8]*=n,this}determinant(){const n=this.elements,t=n[0],i=n[1],r=n[2],u=n[3],f=n[4],e=n[5],o=n[6],s=n[7],h=n[8];return t*f*h-t*e*s-i*u*h+i*e*o+r*u*s-r*f*o}invert(){const n=this.elements,i=n[0],r=n[1],u=n[2],f=n[3],e=n[4],o=n[5],s=n[6],h=n[7],c=n[8],l=c*e-o*h,a=o*s-c*f,v=h*f-e*s,y=i*l+r*a+u*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const t=1/y;return n[0]=l*t,n[1]=(u*h-c*r)*t,n[2]=(o*r-u*e)*t,n[3]=a*t,n[4]=(c*i-u*s)*t,n[5]=(u*f-o*i)*t,n[6]=v*t,n[7]=(r*s-h*i)*t,n[8]=(e*i-r*f)*t,this}transpose(){let t;const n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this}getNormalMatrix(n){return this.setFromMatrix4(n).invert().transpose()}transposeIntoArray(n){const t=this.elements;return n[0]=t[0],n[1]=t[3],n[2]=t[6],n[3]=t[1],n[4]=t[4],n[5]=t[7],n[6]=t[2],n[7]=t[5],n[8]=t[8],this}setUvTransform(n,t,i,r,u,f,e){const o=Math.cos(u),s=Math.sin(u);return this.set(i*o,i*s,-i*(o*f+s*e)+f+n,-r*s,r*o,-r*(-s*f+o*e)+e+t,0,0,1),this}scale(n,t){return this.premultiply(dp.makeScale(n,t)),this}rotate(n){return this.premultiply(dp.makeRotation(-n)),this}translate(n,t){return this.premultiply(dp.makeTranslation(n,t)),this}makeTranslation(n,t){return n.isVector2?this.set(1,0,n.x,0,1,n.y,0,0,1):this.set(1,0,n,0,1,t,0,0,1),this}makeRotation(n){const t=Math.cos(n),i=Math.sin(n);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(n,t){return this.set(n,0,0,0,t,0,0,0,1),this}equals(n){const t=this.elements,i=n.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(n,t=0){for(let i=0;i<9;i++)this.elements[i]=n[i+t];return this}toArray(n=[],t=0){const i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n}clone(){return(new this.constructor).fromArray(this.elements)}}const dp=new c;const lst={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};const ttt={};const ast=(new c).fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),vst=(new c).fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);const wst={[oi]:n=>n,[e]:n=>n.convertSRGBToLinear(),[pp]:yst},bst={[oi]:n=>n,[e]:n=>n.convertLinearToSRGB(),[pp]:pst},ui={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(n){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.");this.enabled=!n},get workingColorSpace(){return oi},set workingColorSpace(colorSpace){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(n,t,i){if(this.enabled===!1||t===i||!t||!i)return n;const r=wst[t],u=bst[i];if(r===undefined||u===undefined)throw new Error(`Unsupported color space conversion, "${t}" to "${i}".`);return u(r(n))},fromWorkingColorSpace:function(n,t){return this.convert(n,this.workingColorSpace,t)},toWorkingColorSpace:function(n,t){return this.convert(n,t,this.workingColorSpace)}};let fe;class nw{static getDataURL(n){if(/^data:/i.test(n.src)||typeof HTMLCanvasElement=="undefined")return n.src;let t;if(n instanceof HTMLCanvasElement)t=n;else{fe===undefined&&(fe=hs("canvas"));fe.width=n.width;fe.height=n.height;const i=fe.getContext("2d");n instanceof ImageData?i.putImageData(n,0,0):i.drawImage(n,0,0,n.width,n.height);t=fe}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",n),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(n){if(typeof HTMLImageElement!="undefined"&&n instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&n instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&n instanceof ImageBitmap){const t=hs("canvas");t.width=n.width;t.height=n.height;const i=t.getContext("2d");i.drawImage(n,0,0,n.width,n.height);const u=i.getImageData(0,0,n.width,n.height),r=u.data;for(let n=0;n<r.length;n++)r[n]=ue(r[n]/255)*255;return i.putImageData(u,0,0),t}if(n.data){const t=n.data.slice(0);for(let n=0;n<t.length;n++)t[n]=t instanceof Uint8Array||t instanceof Uint8ClampedArray?Math.floor(ue(t[n]/255)*255):ue(t[n]);return{data:t,width:n.width,height:n.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),n}}let kst=0;class nf{constructor(n=null){this.isSource=!0;Object.defineProperty(this,"id",{value:kst++});this.uuid=dt();this.data=n;this.version=0}set needsUpdate(n){n===!0&&this.version++}toJSON(n){const r=n===undefined||typeof n=="string";if(!r&&n.images[this.uuid]!==undefined)return n.images[this.uuid];const i={uuid:this.uuid,url:""},t=this.data;if(t!==null){let n;if(Array.isArray(t)){n=[];for(let i=0,r=t.length;i<r;i++)t[i].isDataTexture?n.push(tw(t[i].image)):n.push(tw(t[i]))}else n=tw(t);i.url=n}return r||(n.images[this.uuid]=i),i}}let dst=0;class tt extends or{constructor(n=tt.DEFAULT_IMAGE,t=tt.DEFAULT_MAPPING,r=st,u=st,f=g,o=gr,s=kt,h=fr,l=tt.DEFAULT_ANISOTROPY,a=uu){super();this.isTexture=!0;Object.defineProperty(this,"id",{value:dst++});this.uuid=dt();this.name="";this.source=new nf(n);this.mipmaps=[];this.mapping=t;this.channel=0;this.wrapS=r;this.wrapT=u;this.magFilter=f;this.minFilter=o;this.anisotropy=l;this.format=s;this.internalFormat=null;this.type=h;this.offset=new i(0,0);this.repeat=new i(1,1);this.center=new i(0,0);this.rotation=0;this.matrixAutoUpdate=!0;this.matrix=new c;this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;typeof a=="string"?this.colorSpace=a:(cs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=a===iu?e:uu);this.userData={};this.version=0;this.onUpdate=null;this.isRenderTargetTexture=!1;this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(n=null){this.source.data=n}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(n){return this.name=n.name,this.source=n.source,this.mipmaps=n.mipmaps.slice(0),this.mapping=n.mapping,this.channel=n.channel,this.wrapS=n.wrapS,this.wrapT=n.wrapT,this.magFilter=n.magFilter,this.minFilter=n.minFilter,this.anisotropy=n.anisotropy,this.format=n.format,this.internalFormat=n.internalFormat,this.type=n.type,this.offset.copy(n.offset),this.repeat.copy(n.repeat),this.center.copy(n.center),this.rotation=n.rotation,this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrix.copy(n.matrix),this.generateMipmaps=n.generateMipmaps,this.premultiplyAlpha=n.premultiplyAlpha,this.flipY=n.flipY,this.unpackAlignment=n.unpackAlignment,this.colorSpace=n.colorSpace,this.userData=JSON.parse(JSON.stringify(n.userData)),this.needsUpdate=!0,this}toJSON(n){const i=n===undefined||typeof n=="string";if(!i&&n.textures[this.uuid]!==undefined)return n.textures[this.uuid];const t={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(n).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(t.userData=this.userData),i||(n.textures[this.uuid]=t),t}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(n){if(this.mapping!==gh)return n;if(n.applyMatrix3(this.matrix),n.x<0||n.x>1)switch(this.wrapS){case ns:n.x=n.x-Math.floor(n.x);break;case st:n.x=n.x<0?0:1;break;case ts:n.x=Math.abs(Math.floor(n.x)%2)===1?Math.ceil(n.x)-n.x:n.x-Math.floor(n.x)}if(n.y<0||n.y>1)switch(this.wrapT){case ns:n.y=n.y-Math.floor(n.y);break;case st:n.y=n.y<0?0:1;break;case ts:n.y=Math.abs(Math.floor(n.y)%2)===1?Math.ceil(n.y)-n.y:n.y-Math.floor(n.y)}return this.flipY&&(n.y=1-n.y),n}set needsUpdate(n){n===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return cs("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===e?iu:yp}set encoding(n){cs("THREE.Texture: Property .encoding has been replaced by .colorSpace.");this.colorSpace=n===iu?e:uu}}tt.DEFAULT_IMAGE=null;tt.DEFAULT_MAPPING=gh;tt.DEFAULT_ANISOTROPY=1;class y{constructor(n=0,t=0,i=0,r=1){y.prototype.isVector4=!0;this.x=n;this.y=t;this.z=i;this.w=r}get width(){return this.z}set width(n){this.z=n}get height(){return this.w}set height(n){this.w=n}set(n,t,i,r){return this.x=n,this.y=t,this.z=i,this.w=r,this}setScalar(n){return this.x=n,this.y=n,this.z=n,this.w=n,this}setX(n){return this.x=n,this}setY(n){return this.y=n,this}setZ(n){return this.z=n,this}setW(n){return this.w=n,this}setComponent(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+n);}return this}getComponent(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+n);}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(n){return this.x=n.x,this.y=n.y,this.z=n.z,this.w=n.w!==undefined?n.w:1,this}add(n){return this.x+=n.x,this.y+=n.y,this.z+=n.z,this.w+=n.w,this}addScalar(n){return this.x+=n,this.y+=n,this.z+=n,this.w+=n,this}addVectors(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this.w=n.w+t.w,this}addScaledVector(n,t){return this.x+=n.x*t,this.y+=n.y*t,this.z+=n.z*t,this.w+=n.w*t,this}sub(n){return this.x-=n.x,this.y-=n.y,this.z-=n.z,this.w-=n.w,this}subScalar(n){return this.x-=n,this.y-=n,this.z-=n,this.w-=n,this}subVectors(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this.w=n.w-t.w,this}multiply(n){return this.x*=n.x,this.y*=n.y,this.z*=n.z,this.w*=n.w,this}multiplyScalar(n){return this.x*=n,this.y*=n,this.z*=n,this.w*=n,this}applyMatrix4(n){const i=this.x,r=this.y,u=this.z,f=this.w,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u+t[12]*f,this.y=t[1]*i+t[5]*r+t[9]*u+t[13]*f,this.z=t[2]*i+t[6]*r+t[10]*u+t[14]*f,this.w=t[3]*i+t[7]*r+t[11]*u+t[15]*f,this}divideScalar(n){return this.multiplyScalar(1/n)}setAxisAngleFromQuaternion(n){this.w=2*Math.acos(n.w);const t=Math.sqrt(1-n.w*n.w);return t<.0001?(this.x=1,this.y=0,this.z=0):(this.x=n.x/t,this.y=n.y/t,this.z=n.z/t),this}setAxisAngleFromRotationMatrix(n){let b,t,i,r;const f=.01,v=.1,u=n.elements,y=u[0],e=u[4],o=u[8],s=u[1],p=u[5],h=u[9],c=u[2],l=u[6],w=u[10];if(Math.abs(e-s)<f&&Math.abs(o-c)<f&&Math.abs(h-l)<f){if(Math.abs(e+s)<v&&Math.abs(o+c)<v&&Math.abs(h+l)<v&&Math.abs(y+p+w-3)<v)return this.set(1,0,0,0),this;b=Math.PI;const n=(y+1)/2,u=(p+1)/2,a=(w+1)/2,k=(e+s)/4,d=(o+c)/4,g=(h+l)/4;return n>u&&n>a?n<f?(t=0,i=.707106781,r=.707106781):(t=Math.sqrt(n),i=k/t,r=d/t):u>a?u<f?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(u),t=k/i,r=g/i):a<f?(t=.707106781,i=.707106781,r=0):(r=Math.sqrt(a),t=d/r,i=g/r),this.set(t,i,r,b),this}let a=Math.sqrt((l-h)*(l-h)+(o-c)*(o-c)+(s-e)*(s-e));return Math.abs(a)<.001&&(a=1),this.x=(l-h)/a,this.y=(o-c)/a,this.z=(s-e)/a,this.w=Math.acos((y+p+w-1)/2),this}min(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this.w=Math.min(this.w,n.w),this}max(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this.w=Math.max(this.w,n.w),this}clamp(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this.z=Math.max(n.z,Math.min(t.z,this.z)),this.w=Math.max(n.w,Math.min(t.w,this.w)),this}clampScalar(n,t){return this.x=Math.max(n,Math.min(t,this.x)),this.y=Math.max(n,Math.min(t,this.y)),this.z=Math.max(n,Math.min(t,this.z)),this.w=Math.max(n,Math.min(t,this.w)),this}clampLength(n,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(n,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(n){return this.x*n.x+this.y*n.y+this.z*n.z+this.w*n.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(n){return this.normalize().multiplyScalar(n)}lerp(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this.w+=(n.w-this.w)*t,this}lerpVectors(n,t,i){return this.x=n.x+(t.x-n.x)*i,this.y=n.y+(t.y-n.y)*i,this.z=n.z+(t.z-n.z)*i,this.w=n.w+(t.w-n.w)*i,this}equals(n){return n.x===this.x&&n.y===this.y&&n.z===this.z&&n.w===this.w}fromArray(n,t=0){return this.x=n[t],this.y=n[t+1],this.z=n[t+2],this.w=n[t+3],this}toArray(n=[],t=0){return n[t]=this.x,n[t+1]=this.y,n[t+2]=this.z,n[t+3]=this.w,n}fromBufferAttribute(n,t){return this.x=n.getX(t),this.y=n.getY(t),this.z=n.getZ(t),this.w=n.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x;yield this.y;yield this.z;yield this.w}}class si extends or{constructor(n=1,t=1,i={}){super();this.isWebGLRenderTarget=!0;this.width=n;this.height=t;this.depth=1;this.scissor=new y(0,0,n,t);this.scissorTest=!1;this.viewport=new y(0,0,n,t);const r={width:n,height:t,depth:1};i.encoding!==undefined&&(cs("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===iu?e:uu);this.texture=new tt(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);this.texture.isRenderTargetTexture=!0;this.texture.flipY=!1;this.texture.generateMipmaps=i.generateMipmaps!==undefined?i.generateMipmaps:!1;this.texture.internalFormat=i.internalFormat!==undefined?i.internalFormat:null;this.texture.minFilter=i.minFilter!==undefined?i.minFilter:g;this.depthBuffer=i.depthBuffer!==undefined?i.depthBuffer:!0;this.stencilBuffer=i.stencilBuffer!==undefined?i.stencilBuffer:!1;this.depthTexture=i.depthTexture!==undefined?i.depthTexture:null;this.samples=i.samples!==undefined?i.samples:0}setSize(n,t,i=1){(this.width!==n||this.height!==t||this.depth!==i)&&(this.width=n,this.height=t,this.depth=i,this.texture.image.width=n,this.texture.image.height=t,this.texture.image.depth=i,this.dispose());this.viewport.set(0,0,n,t);this.scissor.set(0,0,n,t)}clone(){return(new this.constructor).copy(this)}copy(n){this.width=n.width;this.height=n.height;this.depth=n.depth;this.scissor.copy(n.scissor);this.scissorTest=n.scissorTest;this.viewport.copy(n.viewport);this.texture=n.texture.clone();this.texture.isRenderTargetTexture=!0;const t=Object.assign({},n.texture.image);return this.texture.source=new nf(t),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,n.depthTexture!==null&&(this.depthTexture=n.depthTexture.clone()),this.samples=n.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class ac extends tt{constructor(n=null,t=1,i=1,r=1){super(null);this.isDataArrayTexture=!0;this.image={data:n,width:t,height:i,depth:r};this.magFilter=d;this.minFilter=d;this.wrapR=st;this.generateMipmaps=!1;this.flipY=!1;this.unpackAlignment=1}}class gst extends si{constructor(n=1,t=1,i=1){super(n,t);this.isWebGLArrayRenderTarget=!0;this.depth=i;this.texture=new ac(null,n,t,i);this.texture.isRenderTargetTexture=!0}}class iw extends tt{constructor(n=null,t=1,i=1,r=1){super(null);this.isData3DTexture=!0;this.image={data:n,width:t,height:i,depth:r};this.magFilter=d;this.minFilter=d;this.wrapR=st;this.generateMipmaps=!1;this.flipY=!1;this.unpackAlignment=1}}class nht extends si{constructor(n=1,t=1,i=1){super(n,t);this.isWebGL3DRenderTarget=!0;this.depth=i;this.texture=new iw(null,n,t,i);this.texture.isRenderTargetTexture=!0}}class tht extends si{constructor(n=1,t=1,i=1,r={}){super(n,t,r);this.isWebGLMultipleRenderTargets=!0;const u=this.texture;this.texture=[];for(let n=0;n<i;n++)this.texture[n]=u.clone(),this.texture[n].isRenderTargetTexture=!0}setSize(n,t,i=1){if(this.width!==n||this.height!==t||this.depth!==i){this.width=n;this.height=t;this.depth=i;for(let r=0,u=this.texture.length;r<u;r++)this.texture[r].image.width=n,this.texture[r].image.height=t,this.texture[r].image.depth=i;this.dispose()}return this.viewport.set(0,0,n,t),this.scissor.set(0,0,n,t),this}copy(n){this.dispose();this.width=n.width;this.height=n.height;this.depth=n.depth;this.scissor.copy(n.scissor);this.scissorTest=n.scissorTest;this.viewport.copy(n.viewport);this.depthBuffer=n.depthBuffer;this.stencilBuffer=n.stencilBuffer;n.depthTexture!==null&&(this.depthTexture=n.depthTexture.clone());this.texture.length=0;for(let t=0,i=n.texture.length;t<i;t++)this.texture[t]=n.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class wt{constructor(n=0,t=0,i=0,r=1){this.isQuaternion=!0;this._x=n;this._y=t;this._z=i;this._w=r}static slerpFlat(n,t,i,r,u,f,e){let o=i[r+0],s=i[r+1],h=i[r+2],c=i[r+3];const l=u[f+0],a=u[f+1],v=u[f+2],y=u[f+3];if(e===0){n[t+0]=o;n[t+1]=s;n[t+2]=h;n[t+3]=c;return}if(e===1){n[t+0]=l;n[t+1]=a;n[t+2]=v;n[t+3]=y;return}if(c!==y||o!==l||s!==a||h!==v){let n=1-e;const t=o*l+s*a+h*v+c*y,r=t>=0?1:-1,u=1-t*t;if(u>Number.EPSILON){const i=Math.sqrt(u),f=Math.atan2(i,t*r);n=Math.sin(n*f)/i;e=Math.sin(e*f)/i}const i=e*r;if(o=o*n+l*i,s=s*n+a*i,h=h*n+v*i,c=c*n+y*i,n===1-e){const n=1/Math.sqrt(o*o+s*s+h*h+c*c);o*=n;s*=n;h*=n;c*=n}}n[t]=o;n[t+1]=s;n[t+2]=h;n[t+3]=c}static multiplyQuaternionsFlat(n,t,i,r,u,f){const e=i[r],o=i[r+1],s=i[r+2],h=i[r+3],c=u[f],l=u[f+1],a=u[f+2],v=u[f+3];return n[t]=e*v+h*c+o*a-s*l,n[t+1]=o*v+h*l+s*c-e*a,n[t+2]=s*v+h*a+e*l-o*c,n[t+3]=h*v-e*c-o*l-s*a,n}get x(){return this._x}set x(n){this._x=n;this._onChangeCallback()}get y(){return this._y}set y(n){this._y=n;this._onChangeCallback()}get z(){return this._z}set z(n){this._z=n;this._onChangeCallback()}get w(){return this._w}set w(n){this._w=n;this._onChangeCallback()}set(n,t,i,r){return this._x=n,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(n){return this._x=n.x,this._y=n.y,this._z=n.z,this._w=n.w,this._onChangeCallback(),this}setFromEuler(n,t){const c=n._x,l=n._y,a=n._z,v=n._order,s=Math.cos,h=Math.sin,i=s(c/2),r=s(l/2),u=s(a/2),f=h(c/2),e=h(l/2),o=h(a/2);switch(v){case"XYZ":this._x=f*r*u+i*e*o;this._y=i*e*u-f*r*o;this._z=i*r*o+f*e*u;this._w=i*r*u-f*e*o;break;case"YXZ":this._x=f*r*u+i*e*o;this._y=i*e*u-f*r*o;this._z=i*r*o-f*e*u;this._w=i*r*u+f*e*o;break;case"ZXY":this._x=f*r*u-i*e*o;this._y=i*e*u+f*r*o;this._z=i*r*o+f*e*u;this._w=i*r*u-f*e*o;break;case"ZYX":this._x=f*r*u-i*e*o;this._y=i*e*u+f*r*o;this._z=i*r*o-f*e*u;this._w=i*r*u+f*e*o;break;case"YZX":this._x=f*r*u+i*e*o;this._y=i*e*u+f*r*o;this._z=i*r*o-f*e*u;this._w=i*r*u-f*e*o;break;case"XZY":this._x=f*r*u-i*e*o;this._y=i*e*u-f*r*o;this._z=i*r*o+f*e*u;this._w=i*r*u+f*e*o;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+v)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(n,t){const r=t/2,i=Math.sin(r);return this._x=n.x*i,this._y=n.y*i,this._z=n.z*i,this._w=Math.cos(r),this._onChangeCallback(),this}setFromRotationMatrix(n){const t=n.elements,i=t[0],f=t[4],e=t[8],o=t[1],r=t[5],s=t[9],h=t[2],c=t[6],u=t[10],l=i+r+u;if(l>0){const n=.5/Math.sqrt(l+1);this._w=.25/n;this._x=(c-s)*n;this._y=(e-h)*n;this._z=(o-f)*n}else if(i>r&&i>u){const n=2*Math.sqrt(1+i-r-u);this._w=(c-s)/n;this._x=.25*n;this._y=(f+o)/n;this._z=(e+h)/n}else if(r>u){const n=2*Math.sqrt(1+r-i-u);this._w=(e-h)/n;this._x=(f+o)/n;this._y=.25*n;this._z=(s+c)/n}else{const n=2*Math.sqrt(1+u-i-r);this._w=(o-f)/n;this._x=(e+h)/n;this._y=(s+c)/n;this._z=.25*n}return this._onChangeCallback(),this}setFromUnitVectors(n,t){let i=n.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(n.x)>Math.abs(n.z)?(this._x=-n.y,this._y=n.x,this._z=0,this._w=i):(this._x=0,this._y=-n.z,this._z=n.y,this._w=i)):(this._x=n.y*t.z-n.z*t.y,this._y=n.z*t.x-n.x*t.z,this._z=n.x*t.y-n.y*t.x,this._w=i),this.normalize()}angleTo(n){return 2*Math.acos(Math.abs(b(this.dot(n),-1,1)))}rotateTowards(n,t){const i=this.angleTo(n);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(n,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(n){return this._x*n._x+this._y*n._y+this._z*n._z+this._w*n._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let n=this.length();return n===0?(this._x=0,this._y=0,this._z=0,this._w=1):(n=1/n,this._x=this._x*n,this._y=this._y*n,this._z=this._z*n,this._w=this._w*n),this._onChangeCallback(),this}multiply(n){return this.multiplyQuaternions(this,n)}premultiply(n){return this.multiplyQuaternions(n,this)}multiplyQuaternions(n,t){const i=n._x,r=n._y,u=n._z,f=n._w,e=t._x,o=t._y,s=t._z,h=t._w;return this._x=i*h+f*e+r*s-u*o,this._y=r*h+f*o+u*e-i*s,this._z=u*h+f*s+i*o-r*e,this._w=f*h-i*e-r*o-u*s,this._onChangeCallback(),this}slerp(n,t){if(t===0)return this;if(t===1)return this.copy(n);const r=this._x,u=this._y,f=this._z,e=this._w;let i=e*n._w+r*n._x+u*n._y+f*n._z;if(i<0?(this._w=-n._w,this._x=-n._x,this._y=-n._y,this._z=-n._z,i=-i):this.copy(n),i>=1)return this._w=e,this._x=r,this._y=u,this._z=f,this;const c=1-i*i;if(c<=Number.EPSILON){const n=1-t;return this._w=n*e+t*this._w,this._x=n*r+t*this._x,this._y=n*u+t*this._y,this._z=n*f+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(c),l=Math.atan2(h,i),o=Math.sin((1-t)*l)/h,s=Math.sin(t*l)/h;return this._w=e*o+this._w*s,this._x=r*o+this._x*s,this._y=u*o+this._y*s,this._z=f*o+this._z*s,this._onChangeCallback(),this}slerpQuaternions(n,t,i){return this.copy(n).slerp(t,i)}random(){const n=Math.random(),t=Math.sqrt(1-n),i=Math.sqrt(n),r=2*Math.PI*Math.random(),u=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(u),i*Math.cos(u),t*Math.sin(r))}equals(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._w===this._w}fromArray(n,t=0){return this._x=n[t],this._y=n[t+1],this._z=n[t+2],this._w=n[t+3],this._onChangeCallback(),this}toArray(n=[],t=0){return n[t]=this._x,n[t+1]=this._y,n[t+2]=this._z,n[t+3]=this._w,n}fromBufferAttribute(n,t){return this._x=n.getX(t),this._y=n.getY(t),this._z=n.getZ(t),this._w=n.getW(t),this}toJSON(){return this.toArray()}_onChange(n){return this._onChangeCallback=n,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x;yield this._y;yield this._z;yield this._w}}class t{constructor(n=0,i=0,r=0){t.prototype.isVector3=!0;this.x=n;this.y=i;this.z=r}set(n,t,i){return i===undefined&&(i=this.z),this.x=n,this.y=t,this.z=i,this}setScalar(n){return this.x=n,this.y=n,this.z=n,this}setX(n){return this.x=n,this}setY(n){return this.y=n,this}setZ(n){return this.z=n,this}setComponent(n,t){switch(n){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+n);}return this}getComponent(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+n);}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(n){return this.x=n.x,this.y=n.y,this.z=n.z,this}add(n){return this.x+=n.x,this.y+=n.y,this.z+=n.z,this}addScalar(n){return this.x+=n,this.y+=n,this.z+=n,this}addVectors(n,t){return this.x=n.x+t.x,this.y=n.y+t.y,this.z=n.z+t.z,this}addScaledVector(n,t){return this.x+=n.x*t,this.y+=n.y*t,this.z+=n.z*t,this}sub(n){return this.x-=n.x,this.y-=n.y,this.z-=n.z,this}subScalar(n){return this.x-=n,this.y-=n,this.z-=n,this}subVectors(n,t){return this.x=n.x-t.x,this.y=n.y-t.y,this.z=n.z-t.z,this}multiply(n){return this.x*=n.x,this.y*=n.y,this.z*=n.z,this}multiplyScalar(n){return this.x*=n,this.y*=n,this.z*=n,this}multiplyVectors(n,t){return this.x=n.x*t.x,this.y=n.y*t.y,this.z=n.z*t.z,this}applyEuler(n){return this.applyQuaternion(itt.setFromEuler(n))}applyAxisAngle(n,t){return this.applyQuaternion(itt.setFromAxisAngle(n,t))}applyMatrix3(n){const i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[3]*r+t[6]*u,this.y=t[1]*i+t[4]*r+t[7]*u,this.z=t[2]*i+t[5]*r+t[8]*u,this}applyNormalMatrix(n){return this.applyMatrix3(n).normalize()}applyMatrix4(n){const i=this.x,r=this.y,u=this.z,t=n.elements,f=1/(t[3]*i+t[7]*r+t[11]*u+t[15]);return this.x=(t[0]*i+t[4]*r+t[8]*u+t[12])*f,this.y=(t[1]*i+t[5]*r+t[9]*u+t[13])*f,this.z=(t[2]*i+t[6]*r+t[10]*u+t[14])*f,this}applyQuaternion(n){const f=this.x,e=this.y,o=this.z,t=n.x,i=n.y,r=n.z,u=n.w,s=u*f+i*o-r*e,h=u*e+r*f-t*o,c=u*o+t*e-i*f,l=-t*f-i*e-r*o;return this.x=s*u+l*-t+h*-r-c*-i,this.y=h*u+l*-i+c*-t-s*-r,this.z=c*u+l*-r+s*-i-h*-t,this}project(n){return this.applyMatrix4(n.matrixWorldInverse).applyMatrix4(n.projectionMatrix)}unproject(n){return this.applyMatrix4(n.projectionMatrixInverse).applyMatrix4(n.matrixWorld)}transformDirection(n){const i=this.x,r=this.y,u=this.z,t=n.elements;return this.x=t[0]*i+t[4]*r+t[8]*u,this.y=t[1]*i+t[5]*r+t[9]*u,this.z=t[2]*i+t[6]*r+t[10]*u,this.normalize()}divide(n){return this.x/=n.x,this.y/=n.y,this.z/=n.z,this}divideScalar(n){return this.multiplyScalar(1/n)}min(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this}max(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this}clamp(n,t){return this.x=Math.max(n.x,Math.min(t.x,this.x)),this.y=Math.max(n.y,Math.min(t.y,this.y)),this.z=Math.max(n.z,Math.min(t.z,this.z)),this}clampScalar(n,t){return this.x=Math.max(n,Math.min(t,this.x)),this.y=Math.max(n,Math.min(t,this.y)),this.z=Math.max(n,Math.min(t,this.z)),this}clampLength(n,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(n,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(n){return this.x*n.x+this.y*n.y+this.z*n.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(n){return this.normalize().multiplyScalar(n)}lerp(n,t){return this.x+=(n.x-this.x)*t,this.y+=(n.y-this.y)*t,this.z+=(n.z-this.z)*t,this}lerpVectors(n,t,i){return this.x=n.x+(t.x-n.x)*i,this.y=n.y+(t.y-n.y)*i,this.z=n.z+(t.z-n.z)*i,this}cross(n){return this.crossVectors(this,n)}crossVectors(n,t){const i=n.x,r=n.y,u=n.z,f=t.x,e=t.y,o=t.z;return this.x=r*o-u*e,this.y=u*f-i*o,this.z=i*e-r*f,this}projectOnVector(n){const t=n.lengthSq();if(t===0)return this.set(0,0,0);const i=n.dot(this)/t;return this.copy(n).multiplyScalar(i)}projectOnPlane(n){return rw.copy(this).projectOnVector(n),this.sub(rw)}reflect(n){return this.sub(rw.copy(n).multiplyScalar(2*this.dot(n)))}angleTo(n){const t=Math.sqrt(this.lengthSq()*n.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(n)/t;return Math.acos(b(i,-1,1))}distanceTo(n){return Math.sqrt(this.distanceToSquared(n))}distanceToSquared(n){const t=this.x-n.x,i=this.y-n.y,r=this.z-n.z;return t*t+i*i+r*r}manhattanDistanceTo(n){return Math.abs(this.x-n.x)+Math.abs(this.y-n.y)+Math.abs(this.z-n.z)}setFromSpherical(n){return this.setFromSphericalCoords(n.radius,n.phi,n.theta)}setFromSphericalCoords(n,t,i){const r=Math.sin(t)*n;return this.x=r*Math.sin(i),this.y=Math.cos(t)*n,this.z=r*Math.cos(i),this}setFromCylindrical(n){return this.setFromCylindricalCoords(n.radius,n.theta,n.y)}setFromCylindricalCoords(n,t,i){return this.x=n*Math.sin(t),this.y=i,this.z=n*Math.cos(t),this}setFromMatrixPosition(n){const t=n.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(n){const t=this.setFromMatrixColumn(n,0).length(),i=this.setFromMatrixColumn(n,1).length(),r=this.setFromMatrixColumn(n,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(n,t){return this.fromArray(n.elements,t*4)}setFromMatrix3Column(n,t){return this.fromArray(n.elements,t*3)}setFromEuler(n){return this.x=n._x,this.y=n._y,this.z=n._z,this}setFromColor(n){return this.x=n.r,this.y=n.g,this.z=n.b,this}equals(n){return n.x===this.x&&n.y===this.y&&n.z===this.z}fromArray(n,t=0){return this.x=n[t],this.y=n[t+1],this.z=n[t+2],this}toArray(n=[],t=0){return n[t]=this.x,n[t+1]=this.y,n[t+2]=this.z,n}fromBufferAttribute(n,t){return this.x=n.getX(t),this.y=n.getY(t),this.z=n.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const n=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-n**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=n,this}*[Symbol.iterator](){yield this.x;yield this.y;yield this.z}}const rw=new t,itt=new wt;class nr{constructor(n=new t(+ Infinity,+ Infinity,+ Infinity),i=new t(- Infinity,- Infinity,- Infinity)){this.isBox3=!0;this.min=n;this.max=i}set(n,t){return this.min.copy(n),this.max.copy(t),this}setFromArray(n){this.makeEmpty();for(let t=0,i=n.length;t<i;t+=3)this.expandByPoint(hr.fromArray(n,t));return this}setFromBufferAttribute(n){this.makeEmpty();for(let t=0,i=n.count;t<i;t++)this.expandByPoint(hr.fromBufferAttribute(n,t));return this}setFromPoints(n){this.makeEmpty();for(let t=0,i=n.length;t<i;t++)this.expandByPoint(n[t]);return this}setFromCenterAndSize(n,t){const i=hr.copy(t).multiplyScalar(.5);return this.min.copy(n).sub(i),this.max.copy(n).add(i),this}setFromObject(n,t=false){return this.makeEmpty(),this.expandByObject(n,t)}clone(){return(new this.constructor).copy(this)}copy(n){return this.min.copy(n.min),this.max.copy(n.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=+ Infinity,this.max.x=this.max.y=this.max.z=- Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(n){return this.isEmpty()?n.set(0,0,0):n.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(n){return this.isEmpty()?n.set(0,0,0):n.subVectors(this.max,this.min)}expandByPoint(n){return this.min.min(n),this.max.max(n),this}expandByVector(n){return this.min.sub(n),this.max.add(n),this}expandByScalar(n){return this.min.addScalar(-n),this.max.addScalar(n),this}expandByObject(n,t=false){if(n.updateWorldMatrix(!1,!1),n.boundingBox!==undefined)n.boundingBox===null&&n.computeBoundingBox(),ee.copy(n.boundingBox),ee.applyMatrix4(n.matrixWorld),this.union(ee);else{const i=n.geometry;if(i!==undefined)if(t&&i.attributes!==undefined&&i.attributes.position!==undefined){const t=i.attributes.position;for(let i=0,r=t.count;i<r;i++)hr.fromBufferAttribute(t,i).applyMatrix4(n.matrixWorld),this.expandByPoint(hr)}else i.boundingBox===null&&i.computeBoundingBox(),ee.copy(i.boundingBox),ee.applyMatrix4(n.matrixWorld),this.union(ee)}const i=n.children;for(let n=0,r=i.length;n<r;n++)this.expandByObject(i[n],t);return this}containsPoint(n){return n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y||n.z<this.min.z||n.z>this.max.z?!1:!0}containsBox(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y&&this.min.z<=n.min.z&&n.max.z<=this.max.z}getParameter(n,t){return t.set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y),(n.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(n){return n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y||n.max.z<this.min.z||n.min.z>this.max.z?!1:!0}intersectsSphere(n){return this.clampPoint(n.center,hr),hr.distanceToSquared(n.center)<=n.radius*n.radius}intersectsPlane(n){let t,i;return n.normal.x>0?(t=n.normal.x*this.min.x,i=n.normal.x*this.max.x):(t=n.normal.x*this.max.x,i=n.normal.x*this.min.x),n.normal.y>0?(t+=n.normal.y*this.min.y,i+=n.normal.y*this.max.y):(t+=n.normal.y*this.max.y,i+=n.normal.y*this.min.y),n.normal.z>0?(t+=n.normal.z*this.min.z,i+=n.normal.z*this.max.z):(t+=n.normal.z*this.max.z,i+=n.normal.z*this.min.z),t<=-n.constant&&i>=-n.constant}intersectsTriangle(n){if(this.isEmpty())return!1;this.getCenter(ls);vc.subVectors(this.max,ls);oe.subVectors(n.a,ls);se.subVectors(n.b,ls);he.subVectors(n.c,ls);fu.subVectors(se,oe);eu.subVectors(he,se);tf.subVectors(oe,he);let t=[0,-fu.z,fu.y,0,-eu.z,eu.y,0,-tf.z,tf.y,fu.z,0,-fu.x,eu.z,0,-eu.x,tf.z,0,-tf.x,-fu.y,fu.x,0,-eu.y,eu.x,0,-tf.y,tf.x,0];return uw(t,oe,se,he,vc)?(t=[1,0,0,0,1,0,0,0,1],!uw(t,oe,se,he,vc))?!1:(yc.crossVectors(fu,eu),t=[yc.x,yc.y,yc.z],uw(t,oe,se,he,vc)):!1}clampPoint(n,t){return t.copy(n).clamp(this.min,this.max)}distanceToPoint(n){return this.clampPoint(n,hr).distanceTo(n)}getBoundingSphere(n){return this.isEmpty()?n.makeEmpty():(this.getCenter(n.center),n.radius=this.getSize(hr).length()*.5),n}intersect(n){return this.min.max(n.min),this.max.min(n.max),this.isEmpty()&&this.makeEmpty(),this}union(n){return this.min.min(n.min),this.max.max(n.max),this}applyMatrix4(n){return this.isEmpty()?this:(sr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(n),sr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(n),sr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(n),sr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(n),sr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(n),sr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(n),sr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(n),sr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(n),this.setFromPoints(sr),this)}translate(n){return this.min.add(n),this.max.add(n),this}equals(n){return n.min.equals(this.min)&&n.max.equals(this.max)}}const sr=[new t,new t,new t,new t,new t,new t,new t,new t],hr=new t,ee=new nr,oe=new t,se=new t,he=new t,fu=new t,eu=new t,tf=new t,ls=new t,vc=new t,yc=new t,rf=new t;const iht=new nr,as=new t,fw=new t;class hi{constructor(n=new t,i=-1){this.center=n;this.radius=i}set(n,t){return this.center.copy(n),this.radius=t,this}setFromPoints(n,t){const i=this.center;t!==undefined?i.copy(t):iht.setFromPoints(n).getCenter(i);let r=0;for(let t=0,u=n.length;t<u;t++)r=Math.max(r,i.distanceToSquared(n[t]));return this.radius=Math.sqrt(r),this}copy(n){return this.center.copy(n.center),this.radius=n.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(n){return n.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(n){return n.distanceTo(this.center)-this.radius}intersectsSphere(n){const t=this.radius+n.radius;return n.center.distanceToSquared(this.center)<=t*t}intersectsBox(n){return n.intersectsSphere(this)}intersectsPlane(n){return Math.abs(n.distanceToPoint(this.center))<=this.radius}clampPoint(n,t){const i=this.center.distanceToSquared(n);return t.copy(n),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(n){return this.isEmpty()?(n.makeEmpty(),n):(n.set(this.center,this.center),n.expandByScalar(this.radius),n)}applyMatrix4(n){return this.center.applyMatrix4(n),this.radius=this.radius*n.getMaxScaleOnAxis(),this}translate(n){return this.center.add(n),this}expandByPoint(n){if(this.isEmpty())return this.center.copy(n),this.radius=0,this;as.subVectors(n,this.center);const t=as.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(as,i/n);this.radius+=i}return this}union(n){return n.isEmpty()?this:this.isEmpty()?(this.copy(n),this):(this.center.equals(n.center)===!0?this.radius=Math.max(this.radius,n.radius):(fw.subVectors(n.center,this.center).setLength(n.radius),this.expandByPoint(as.copy(n.center).add(fw)),this.expandByPoint(as.copy(n.center).sub(fw))),this)}equals(n){return n.center.equals(this.center)&&n.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const cr=new t,ew=new t,pc=new t,ou=new t,ow=new t,wc=new t,sw=new t;class ce{constructor(n=new t,i=new t(0,0,-1)){this.origin=n;this.direction=i}set(n,t){return this.origin.copy(n),this.direction.copy(t),this}copy(n){return this.origin.copy(n.origin),this.direction.copy(n.direction),this}at(n,t){return t.copy(this.origin).addScaledVector(this.direction,n)}lookAt(n){return this.direction.copy(n).sub(this.origin).normalize(),this}recast(n){return this.origin.copy(this.at(n,cr)),this}closestPointToPoint(n,t){t.subVectors(n,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(n){return Math.sqrt(this.distanceSqToPoint(n))}distanceSqToPoint(n){const t=cr.subVectors(n,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(n):(cr.copy(this.origin).addScaledVector(this.direction,t),cr.distanceToSquared(n))}distanceSqToSegment(n,t,i,r){ew.copy(n).add(t).multiplyScalar(.5);pc.copy(t).sub(n).normalize();ou.copy(this.origin).sub(ew);const e=n.distanceTo(t)*.5,o=-this.direction.dot(pc),h=ou.dot(this.direction),s=-ou.dot(pc),l=ou.lengthSq(),v=Math.abs(1-o*o);let f,u,c,a;if(v>0)if(f=o*s-h,u=o*h-s,a=e*v,f>=0)if(u>=-a)if(u<=a){const n=1/v;f*=n;u*=n;c=f*(f+o*u+2*h)+u*(o*f+u+2*s)+l}else u=e,f=Math.max(0,-(o*u+h)),c=-f*f+u*(u+2*s)+l;else u=-e,f=Math.max(0,-(o*u+h)),c=-f*f+u*(u+2*s)+l;else u<=-a?(f=Math.max(0,-(-o*e+h)),u=f>0?-e:Math.min(Math.max(-e,-s),e),c=-f*f+u*(u+2*s)+l):u<=a?(f=0,u=Math.min(Math.max(-e,-s),e),c=u*(u+2*s)+l):(f=Math.max(0,-(o*e+h)),u=f>0?e:Math.min(Math.max(-e,-s),e),c=-f*f+u*(u+2*s)+l);else u=o>0?-e:e,f=Math.max(0,-(o*u+h)),c=-f*f+u*(u+2*s)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,f),r&&r.copy(ew).addScaledVector(pc,u),c}intersectSphere(n,t){cr.subVectors(n.center,this.origin);const i=cr.dot(this.direction),r=cr.dot(cr)-i*i,u=n.radius*n.radius;if(r>u)return null;const f=Math.sqrt(u-r),e=i-f,o=i+f;return o<0?null:e<0?this.at(o,t):this.at(e,t)}intersectsSphere(n){return this.distanceSqToPoint(n.center)<=n.radius*n.radius}distanceToPlane(n){const t=n.normal.dot(this.direction);if(t===0)return n.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(n.normal)+n.constant)/t;return i>=0?i:null}intersectPlane(n,t){const i=this.distanceToPlane(n);return i===null?null:this.at(i,t)}intersectsPlane(n){const t=n.distanceToPoint(this.origin);if(t===0)return!0;const i=n.normal.dot(this.direction);return i*t<0?!0:!1}intersectBox(n,t){let i,r,f,e,o,s;const h=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,u=this.origin;return(h>=0?(i=(n.min.x-u.x)*h,r=(n.max.x-u.x)*h):(i=(n.max.x-u.x)*h,r=(n.min.x-u.x)*h),c>=0?(f=(n.min.y-u.y)*c,e=(n.max.y-u.y)*c):(f=(n.max.y-u.y)*c,e=(n.min.y-u.y)*c),i>e||f>r)?null:((f>i||isNaN(i))&&(i=f),(e<r||isNaN(r))&&(r=e),l>=0?(o=(n.min.z-u.z)*l,s=(n.max.z-u.z)*l):(o=(n.max.z-u.z)*l,s=(n.min.z-u.z)*l),i>s||o>r)?null:((o>i||i!==i)&&(i=o),(s<r||r!==r)&&(r=s),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(n){return this.intersectBox(n,cr)!==null}intersectTriangle(n,t,i,r,u){ow.subVectors(t,n);wc.subVectors(i,n);sw.crossVectors(ow,wc);let f=this.direction.dot(sw),e;if(f>0){if(r)return null;e=1}else if(f<0)e=-1,f=-f;else return null;ou.subVectors(this.origin,n);const o=e*this.direction.dot(wc.crossVectors(ou,wc));if(o<0)return null;const s=e*this.direction.dot(ow.cross(ou));if(s<0||o+s>f)return null;const h=-e*ou.dot(sw);return h<0?null:this.at(h/f,u)}applyMatrix4(n){return this.origin.applyMatrix4(n),this.direction.transformDirection(n),this}equals(n){return n.origin.equals(this.origin)&&n.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class o{constructor(n,t,i,r,u,f,e,s,h,c,l,a,v,y,p,w){o.prototype.isMatrix4=!0;this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];n!==undefined&&this.set(n,t,i,r,u,f,e,s,h,c,l,a,v,y,p,w)}set(n,t,i,r,u,f,e,o,s,h,c,l,a,v,y,p){const w=this.elements;return w[0]=n,w[4]=t,w[8]=i,w[12]=r,w[1]=u,w[5]=f,w[9]=e,w[13]=o,w[2]=s,w[6]=h,w[10]=c,w[14]=l,w[3]=a,w[7]=v,w[11]=y,w[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new o).fromArray(this.elements)}copy(n){const t=this.elements,i=n.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(n){const t=this.elements,i=n.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(n){const t=n.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(n,t,i){return n.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(n,t,i){return this.set(n.x,t.x,i.x,0,n.y,t.y,i.y,0,n.z,t.z,i.z,0,0,0,0,1),this}extractRotation(n){const t=this.elements,i=n.elements,r=1/le.setFromMatrixColumn(n,0).length(),u=1/le.setFromMatrixColumn(n,1).length(),f=1/le.setFromMatrixColumn(n,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*u,t[5]=i[5]*u,t[6]=i[6]*u,t[7]=0,t[8]=i[8]*f,t[9]=i[9]*f,t[10]=i[10]*f,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(n){const t=this.elements,s=n.x,h=n.y,c=n.z,f=Math.cos(s),i=Math.sin(s),e=Math.cos(h),r=Math.sin(h),o=Math.cos(c),u=Math.sin(c);if(n.order==="XYZ"){const n=f*o,s=f*u,h=i*o,c=i*u;t[0]=e*o;t[4]=-e*u;t[8]=r;t[1]=s+h*r;t[5]=n-c*r;t[9]=-i*e;t[2]=c-n*r;t[6]=h+s*r;t[10]=f*e}else if(n.order==="YXZ"){const n=e*o,s=e*u,h=r*o,c=r*u;t[0]=n+c*i;t[4]=h*i-s;t[8]=f*r;t[1]=f*u;t[5]=f*o;t[9]=-i;t[2]=s*i-h;t[6]=c+n*i;t[10]=f*e}else if(n.order==="ZXY"){const n=e*o,s=e*u,h=r*o,c=r*u;t[0]=n-c*i;t[4]=-f*u;t[8]=h+s*i;t[1]=s+h*i;t[5]=f*o;t[9]=c-n*i;t[2]=-f*r;t[6]=i;t[10]=f*e}else if(n.order==="ZYX"){const n=f*o,s=f*u,h=i*o,c=i*u;t[0]=e*o;t[4]=h*r-s;t[8]=n*r+c;t[1]=e*u;t[5]=c*r+n;t[9]=s*r-h;t[2]=-r;t[6]=i*e;t[10]=f*e}else if(n.order==="YZX"){const n=f*e,s=f*r,h=i*e,c=i*r;t[0]=e*o;t[4]=c-n*u;t[8]=h*u+s;t[1]=u;t[5]=f*o;t[9]=-i*o;t[2]=-r*o;t[6]=s*u+h;t[10]=n-c*u}else if(n.order==="XZY"){const n=f*e,s=f*r,h=i*e,c=i*r;t[0]=e*o;t[4]=-u;t[8]=r*o;t[1]=n*u+c;t[5]=f*o;t[9]=s*u-h;t[2]=h*u-s;t[6]=i*o;t[10]=c*u+n}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(n){return this.compose(rht,n,uht)}lookAt(n,t,i){const r=this.elements;return ni.subVectors(n,t),ni.lengthSq()===0&&(ni.z=1),ni.normalize(),su.crossVectors(i,ni),su.lengthSq()===0&&(Math.abs(i.z)===1?ni.x+=.0001:ni.z+=.0001,ni.normalize(),su.crossVectors(i,ni)),su.normalize(),bc.crossVectors(ni,su),r[0]=su.x,r[4]=bc.x,r[8]=ni.x,r[1]=su.y,r[5]=bc.y,r[9]=ni.y,r[2]=su.z,r[6]=bc.z,r[10]=ni.z,this}multiply(n){return this.multiplyMatrices(this,n)}premultiply(n){return this.multiplyMatrices(n,this)}multiplyMatrices(n,t){const i=n.elements,r=t.elements,u=this.elements,f=i[0],e=i[4],o=i[8],s=i[12],h=i[1],c=i[5],l=i[9],a=i[13],v=i[2],y=i[6],p=i[10],w=i[14],b=i[3],k=i[7],d=i[11],g=i[15],nt=r[0],tt=r[4],it=r[8],rt=r[12],ut=r[1],ft=r[5],et=r[9],ot=r[13],st=r[2],ht=r[6],ct=r[10],lt=r[14],at=r[3],vt=r[7],yt=r[11],pt=r[15];return u[0]=f*nt+e*ut+o*st+s*at,u[4]=f*tt+e*ft+o*ht+s*vt,u[8]=f*it+e*et+o*ct+s*yt,u[12]=f*rt+e*ot+o*lt+s*pt,u[1]=h*nt+c*ut+l*st+a*at,u[5]=h*tt+c*ft+l*ht+a*vt,u[9]=h*it+c*et+l*ct+a*yt,u[13]=h*rt+c*ot+l*lt+a*pt,u[2]=v*nt+y*ut+p*st+w*at,u[6]=v*tt+y*ft+p*ht+w*vt,u[10]=v*it+y*et+p*ct+w*yt,u[14]=v*rt+y*ot+p*lt+w*pt,u[3]=b*nt+k*ut+d*st+g*at,u[7]=b*tt+k*ft+d*ht+g*vt,u[11]=b*it+k*et+d*ct+g*yt,u[15]=b*rt+k*ot+d*lt+g*pt,this}multiplyScalar(n){const t=this.elements;return t[0]*=n,t[4]*=n,t[8]*=n,t[12]*=n,t[1]*=n,t[5]*=n,t[9]*=n,t[13]*=n,t[2]*=n,t[6]*=n,t[10]*=n,t[14]*=n,t[3]*=n,t[7]*=n,t[11]*=n,t[15]*=n,this}determinant(){const n=this.elements,t=n[0],i=n[4],r=n[8],u=n[12],f=n[1],e=n[5],o=n[9],s=n[13],h=n[2],c=n[6],l=n[10],a=n[14],v=n[3],y=n[7],p=n[11],w=n[15];return v*(+u*o*c-r*s*c-u*e*l+i*s*l+r*e*a-i*o*a)+y*(+t*o*a-t*s*l+u*f*l-r*f*a+r*s*h-u*o*h)+p*(+t*s*c-t*e*a-u*f*c+i*f*a+u*e*h-i*s*h)+w*(-r*e*h-t*o*c+t*e*l+r*f*c-i*f*l+i*o*h)}transpose(){const n=this.elements;let t;return t=n[1],n[1]=n[4],n[4]=t,t=n[2],n[2]=n[8],n[8]=t,t=n[6],n[6]=n[9],n[9]=t,t=n[3],n[3]=n[12],n[12]=t,t=n[7],n[7]=n[13],n[13]=t,t=n[11],n[11]=n[14],n[14]=t,this}setPosition(n,t,i){const r=this.elements;return n.isVector3?(r[12]=n.x,r[13]=n.y,r[14]=n.z):(r[12]=n,r[13]=t,r[14]=i),this}invert(){const n=this.elements,t=n[0],i=n[1],r=n[2],u=n[3],f=n[4],e=n[5],o=n[6],s=n[7],h=n[8],c=n[9],l=n[10],a=n[11],v=n[12],y=n[13],p=n[14],w=n[15],k=c*p*s-y*l*s+y*o*a-e*p*a-c*o*w+e*l*w,d=v*l*s-h*p*s-v*o*a+f*p*a+h*o*w-f*l*w,g=h*y*s-v*c*s+v*e*a-f*y*a-h*e*w+f*c*w,nt=v*c*o-h*y*o-v*e*l+f*y*l+h*e*p-f*c*p,tt=t*k+i*d+r*g+u*nt;if(tt===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/tt;return n[0]=k*b,n[1]=(y*l*u-c*p*u-y*r*a+i*p*a+c*r*w-i*l*w)*b,n[2]=(e*p*u-y*o*u+y*r*s-i*p*s-e*r*w+i*o*w)*b,n[3]=(c*o*u-e*l*u-c*r*s+i*l*s+e*r*a-i*o*a)*b,n[4]=d*b,n[5]=(h*p*u-v*l*u+v*r*a-t*p*a-h*r*w+t*l*w)*b,n[6]=(v*o*u-f*p*u-v*r*s+t*p*s+f*r*w-t*o*w)*b,n[7]=(f*l*u-h*o*u+h*r*s-t*l*s-f*r*a+t*o*a)*b,n[8]=g*b,n[9]=(v*c*u-h*y*u-v*i*a+t*y*a+h*i*w-t*c*w)*b,n[10]=(f*y*u-v*e*u+v*i*s-t*y*s-f*i*w+t*e*w)*b,n[11]=(h*e*u-f*c*u-h*i*s+t*c*s+f*i*a-t*e*a)*b,n[12]=nt*b,n[13]=(h*y*r-v*c*r+v*i*l-t*y*l-h*i*p+t*c*p)*b,n[14]=(v*e*r-f*y*r-v*i*o+t*y*o+f*i*p-t*e*p)*b,n[15]=(f*c*r-h*e*r+h*i*o-t*c*o-f*i*l+t*e*l)*b,this}scale(n){const t=this.elements,i=n.x,r=n.y,u=n.z;return t[0]*=i,t[4]*=r,t[8]*=u,t[1]*=i,t[5]*=r,t[9]*=u,t[2]*=i,t[6]*=r,t[10]*=u,t[3]*=i,t[7]*=r,t[11]*=u,this}getMaxScaleOnAxis(){const n=this.elements,t=n[0]*n[0]+n[1]*n[1]+n[2]*n[2],i=n[4]*n[4]+n[5]*n[5]+n[6]*n[6],r=n[8]*n[8]+n[9]*n[9]+n[10]*n[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(n,t,i){return n.isVector3?this.set(1,0,0,n.x,0,1,0,n.y,0,0,1,n.z,0,0,0,1):this.set(1,0,0,n,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(n){const t=Math.cos(n),i=Math.sin(n);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(n){const t=Math.cos(n),i=Math.sin(n);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(n){const t=Math.cos(n),i=Math.sin(n);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(n,t){const e=Math.cos(t),r=Math.sin(t),s=1-e,o=n.x,u=n.y,i=n.z,f=s*o,h=s*u;return this.set(f*o+e,f*u-r*i,f*i+r*u,0,f*u+r*i,h*u+e,h*i-r*o,0,f*i-r*u,h*i+r*o,s*i*i+e,0,0,0,0,1),this}makeScale(n,t,i){return this.set(n,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(n,t,i,r,u,f){return this.set(1,i,u,0,n,1,f,0,t,r,1,0,0,0,0,1),this}compose(n,t,i){const r=this.elements,u=t._x,f=t._y,o=t._z,s=t._w,v=u+u,h=f+f,e=o+o,y=u*v,p=u*h,w=u*e,b=f*h,k=f*e,d=o*e,g=s*v,nt=s*h,tt=s*e,c=i.x,l=i.y,a=i.z;return r[0]=(1-(b+d))*c,r[1]=(p+tt)*c,r[2]=(w-nt)*c,r[3]=0,r[4]=(p-tt)*l,r[5]=(1-(y+d))*l,r[6]=(k+g)*l,r[7]=0,r[8]=(w+nt)*a,r[9]=(k-g)*a,r[10]=(1-(y+b))*a,r[11]=0,r[12]=n.x,r[13]=n.y,r[14]=n.z,r[15]=1,this}decompose(n,t,i){const r=this.elements;let u=le.set(r[0],r[1],r[2]).length();const s=le.set(r[4],r[5],r[6]).length(),h=le.set(r[8],r[9],r[10]).length(),c=this.determinant();c<0&&(u=-u);n.x=r[12];n.y=r[13];n.z=r[14];ci.copy(this);const f=1/u,e=1/s,o=1/h;return ci.elements[0]*=f,ci.elements[1]*=f,ci.elements[2]*=f,ci.elements[4]*=e,ci.elements[5]*=e,ci.elements[6]*=e,ci.elements[8]*=o,ci.elements[9]*=o,ci.elements[10]*=o,t.setFromRotationMatrix(ci),i.x=u,i.y=s,i.z=h,this}makePerspective(n,t,i,r,u,f,e=gi){const o=this.elements,c=2*u/(t-n),l=2*u/(i-r),a=(t+n)/(t-n),v=(i+r)/(i-r);let s,h;if(e===gi)s=-(f+u)/(f-u),h=-2*f*u/(f-u);else if(e===os)s=-f/(f-u),h=-f*u/(f-u);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+e);return o[0]=c,o[4]=0,o[8]=a,o[12]=0,o[1]=0,o[5]=l,o[9]=v,o[13]=0,o[2]=0,o[6]=0,o[10]=s,o[14]=h,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(n,t,i,r,u,f,e=gi){const o=this.elements,l=1/(t-n),a=1/(i-r),s=1/(f-u),v=(t+n)*l,y=(i+r)*a;let h,c;if(e===gi)h=(f+u)*s,c=-2*s;else if(e===os)h=u*s,c=-1*s;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+e);return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-v,o[1]=0,o[5]=2*a,o[9]=0,o[13]=-y,o[2]=0,o[6]=0,o[10]=c,o[14]=-h,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(n){const t=this.elements,i=n.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(n,t=0){for(let i=0;i<16;i++)this.elements[i]=n[i+t];return this}toArray(n=[],t=0){const i=this.elements;return n[t]=i[0],n[t+1]=i[1],n[t+2]=i[2],n[t+3]=i[3],n[t+4]=i[4],n[t+5]=i[5],n[t+6]=i[6],n[t+7]=i[7],n[t+8]=i[8],n[t+9]=i[9],n[t+10]=i[10],n[t+11]=i[11],n[t+12]=i[12],n[t+13]=i[13],n[t+14]=i[14],n[t+15]=i[15],n}}const le=new t,ci=new o,rht=new t(0,0,0),uht=new t(1,1,1),su=new t,bc=new t,ni=new t,rtt=new o,utt=new wt;class kc{constructor(n=0,t=0,i=0,r=kc.DEFAULT_ORDER){this.isEuler=!0;this._x=n;this._y=t;this._z=i;this._order=r}get x(){return this._x}set x(n){this._x=n;this._onChangeCallback()}get y(){return this._y}set y(n){this._y=n;this._onChangeCallback()}get z(){return this._z}set z(n){this._z=n;this._onChangeCallback()}get order(){return this._order}set order(n){this._order=n;this._onChangeCallback()}set(n,t,i,r=this._order){return this._x=n,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(n){return this._x=n._x,this._y=n._y,this._z=n._z,this._order=n._order,this._onChangeCallback(),this}setFromRotationMatrix(n,t=this._order,i=true){const r=n.elements,u=r[0],o=r[4],s=r[8],h=r[1],f=r[5],c=r[9],l=r[2],a=r[6],e=r[10];switch(t){case"XYZ":this._y=Math.asin(b(s,-1,1));Math.abs(s)<.9999999?(this._x=Math.atan2(-c,e),this._z=Math.atan2(-o,u)):(this._x=Math.atan2(a,f),this._z=0);break;case"YXZ":this._x=Math.asin(-b(c,-1,1));Math.abs(c)<.9999999?(this._y=Math.atan2(s,e),this._z=Math.atan2(h,f)):(this._y=Math.atan2(-l,u),this._z=0);break;case"ZXY":this._x=Math.asin(b(a,-1,1));Math.abs(a)<.9999999?(this._y=Math.atan2(-l,e),this._z=Math.atan2(-o,f)):(this._y=0,this._z=Math.atan2(h,u));break;case"ZYX":this._y=Math.asin(-b(l,-1,1));Math.abs(l)<.9999999?(this._x=Math.atan2(a,e),this._z=Math.atan2(h,u)):(this._x=0,this._z=Math.atan2(-o,f));break;case"YZX":this._z=Math.asin(b(h,-1,1));Math.abs(h)<.9999999?(this._x=Math.atan2(-c,f),this._y=Math.atan2(-l,u)):(this._x=0,this._y=Math.atan2(s,e));break;case"XZY":this._z=Math.asin(-b(o,-1,1));Math.abs(o)<.9999999?(this._x=Math.atan2(a,f),this._y=Math.atan2(s,u)):(this._x=Math.atan2(-c,e),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(n,t,i){return rtt.makeRotationFromQuaternion(n),this.setFromRotationMatrix(rtt,t,i)}setFromVector3(n,t=this._order){return this.set(n.x,n.y,n.z,t)}reorder(n){return utt.setFromEuler(this),this.setFromQuaternion(utt,n)}equals(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._order===this._order}fromArray(n){return this._x=n[0],this._y=n[1],this._z=n[2],n[3]!==undefined&&(this._order=n[3]),this._onChangeCallback(),this}toArray(n=[],t=0){return n[t]=this._x,n[t+1]=this._y,n[t+2]=this._z,n[t+3]=this._order,n}_onChange(n){return this._onChangeCallback=n,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x;yield this._y;yield this._z;yield this._order}}kc.DEFAULT_ORDER="XYZ";class dc{constructor(){this.mask=1}set(n){this.mask=(1<<n|0)>>>0}enable(n){this.mask|=1<<n|0}enableAll(){this.mask=4294967295|0}toggle(n){this.mask^=1<<n|0}disable(n){this.mask&=~(1<<n|0)}disableAll(){this.mask=0}test(n){return(this.mask&n.mask)!=0}isEnabled(n){return(this.mask&(1<<n|0))!=0}}let fht=0;const ftt=new t,ae=new wt,lr=new o,gc=new t,vs=new t,eht=new t,oht=new wt,ett=new t(1,0,0),ott=new t(0,1,0),stt=new t(0,0,1),sht={type:"added"},htt={type:"removed"};class v extends or{constructor(){function f(){i.setFromEuler(n,!1)}function e(){n.setFromQuaternion(i,undefined,!1)}super();this.isObject3D=!0;Object.defineProperty(this,"id",{value:fht++});this.uuid=dt();this.name="";this.type="Object3D";this.parent=null;this.children=[];this.up=v.DEFAULT_UP.clone();const r=new t,n=new kc,i=new wt,u=new t(1,1,1);n._onChange(f);i._onChange(e);Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:r},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:u},modelViewMatrix:{value:new o},normalMatrix:{value:new c}});this.matrix=new o;this.matrixWorld=new o;this.matrixAutoUpdate=v.DEFAULT_MATRIX_AUTO_UPDATE;this.matrixWorldNeedsUpdate=!1;this.matrixWorldAutoUpdate=v.DEFAULT_MATRIX_WORLD_AUTO_UPDATE;this.layers=new dc;this.visible=!0;this.castShadow=!1;this.receiveShadow=!1;this.frustumCulled=!0;this.renderOrder=0;this.animations=[];this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(n){this.matrixAutoUpdate&&this.updateMatrix();this.matrix.premultiply(n);this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(n){return this.quaternion.premultiply(n),this}setRotationFromAxisAngle(n,t){this.quaternion.setFromAxisAngle(n,t)}setRotationFromEuler(n){this.quaternion.setFromEuler(n,!0)}setRotationFromMatrix(n){this.quaternion.setFromRotationMatrix(n)}setRotationFromQuaternion(n){this.quaternion.copy(n)}rotateOnAxis(n,t){return ae.setFromAxisAngle(n,t),this.quaternion.multiply(ae),this}rotateOnWorldAxis(n,t){return ae.setFromAxisAngle(n,t),this.quaternion.premultiply(ae),this}rotateX(n){return this.rotateOnAxis(ett,n)}rotateY(n){return this.rotateOnAxis(ott,n)}rotateZ(n){return this.rotateOnAxis(stt,n)}translateOnAxis(n,t){return ftt.copy(n).applyQuaternion(this.quaternion),this.position.add(ftt.multiplyScalar(t)),this}translateX(n){return this.translateOnAxis(ett,n)}translateY(n){return this.translateOnAxis(ott,n)}translateZ(n){return this.translateOnAxis(stt,n)}localToWorld(n){return this.updateWorldMatrix(!0,!1),n.applyMatrix4(this.matrixWorld)}worldToLocal(n){return this.updateWorldMatrix(!0,!1),n.applyMatrix4(lr.copy(this.matrixWorld).invert())}lookAt(n,t,i){n.isVector3?gc.copy(n):gc.set(n,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1);vs.setFromMatrixPosition(this.matrixWorld);this.isCamera||this.isLight?lr.lookAt(vs,gc,this.up):lr.lookAt(gc,vs,this.up);this.quaternion.setFromRotationMatrix(lr);r&&(lr.extractRotation(r.matrixWorld),ae.setFromRotationMatrix(lr),this.quaternion.premultiply(ae.invert()))}add(n){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return n===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",n),this):(n&&n.isObject3D?(n.parent!==null&&n.parent.remove(n),n.parent=this,this.children.push(n),n.dispatchEvent(sht)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",n),this)}remove(n){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(n);return t!==-1&&(n.parent=null,this.children.splice(t,1),n.dispatchEvent(htt)),this}removeFromParent(){const n=this.parent;return n!==null&&n.remove(this),this}clear(){for(let n=0;n<this.children.length;n++){const t=this.children[n];t.parent=null;t.dispatchEvent(htt)}return this.children.length=0,this}attach(n){return this.updateWorldMatrix(!0,!1),lr.copy(this.matrixWorld).invert(),n.parent!==null&&(n.parent.updateWorldMatrix(!0,!1),lr.multiply(n.parent.matrixWorld)),n.applyMatrix4(lr),this.add(n),n.updateWorldMatrix(!1,!0),this}getObjectById(n){return this.getObjectByProperty("id",n)}getObjectByName(n){return this.getObjectByProperty("name",n)}getObjectByProperty(n,t){if(this[n]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const u=this.children[i],r=u.getObjectByProperty(n,t);if(r!==undefined)return r}return undefined}getObjectsByProperty(n,t){let i=[];this[n]===t&&i.push(this);for(let r=0,u=this.children.length;r<u;r++){const u=this.children[r].getObjectsByProperty(n,t);u.length>0&&(i=i.concat(u))}return i}getWorldPosition(n){return this.updateWorldMatrix(!0,!1),n.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(n){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(vs,n,eht),n}getWorldScale(n){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(vs,oht,n),n}getWorldDirection(n){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return n.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(n){n(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(n)}traverseVisible(n){if(this.visible!==!1){n(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(n)}}traverseAncestors(n){const t=this.parent;t!==null&&(n(t),t.traverseAncestors(n))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(n){this.matrixAutoUpdate&&this.updateMatrix();(this.matrixWorldNeedsUpdate||n)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++){const r=t[i];(r.matrixWorldAutoUpdate===!0||n===!0)&&r.updateMatrixWorld(n)}}updateWorldMatrix(n,t){const i=this.parent;if(n===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const n=this.children;for(let t=0,i=n.length;t<i;t++){const i=n[t];i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!1,!0)}}}toJSON(n){function u(t,i){return t[i.uuid]===undefined&&(t[i.uuid]=i.toJSON(n)),i.uuid}function r(n){const t=[];for(const i in n){const r=n[i];delete r.metadata;t.push(r)}return t}const f=n===undefined||typeof n=="string",i={};f&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const t={};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.castShadow===!0&&(t.castShadow=!0),this.receiveShadow===!0&&(t.receiveShadow=!0),this.visible===!1&&(t.visible=!1),this.frustumCulled===!1&&(t.frustumCulled=!1),this.renderOrder!==0&&(t.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(t.userData=this.userData),t.layers=this.layers.mask,t.matrix=this.matrix.toArray(),t.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(t.matrixAutoUpdate=!1),this.isInstancedMesh&&(t.type="InstancedMesh",t.count=this.count,t.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(t.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?t.background=this.background.toJSON():this.background.isTexture&&(t.background=this.background.toJSON(n).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(t.environment=this.environment.toJSON(n).uuid);else if(this.isMesh||this.isLine||this.isPoints){t.geometry=u(n.geometries,this.geometry);const i=this.geometry.parameters;if(i!==undefined&&i.shapes!==undefined){const t=i.shapes;if(Array.isArray(t))for(let i=0,r=t.length;i<r;i++){const r=t[i];u(n.shapes,r)}else u(n.shapes,t)}}if(this.isSkinnedMesh&&(t.bindMode=this.bindMode,t.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==undefined&&(u(n.skeletons,this.skeleton),t.skeleton=this.skeleton.uuid)),this.material!==undefined)if(Array.isArray(this.material)){const i=[];for(let t=0,r=this.material.length;t<r;t++)i.push(u(n.materials,this.material[t]));t.material=i}else t.material=u(n.materials,this.material);if(this.children.length>0){t.children=[];for(let i=0;i<this.children.length;i++)t.children.push(this.children[i].toJSON(n).object)}if(this.animations.length>0){t.animations=[];for(let i=0;i<this.animations.length;i++){const r=this.animations[i];t.animations.push(u(n.animations,r))}}if(f){const t=r(n.geometries),u=r(n.materials),f=r(n.textures),e=r(n.images),o=r(n.shapes),s=r(n.skeletons),h=r(n.animations),c=r(n.nodes);t.length>0&&(i.geometries=t);u.length>0&&(i.materials=u);f.length>0&&(i.textures=f);e.length>0&&(i.images=e);o.length>0&&(i.shapes=o);s.length>0&&(i.skeletons=s);h.length>0&&(i.animations=h);c.length>0&&(i.nodes=c)}return i.object=t,i}clone(n){return(new this.constructor).copy(this,n)}copy(n,t=true){if(this.name=n.name,this.up.copy(n.up),this.position.copy(n.position),this.rotation.order=n.rotation.order,this.quaternion.copy(n.quaternion),this.scale.copy(n.scale),this.matrix.copy(n.matrix),this.matrixWorld.copy(n.matrixWorld),this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrixWorldNeedsUpdate=n.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=n.matrixWorldAutoUpdate,this.layers.mask=n.layers.mask,this.visible=n.visible,this.castShadow=n.castShadow,this.receiveShadow=n.receiveShadow,this.frustumCulled=n.frustumCulled,this.renderOrder=n.renderOrder,this.animations=n.animations,this.userData=JSON.parse(JSON.stringify(n.userData)),t===!0)for(let t=0;t<n.children.length;t++){const i=n.children[t];this.add(i.clone())}return this}}v.DEFAULT_UP=new t(0,1,0);v.DEFAULT_MATRIX_AUTO_UPDATE=!0;v.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const li=new t,ar=new t,hw=new t,vr=new t,ve=new t,ye=new t,ctt=new t,cw=new t,lw=new t,aw=new t;let nl=!1;class ti{constructor(n=new t,i=new t,r=new t){this.a=n;this.b=i;this.c=r}static getNormal(n,t,i,r){r.subVectors(i,t);li.subVectors(n,t);r.cross(li);const u=r.lengthSq();return u>0?r.multiplyScalar(1/Math.sqrt(u)):r.set(0,0,0)}static getBarycoord(n,t,i,r,u){li.subVectors(r,t);ar.subVectors(i,t);hw.subVectors(n,t);const e=li.dot(li),f=li.dot(ar),o=li.dot(hw),s=ar.dot(ar),h=ar.dot(hw),c=e*s-f*f;if(c===0)return u.set(-2,-1,-1);const l=1/c,a=(s*o-f*h)*l,v=(e*h-f*o)*l;return u.set(1-a-v,v,a)}static containsPoint(n,t,i,r){return this.getBarycoord(n,t,i,r,vr),vr.x>=0&&vr.y>=0&&vr.x+vr.y<=1}static getUV(n,t,i,r,u,f,e,o){return nl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),nl=!0),this.getInterpolation(n,t,i,r,u,f,e,o)}static getInterpolation(n,t,i,r,u,f,e,o){return this.getBarycoord(n,t,i,r,vr),o.setScalar(0),o.addScaledVector(u,vr.x),o.addScaledVector(f,vr.y),o.addScaledVector(e,vr.z),o}static isFrontFacing(n,t,i,r){return li.subVectors(i,t),ar.subVectors(n,t),li.cross(ar).dot(r)<0?!0:!1}set(n,t,i){return this.a.copy(n),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(n,t,i,r){return this.a.copy(n[t]),this.b.copy(n[i]),this.c.copy(n[r]),this}setFromAttributeAndIndices(n,t,i,r){return this.a.fromBufferAttribute(n,t),this.b.fromBufferAttribute(n,i),this.c.fromBufferAttribute(n,r),this}clone(){return(new this.constructor).copy(this)}copy(n){return this.a.copy(n.a),this.b.copy(n.b),this.c.copy(n.c),this}getArea(){return li.subVectors(this.c,this.b),ar.subVectors(this.a,this.b),li.cross(ar).length()*.5}getMidpoint(n){return n.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(n){return ti.getNormal(this.a,this.b,this.c,n)}getPlane(n){return n.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(n,t){return ti.getBarycoord(n,this.a,this.b,this.c,t)}getUV(n,t,i,r,u){return nl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),nl=!0),ti.getInterpolation(n,this.a,this.b,this.c,t,i,r,u)}getInterpolation(n,t,i,r,u){return ti.getInterpolation(n,this.a,this.b,this.c,t,i,r,u)}containsPoint(n){return ti.containsPoint(n,this.a,this.b,this.c)}isFrontFacing(n){return ti.isFrontFacing(this.a,this.b,this.c,n)}intersectsBox(n){return n.intersectsTriangle(this)}closestPointToPoint(n,t){const u=this.a,h=this.b,l=this.c;let a,f;ve.subVectors(h,u);ye.subVectors(l,u);cw.subVectors(n,u);const e=ve.dot(cw),o=ye.dot(cw);if(e<=0&&o<=0)return t.copy(u);lw.subVectors(n,h);const i=ve.dot(lw),s=ye.dot(lw);if(i>=0&&s<=i)return t.copy(h);const v=e*s-i*o;if(v<=0&&e>=0&&i<=0)return a=e/(e-i),t.copy(u).addScaledVector(ve,a);aw.subVectors(n,l);const c=ve.dot(aw),r=ye.dot(aw);if(r>=0&&c<=r)return t.copy(l);const y=c*o-e*r;if(y<=0&&o>=0&&r<=0)return f=o/(o-r),t.copy(u).addScaledVector(ye,f);const p=i*r-c*s;if(p<=0&&s-i>=0&&c-r>=0)return ctt.subVectors(l,h),f=(s-i)/(s-i+(c-r)),t.copy(h).addScaledVector(ctt,f);const w=1/(p+y+v);return a=y*w,f=v*w,t.copy(u).addScaledVector(ve,a).addScaledVector(ye,f)}equals(n){return n.a.equals(this.a)&&n.b.equals(this.b)&&n.c.equals(this.c)}}let hht=0;class ct extends or{constructor(){super();this.isMaterial=!0;Object.defineProperty(this,"id",{value:hht++});this.uuid=dt();this.name="";this.type="Material";this.blending=pu;this.side=rr;this.vertexColors=!1;this.opacity=1;this.transparent=!1;this.blendSrc=iy;this.blendDst=ry;this.blendEquation=wu;this.blendSrcAlpha=null;this.blendDstAlpha=null;this.blendEquationAlpha=null;this.depthFunc=dh;this.depthTest=!0;this.depthWrite=!0;this.stencilWriteMask=255;this.stencilFunc=cn;this.stencilRef=0;this.stencilFuncMask=255;this.stencilFail=hc;this.stencilZFail=hc;this.stencilZPass=hc;this.stencilWrite=!1;this.clippingPlanes=null;this.clipIntersection=!1;this.clipShadows=!1;this.shadowSide=null;this.colorWrite=!0;this.precision=null;this.polygonOffset=!1;this.polygonOffsetFactor=0;this.polygonOffsetUnits=0;this.dithering=!1;this.alphaToCoverage=!1;this.premultipliedAlpha=!1;this.forceSinglePass=!1;this.visible=!0;this.toneMapped=!0;this.userData={};this.version=0;this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(n){this._alphaTest>0!=n>0&&this.version++;this._alphaTest=n}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(n){if(n!==undefined)for(const t in n){const r=n[t];if(r===undefined){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===undefined){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(r):i&&i.isVector3&&r&&r.isVector3?i.copy(r):this[t]=r}}toJSON(n){function r(n){const t=[];for(const i in n){const r=n[i];delete r.metadata;t.push(r)}return t}const i=n===undefined||typeof n=="string";i&&(n={textures:{},images:{}});const t={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),this.color&&this.color.isColor&&(t.color=this.color.getHex()),this.roughness!==undefined&&(t.roughness=this.roughness),this.metalness!==undefined&&(t.metalness=this.metalness),this.sheen!==undefined&&(t.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(t.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==undefined&&(t.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(t.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(t.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(t.specular=this.specular.getHex()),this.specularIntensity!==undefined&&(t.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(t.specularColor=this.specularColor.getHex()),this.shininess!==undefined&&(t.shininess=this.shininess),this.clearcoat!==undefined&&(t.clearcoat=this.clearcoat),this.clearcoatRoughness!==undefined&&(t.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(t.clearcoatMap=this.clearcoatMap.toJSON(n).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(t.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(n).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(t.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(n).uuid,t.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==undefined&&(t.iridescence=this.iridescence),this.iridescenceIOR!==undefined&&(t.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==undefined&&(t.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(t.iridescenceMap=this.iridescenceMap.toJSON(n).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(t.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(n).uuid),this.anisotropy!==undefined&&(t.anisotropy=this.anisotropy),this.anisotropyRotation!==undefined&&(t.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(t.anisotropyMap=this.anisotropyMap.toJSON(n).uuid),this.map&&this.map.isTexture&&(t.map=this.map.toJSON(n).uuid),this.matcap&&this.matcap.isTexture&&(t.matcap=this.matcap.toJSON(n).uuid),this.alphaMap&&this.alphaMap.isTexture&&(t.alphaMap=this.alphaMap.toJSON(n).uuid),this.lightMap&&this.lightMap.isTexture&&(t.lightMap=this.lightMap.toJSON(n).uuid,t.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(t.aoMap=this.aoMap.toJSON(n).uuid,t.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(t.bumpMap=this.bumpMap.toJSON(n).uuid,t.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(t.normalMap=this.normalMap.toJSON(n).uuid,t.normalMapType=this.normalMapType,t.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(t.displacementMap=this.displacementMap.toJSON(n).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(t.roughnessMap=this.roughnessMap.toJSON(n).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(t.metalnessMap=this.metalnessMap.toJSON(n).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(t.emissiveMap=this.emissiveMap.toJSON(n).uuid),this.specularMap&&this.specularMap.isTexture&&(t.specularMap=this.specularMap.toJSON(n).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(t.specularIntensityMap=this.specularIntensityMap.toJSON(n).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(t.specularColorMap=this.specularColorMap.toJSON(n).uuid),this.envMap&&this.envMap.isTexture&&(t.envMap=this.envMap.toJSON(n).uuid,this.combine!==undefined&&(t.combine=this.combine)),this.envMapIntensity!==undefined&&(t.envMapIntensity=this.envMapIntensity),this.reflectivity!==undefined&&(t.reflectivity=this.reflectivity),this.refractionRatio!==undefined&&(t.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(t.gradientMap=this.gradientMap.toJSON(n).uuid),this.transmission!==undefined&&(t.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(t.transmissionMap=this.transmissionMap.toJSON(n).uuid),this.thickness!==undefined&&(t.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(t.thicknessMap=this.thicknessMap.toJSON(n).uuid),this.attenuationDistance!==undefined&&this.attenuationDistance!==Infinity&&(t.attenuationDistance=this.attenuationDistance),this.attenuationColor!==undefined&&(t.attenuationColor=this.attenuationColor.getHex()),this.size!==undefined&&(t.size=this.size),this.shadowSide!==null&&(t.shadowSide=this.shadowSide),this.sizeAttenuation!==undefined&&(t.sizeAttenuation=this.sizeAttenuation),this.blending!==pu&&(t.blending=this.blending),this.side!==rr&&(t.side=this.side),this.vertexColors&&(t.vertexColors=!0),this.opacity<1&&(t.opacity=this.opacity),this.transparent===!0&&(t.transparent=this.transparent),t.depthFunc=this.depthFunc,t.depthTest=this.depthTest,t.depthWrite=this.depthWrite,t.colorWrite=this.colorWrite,t.stencilWrite=this.stencilWrite,t.stencilWriteMask=this.stencilWriteMask,t.stencilFunc=this.stencilFunc,t.stencilRef=this.stencilRef,t.stencilFuncMask=this.stencilFuncMask,t.stencilFail=this.stencilFail,t.stencilZFail=this.stencilZFail,t.stencilZPass=this.stencilZPass,this.rotation!==undefined&&this.rotation!==0&&(t.rotation=this.rotation),this.polygonOffset===!0&&(t.polygonOffset=!0),this.polygonOffsetFactor!==0&&(t.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(t.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==undefined&&this.linewidth!==1&&(t.linewidth=this.linewidth),this.dashSize!==undefined&&(t.dashSize=this.dashSize),this.gapSize!==undefined&&(t.gapSize=this.gapSize),this.scale!==undefined&&(t.scale=this.scale),this.dithering===!0&&(t.dithering=!0),this.alphaTest>0&&(t.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(t.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(t.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(t.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(t.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(t.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(t.flatShading=this.flatShading),this.visible===!1&&(t.visible=!1),this.toneMapped===!1&&(t.toneMapped=!1),this.fog===!1&&(t.fog=!1),Object.keys(this.userData).length>0&&(t.userData=this.userData),i){const i=r(n.textures),u=r(n.images);i.length>0&&(t.textures=i);u.length>0&&(t.images=u)}return t}clone(){return(new this.constructor).copy(this)}copy(n){this.name=n.name;this.blending=n.blending;this.side=n.side;this.vertexColors=n.vertexColors;this.opacity=n.opacity;this.transparent=n.transparent;this.blendSrc=n.blendSrc;this.blendDst=n.blendDst;this.blendEquation=n.blendEquation;this.blendSrcAlpha=n.blendSrcAlpha;this.blendDstAlpha=n.blendDstAlpha;this.blendEquationAlpha=n.blendEquationAlpha;this.depthFunc=n.depthFunc;this.depthTest=n.depthTest;this.depthWrite=n.depthWrite;this.stencilWriteMask=n.stencilWriteMask;this.stencilFunc=n.stencilFunc;this.stencilRef=n.stencilRef;this.stencilFuncMask=n.stencilFuncMask;this.stencilFail=n.stencilFail;this.stencilZFail=n.stencilZFail;this.stencilZPass=n.stencilZPass;this.stencilWrite=n.stencilWrite;const t=n.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let r=0;r!==n;++r)i[r]=t[r].clone()}return this.clippingPlanes=i,this.clipIntersection=n.clipIntersection,this.clipShadows=n.clipShadows,this.shadowSide=n.shadowSide,this.colorWrite=n.colorWrite,this.precision=n.precision,this.polygonOffset=n.polygonOffset,this.polygonOffsetFactor=n.polygonOffsetFactor,this.polygonOffsetUnits=n.polygonOffsetUnits,this.dithering=n.dithering,this.alphaTest=n.alphaTest,this.alphaToCoverage=n.alphaToCoverage,this.premultipliedAlpha=n.premultipliedAlpha,this.forceSinglePass=n.forceSinglePass,this.visible=n.visible,this.toneMapped=n.toneMapped,this.userData=JSON.parse(JSON.stringify(n.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(n){n===!0&&this.version++}}const ltt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ai={h:0,s:0,l:0},tl={h:0,s:0,l:0};class u{constructor(n,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(n,t,i)}set(n,t,i){if(t===undefined&&i===undefined){const t=n;t&&t.isColor?this.copy(t):typeof t=="number"?this.setHex(t):typeof t=="string"&&this.setStyle(t)}else this.setRGB(n,t,i);return this}setScalar(n){return this.r=n,this.g=n,this.b=n,this}setHex(n,t=e){return n=Math.floor(n),this.r=(n>>16&255)/255,this.g=(n>>8&255)/255,this.b=(n&255)/255,ui.toWorkingColorSpace(this,t),this}setRGB(n,t,i,r=ui.workingColorSpace){return this.r=n,this.g=t,this.b=i,ui.toWorkingColorSpace(this,r),this}setHSL(n,t,i,r=ui.workingColorSpace){if(n=bp(n,1),t=b(t,0,1),i=b(i,0,1),t===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+t):i+t-i*t,u=2*i-r;this.r=vw(u,r,n+1/3);this.g=vw(u,r,n);this.b=vw(u,r,n-1/3)}return ui.toWorkingColorSpace(this,r),this}setStyle(n,t=e){function r(t){t!==undefined&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+n+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(n)){let u;const e=i[1],f=i[2];switch(e){case"rgb":case"rgba":if(u=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return r(u[4]),this.setRGB(Math.min(255,parseInt(u[1],10))/255,Math.min(255,parseInt(u[2],10))/255,Math.min(255,parseInt(u[3],10))/255,t);if(u=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return r(u[4]),this.setRGB(Math.min(100,parseInt(u[1],10))/100,Math.min(100,parseInt(u[2],10))/100,Math.min(100,parseInt(u[3],10))/100,t);break;case"hsl":case"hsla":if(u=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(f))return r(u[4]),this.setHSL(parseFloat(u[1])/360,parseFloat(u[2])/100,parseFloat(u[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+n)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(n)){const r=i[1],u=r.length;if(u===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(u===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+n)}else if(n&&n.length>0)return this.setColorName(n,t);return this}setColorName(n,t=e){const i=ltt[n.toLowerCase()];return i!==undefined?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+n),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(n){return this.r=n.r,this.g=n.g,this.b=n.b,this}copySRGBToLinear(n){return this.r=ue(n.r),this.g=ue(n.g),this.b=ue(n.b),this}copyLinearToSRGB(n){return this.r=gp(n.r),this.g=gp(n.g),this.b=gp(n.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(n=e){return ui.fromWorkingColorSpace(lt.copy(this),n),Math.round(b(lt.r*255,0,255))*65536+Math.round(b(lt.g*255,0,255))*256+Math.round(b(lt.b*255,0,255))}getHexString(n=e){return("000000"+this.getHex(n).toString(16)).slice(-6)}getHSL(n,t=ui.workingColorSpace){ui.fromWorkingColorSpace(lt.copy(this),t);const e=lt.r,i=lt.g,r=lt.b,u=Math.max(e,i,r),o=Math.min(e,i,r);let f,s;const h=(o+u)/2;if(o===u)f=0,s=0;else{const n=u-o;s=h<=.5?n/(u+o):n/(2-u-o);switch(u){case e:f=(i-r)/n+(i<r?6:0);break;case i:f=(r-e)/n+2;break;case r:f=(e-i)/n+4}f/=6}return n.h=f,n.s=s,n.l=h,n}getRGB(n,t=ui.workingColorSpace){return ui.fromWorkingColorSpace(lt.copy(this),t),n.r=lt.r,n.g=lt.g,n.b=lt.b,n}getStyle(n=e){ui.fromWorkingColorSpace(lt.copy(this),n);const t=lt.r,i=lt.g,r=lt.b;return n!==e?`color(${n} ${t.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(n,t,i){return this.getHSL(ai),ai.h+=n,ai.s+=t,ai.l+=i,this.setHSL(ai.h,ai.s,ai.l),this}add(n){return this.r+=n.r,this.g+=n.g,this.b+=n.b,this}addColors(n,t){return this.r=n.r+t.r,this.g=n.g+t.g,this.b=n.b+t.b,this}addScalar(n){return this.r+=n,this.g+=n,this.b+=n,this}sub(n){return this.r=Math.max(0,this.r-n.r),this.g=Math.max(0,this.g-n.g),this.b=Math.max(0,this.b-n.b),this}multiply(n){return this.r*=n.r,this.g*=n.g,this.b*=n.b,this}multiplyScalar(n){return this.r*=n,this.g*=n,this.b*=n,this}lerp(n,t){return this.r+=(n.r-this.r)*t,this.g+=(n.g-this.g)*t,this.b+=(n.b-this.b)*t,this}lerpColors(n,t,i){return this.r=n.r+(t.r-n.r)*i,this.g=n.g+(t.g-n.g)*i,this.b=n.b+(t.b-n.b)*i,this}lerpHSL(n,t){this.getHSL(ai);n.getHSL(tl);const i=ss(ai.h,tl.h,t),r=ss(ai.s,tl.s,t),u=ss(ai.l,tl.l,t);return this.setHSL(i,r,u),this}setFromVector3(n){return this.r=n.x,this.g=n.y,this.b=n.z,this}applyMatrix3(n){const i=this.r,r=this.g,u=this.b,t=n.elements;return this.r=t[0]*i+t[3]*r+t[6]*u,this.g=t[1]*i+t[4]*r+t[7]*u,this.b=t[2]*i+t[5]*r+t[8]*u,this}equals(n){return n.r===this.r&&n.g===this.g&&n.b===this.b}fromArray(n,t=0){return this.r=n[t],this.g=n[t+1],this.b=n[t+2],this}toArray(n=[],t=0){return n[t]=this.r,n[t+1]=this.g,n[t+2]=this.b,n}fromBufferAttribute(n,t){return this.r=n.getX(t),this.g=n.getY(t),this.b=n.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r;yield this.g;yield this.b}}const lt=new u;u.NAMES=ltt;class hu extends ct{constructor(n){super();this.isMeshBasicMaterial=!0;this.type="MeshBasicMaterial";this.color=new u(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=bo;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.fog=n.fog,this}}const yr=cht();const lht={toHalfFloat:bt,fromHalfFloat:ys},it=new t,il=new i;class p{constructor(n,t,i=false){if(Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0;this.name="";this.array=n;this.itemSize=t;this.count=n!==undefined?n.length/t:0;this.normalized=i;this.usage=es;this.updateRange={offset:0,count:-1};this.gpuType=di;this.version=0}onUploadCallback(){}set needsUpdate(n){n===!0&&this.version++}setUsage(n){return this.usage=n,this}copy(n){return this.name=n.name,this.array=new n.array.constructor(n.array),this.itemSize=n.itemSize,this.count=n.count,this.normalized=n.normalized,this.usage=n.usage,this.gpuType=n.gpuType,this}copyAt(n,t,i){n*=this.itemSize;i*=t.itemSize;for(let r=0,u=this.itemSize;r<u;r++)this.array[n+r]=t.array[i+r];return this}copyArray(n){return this.array.set(n),this}applyMatrix3(n){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)il.fromBufferAttribute(this,t),il.applyMatrix3(n),this.setXY(t,il.x,il.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)it.fromBufferAttribute(this,t),it.applyMatrix3(n),this.setXYZ(t,it.x,it.y,it.z);return this}applyMatrix4(n){for(let t=0,i=this.count;t<i;t++)it.fromBufferAttribute(this,t),it.applyMatrix4(n),this.setXYZ(t,it.x,it.y,it.z);return this}applyNormalMatrix(n){for(let t=0,i=this.count;t<i;t++)it.fromBufferAttribute(this,t),it.applyNormalMatrix(n),this.setXYZ(t,it.x,it.y,it.z);return this}transformDirection(n){for(let t=0,i=this.count;t<i;t++)it.fromBufferAttribute(this,t),it.transformDirection(n),this.setXYZ(t,it.x,it.y,it.z);return this}set(n,t=0){return this.array.set(n,t),this}getX(n){let t=this.array[n*this.itemSize];return this.normalized&&(t=gt(t,this.array)),t}setX(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize]=t,this}getY(n){let t=this.array[n*this.itemSize+1];return this.normalized&&(t=gt(t,this.array)),t}setY(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize+1]=t,this}getZ(n){let t=this.array[n*this.itemSize+2];return this.normalized&&(t=gt(t,this.array)),t}setZ(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize+2]=t,this}getW(n){let t=this.array[n*this.itemSize+3];return this.normalized&&(t=gt(t,this.array)),t}setW(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize+3]=t,this}setXY(n,t,i){return n*=this.itemSize,this.normalized&&(t=s(t,this.array),i=s(i,this.array)),this.array[n+0]=t,this.array[n+1]=i,this}setXYZ(n,t,i,r){return n*=this.itemSize,this.normalized&&(t=s(t,this.array),i=s(i,this.array),r=s(r,this.array)),this.array[n+0]=t,this.array[n+1]=i,this.array[n+2]=r,this}setXYZW(n,t,i,r,u){return n*=this.itemSize,this.normalized&&(t=s(t,this.array),i=s(i,this.array),r=s(r,this.array),u=s(u,this.array)),this.array[n+0]=t,this.array[n+1]=i,this.array[n+2]=r,this.array[n+3]=u,this}onUpload(n){return this.onUploadCallback=n,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const n={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(n.name=this.name),this.usage!==es&&(n.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(n.updateRange=this.updateRange),n}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class aht extends p{constructor(n,t,i){super(new Int8Array(n),t,i)}}class vht extends p{constructor(n,t,i){super(new Uint8Array(n),t,i)}}class yht extends p{constructor(n,t,i){super(new Uint8ClampedArray(n),t,i)}}class pht extends p{constructor(n,t,i){super(new Int16Array(n),t,i)}}class yw extends p{constructor(n,t,i){super(new Uint16Array(n),t,i)}}class wht extends p{constructor(n,t,i){super(new Int32Array(n),t,i)}}class pw extends p{constructor(n,t,i){super(new Uint32Array(n),t,i)}}class bht extends p{constructor(n,t,i){super(new Uint16Array(n),t,i);this.isFloat16BufferAttribute=!0}getX(n){let t=ys(this.array[n*this.itemSize]);return this.normalized&&(t=gt(t,this.array)),t}setX(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize]=bt(t),this}getY(n){let t=ys(this.array[n*this.itemSize+1]);return this.normalized&&(t=gt(t,this.array)),t}setY(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize+1]=bt(t),this}getZ(n){let t=ys(this.array[n*this.itemSize+2]);return this.normalized&&(t=gt(t,this.array)),t}setZ(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize+2]=bt(t),this}getW(n){let t=ys(this.array[n*this.itemSize+3]);return this.normalized&&(t=gt(t,this.array)),t}setW(n,t){return this.normalized&&(t=s(t,this.array)),this.array[n*this.itemSize+3]=bt(t),this}setXY(n,t,i){return n*=this.itemSize,this.normalized&&(t=s(t,this.array),i=s(i,this.array)),this.array[n+0]=bt(t),this.array[n+1]=bt(i),this}setXYZ(n,t,i,r){return n*=this.itemSize,this.normalized&&(t=s(t,this.array),i=s(i,this.array),r=s(r,this.array)),this.array[n+0]=bt(t),this.array[n+1]=bt(i),this.array[n+2]=bt(r),this}setXYZW(n,t,i,r,u){return n*=this.itemSize,this.normalized&&(t=s(t,this.array),i=s(i,this.array),r=s(r,this.array),u=s(u,this.array)),this.array[n+0]=bt(t),this.array[n+1]=bt(i),this.array[n+2]=bt(r),this.array[n+3]=bt(u),this}}class f extends p{constructor(n,t,i){super(new Float32Array(n),t,i)}}class kht extends p{constructor(n,t,i){super(new Float64Array(n),t,i)}}let dht=0;const fi=new o,ww=new v,pe=new t,ii=new nr,ps=new nr,ft=new t;class l extends or{constructor(){super();this.isBufferGeometry=!0;Object.defineProperty(this,"id",{value:dht++});this.uuid=dt();this.name="";this.type="BufferGeometry";this.index=null;this.attributes={};this.morphAttributes={};this.morphTargetsRelative=!1;this.groups=[];this.boundingBox=null;this.boundingSphere=null;this.drawRange={start:0,count:Infinity};this.userData={}}getIndex(){return this.index}setIndex(n){return this.index=Array.isArray(n)?new(ntt(n)?pw:yw)(n,1):n,this}getAttribute(n){return this.attributes[n]}setAttribute(n,t){return this.attributes[n]=t,this}deleteAttribute(n){return delete this.attributes[n],this}hasAttribute(n){return this.attributes[n]!==undefined}addGroup(n,t,i=0){this.groups.push({start:n,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(n,t){this.drawRange.start=n;this.drawRange.count=t}applyMatrix4(n){const t=this.attributes.position;t!==undefined&&(t.applyMatrix4(n),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==undefined){const t=(new c).getNormalMatrix(n);i.applyNormalMatrix(t);i.needsUpdate=!0}const r=this.attributes.tangent;return r!==undefined&&(r.transformDirection(n),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(n){return fi.makeRotationFromQuaternion(n),this.applyMatrix4(fi),this}rotateX(n){return fi.makeRotationX(n),this.applyMatrix4(fi),this}rotateY(n){return fi.makeRotationY(n),this.applyMatrix4(fi),this}rotateZ(n){return fi.makeRotationZ(n),this.applyMatrix4(fi),this}translate(n,t,i){return fi.makeTranslation(n,t,i),this.applyMatrix4(fi),this}scale(n,t,i){return fi.makeScale(n,t,i),this.applyMatrix4(fi),this}lookAt(n){return ww.lookAt(n),ww.updateMatrix(),this.applyMatrix4(ww.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(pe).negate(),this.translate(pe.x,pe.y,pe.z),this}setFromPoints(n){const t=[];for(let i=0,r=n.length;i<r;i++){const r=n[i];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new f(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new nr);const n=this.attributes.position,i=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingBox.set(new t(- Infinity,- Infinity,- Infinity),new t(+ Infinity,+ Infinity,+ Infinity));return}if(n!==undefined){if(this.boundingBox.setFromBufferAttribute(n),i)for(let n=0,t=i.length;n<t;n++){const t=i[n];ii.setFromBufferAttribute(t);this.morphTargetsRelative?(ft.addVectors(this.boundingBox.min,ii.min),this.boundingBox.expandByPoint(ft),ft.addVectors(this.boundingBox.max,ii.max),this.boundingBox.expandByPoint(ft)):(this.boundingBox.expandByPoint(ii.min),this.boundingBox.expandByPoint(ii.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new hi);const n=this.attributes.position,i=this.morphAttributes.position;if(n&&n.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this);this.boundingSphere.set(new t,Infinity);return}if(n){const r=this.boundingSphere.center;if(ii.setFromBufferAttribute(n),i)for(let n=0,t=i.length;n<t;n++){const t=i[n];ps.setFromBufferAttribute(t);this.morphTargetsRelative?(ft.addVectors(ii.min,ps.min),ii.expandByPoint(ft),ft.addVectors(ii.max,ps.max),ii.expandByPoint(ft)):(ii.expandByPoint(ps.min),ii.expandByPoint(ps.max))}ii.getCenter(r);let t=0;for(let i=0,u=n.count;i<u;i++)ft.fromBufferAttribute(n,i),t=Math.max(t,r.distanceToSquared(ft));if(i)for(let u=0,f=i.length;u<f;u++){const f=i[u],e=this.morphTargetsRelative;for(let i=0,u=f.count;i<u;i++)ft.fromBufferAttribute(f,i),e&&(pe.fromBufferAttribute(n,i),ft.add(pe)),t=Math.max(t,r.distanceToSquared(ft))}this.boundingSphere.radius=Math.sqrt(t);isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){function et(n,t,i){d.fromArray(c,n*3);a.fromArray(c,t*3);v.fromArray(c,i*3);g.fromArray(k,n*2);u.fromArray(k,t*2);f.fromArray(k,i*2);a.sub(d);v.sub(d);u.sub(g);f.sub(g);const r=1/(u.x*f.y-f.x*u.y);isFinite(r)&&(y.copy(a).multiplyScalar(f.y).addScaledVector(v,-u.y).multiplyScalar(r),w.copy(v).multiplyScalar(u.x).addScaledVector(a,-f.x).multiplyScalar(r),o[n].add(y),o[t].add(y),o[i].add(y),s[n].add(w),s[t].add(w),s[i].add(w))}function nt(n){b.fromArray(ft,n*3);ut.copy(b);const t=o[n];h.copy(t);h.sub(b.multiplyScalar(b.dot(t))).normalize();rt.crossVectors(ut,t);const i=rt.dot(s[n]),r=i<0?-1:1;l[n*4]=h.x;l[n*4+1]=h.y;l[n*4+2]=h.z;l[n*4+3]=r}const tt=this.index,r=this.attributes;if(tt===null||r.position===undefined||r.normal===undefined||r.uv===undefined){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=tt.array,c=r.position.array,ft=r.normal.array,k=r.uv.array,it=c.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new p(new Float32Array(4*it),4));const l=this.getAttribute("tangent").array,o=[],s=[];for(let n=0;n<it;n++)o[n]=new t,s[n]=new t;const d=new t,a=new t,v=new t,g=new i,u=new i,f=new i,y=new t,w=new t;let e=this.groups;e.length===0&&(e=[{start:0,count:n.length}]);for(let t=0,i=e.length;t<i;++t){const i=e[t],r=i.start,u=i.count;for(let t=r,i=r+u;t<i;t+=3)et(n[t+0],n[t+1],n[t+2])}const h=new t,rt=new t,b=new t,ut=new t;for(let t=0,i=e.length;t<i;++t){const i=e[t],r=i.start,u=i.count;for(let t=r,i=r+u;t<i;t+=3)nt(n[t+0]),nt(n[t+1]),nt(n[t+2])}}computeVertexNormals(){const i=this.index,n=this.getAttribute("position");if(n!==undefined){let u=this.getAttribute("normal");if(u===undefined)u=new p(new Float32Array(n.count*3),3),this.setAttribute("normal",u);else for(let n=0,t=u.count;n<t;n++)u.setXYZ(n,0,0,0);const h=new t,f=new t,c=new t,e=new t,o=new t,s=new t,r=new t,l=new t;if(i)for(let t=0,a=i.count;t<a;t+=3){const a=i.getX(t+0),v=i.getX(t+1),y=i.getX(t+2);h.fromBufferAttribute(n,a);f.fromBufferAttribute(n,v);c.fromBufferAttribute(n,y);r.subVectors(c,f);l.subVectors(h,f);r.cross(l);e.fromBufferAttribute(u,a);o.fromBufferAttribute(u,v);s.fromBufferAttribute(u,y);e.add(r);o.add(r);s.add(r);u.setXYZ(a,e.x,e.y,e.z);u.setXYZ(v,o.x,o.y,o.z);u.setXYZ(y,s.x,s.y,s.z)}else for(let t=0,i=n.count;t<i;t+=3)h.fromBufferAttribute(n,t+0),f.fromBufferAttribute(n,t+1),c.fromBufferAttribute(n,t+2),r.subVectors(c,f),l.subVectors(h,f),r.cross(l),u.setXYZ(t+0,r.x,r.y,r.z),u.setXYZ(t+1,r.x,r.y,r.z),u.setXYZ(t+2,r.x,r.y,r.z);this.normalizeNormals();u.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const n=this.attributes.normal;for(let t=0,i=n.count;t<i;t++)ft.fromBufferAttribute(n,t),ft.normalize(),n.setXYZ(t,ft.x,ft.y,ft.z)}toNonIndexed(){function t(n,t){const u=n.array,i=n.itemSize,e=n.normalized,f=new u.constructor(t.length*i);let r=0,o=0;for(let e=0,s=t.length;e<s;e++){r=n.isInterleavedBufferAttribute?t[e]*n.data.stride+n.offset:t[e]*i;for(let n=0;n<i;n++)f[o++]=u[r++]}return new p(f,i,e)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new l,i=this.index.array,r=this.attributes;for(const u in r){const f=r[u],e=t(f,i);n.setAttribute(u,e)}const u=this.morphAttributes;for(const r in u){const f=[],e=u[r];for(let n=0,r=e.length;n<r;n++){const r=e[n],u=t(r,i);f.push(u)}n.morphAttributes[r]=f}n.morphTargetsRelative=this.morphTargetsRelative;const f=this.groups;for(let t=0,i=f.length;t<i;t++){const i=f[t];n.addGroup(i.start,i.count,i.materialIndex)}return n}toJSON(){const n={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),Object.keys(this.userData).length>0&&(n.userData=this.userData),this.parameters!==undefined){const t=this.parameters;for(const i in t)t[i]!==undefined&&(n[i]=t[i]);return n}n.data={attributes:{}};const t=this.index;t!==null&&(n.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const r=this.attributes;for(const t in r){const i=r[t];n.data.attributes[t]=i.toJSON(n.data)}const u={};let f=!1;for(const t in this.morphAttributes){const r=this.morphAttributes[t],i=[];for(let t=0,u=r.length;t<u;t++){const u=r[t];i.push(u.toJSON(n.data))}i.length>0&&(u[t]=i,f=!0)}f&&(n.data.morphAttributes=u,n.data.morphTargetsRelative=this.morphTargetsRelative);const e=this.groups;e.length>0&&(n.data.groups=JSON.parse(JSON.stringify(e)));const i=this.boundingSphere;return i!==null&&(n.data.boundingSphere={center:i.center.toArray(),radius:i.radius}),n}clone(){return(new this.constructor).copy(this)}copy(n){this.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;const t={};this.name=n.name;const i=n.index;i!==null&&this.setIndex(i.clone(t));const r=n.attributes;for(const n in r){const i=r[n];this.setAttribute(n,i.clone(t))}const u=n.morphAttributes;for(const n in u){const i=[],r=u[n];for(let n=0,u=r.length;n<u;n++)i.push(r[n].clone(t));this.morphAttributes[n]=i}this.morphTargetsRelative=n.morphTargetsRelative;const f=n.groups;for(let n=0,t=f.length;n<t;n++){const t=f[n];this.addGroup(t.start,t.count,t.materialIndex)}const e=n.boundingBox;e!==null&&(this.boundingBox=e.clone());const o=n.boundingSphere;return o!==null&&(this.boundingSphere=o.clone()),this.drawRange.start=n.drawRange.start,this.drawRange.count=n.drawRange.count,this.userData=n.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const att=new o,uf=new ce,rl=new hi,vtt=new t,we=new t,be=new t,ke=new t,bw=new t,ul=new t,fl=new i,el=new i,ol=new i,ytt=new t,ptt=new t,wtt=new t,sl=new t,hl=new t;class et extends v{constructor(n=new l,t=new hu){super();this.isMesh=!0;this.type="Mesh";this.geometry=n;this.material=t;this.updateMorphTargets()}copy(n,t){return super.copy(n,t),n.morphTargetInfluences!==undefined&&(this.morphTargetInfluences=n.morphTargetInfluences.slice()),n.morphTargetDictionary!==undefined&&(this.morphTargetDictionary=Object.assign({},n.morphTargetDictionary)),this.material=n.material,this.geometry=n.geometry,this}updateMorphTargets(){const i=this.geometry,n=i.morphAttributes,t=Object.keys(n);if(t.length>0){const i=n[t[0]];if(i!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let n=0,t=i.length;n<t;n++){const t=i[n].name||String(n);this.morphTargetInfluences.push(0);this.morphTargetDictionary[t]=n}}}}getVertexPosition(n,t){const i=this.geometry,f=i.attributes.position,r=i.morphAttributes.position,e=i.morphTargetsRelative;t.fromBufferAttribute(f,n);const u=this.morphTargetInfluences;if(r&&u){ul.set(0,0,0);for(let i=0,f=r.length;i<f;i++){const f=u[i],o=r[i];f!==0&&(bw.fromBufferAttribute(o,n),e?ul.addScaledVector(bw,f):ul.addScaledVector(bw.sub(t),f))}t.add(ul)}return t}raycast(n,t){const i=this.geometry,u=this.material,r=this.matrixWorld;if(u!==undefined){if(i.boundingSphere===null&&i.computeBoundingSphere(),rl.copy(i.boundingSphere),rl.applyMatrix4(r),uf.copy(n.ray).recast(n.near),rl.containsPoint(uf.origin)===!1){if(uf.intersectSphere(rl,vtt)===null)return;if(uf.origin.distanceToSquared(vtt)>(n.far-n.near)**2)return}(att.copy(r).invert(),uf.copy(n.ray).applyMatrix4(att),i.boundingBox===null||uf.intersectsBox(i.boundingBox)!==!1)&&this._computeIntersections(n,t,uf)}}_computeIntersections(n,t,i){let r;const e=this.geometry,o=this.material,f=e.index,a=e.attributes.position,s=e.attributes.uv,h=e.attributes.uv1,c=e.attributes.normal,l=e.groups,u=e.drawRange;if(f!==null)if(Array.isArray(o))for(let e=0,a=l.length;e<a;e++){const a=l[e],v=o[a.materialIndex],y=Math.max(a.start,u.start),p=Math.min(f.count,Math.min(a.start+a.count,u.start+u.count));for(let u=y,e=p;u<e;u+=3){const e=f.getX(u),o=f.getX(u+1),l=f.getX(u+2);r=cl(this,v,n,i,s,h,c,e,o,l);r&&(r.faceIndex=Math.floor(u/3),r.face.materialIndex=a.materialIndex,t.push(r))}}else{const e=Math.max(0,u.start),l=Math.min(f.count,u.start+u.count);for(let u=e,a=l;u<a;u+=3){const e=f.getX(u),l=f.getX(u+1),a=f.getX(u+2);r=cl(this,o,n,i,s,h,c,e,l,a);r&&(r.faceIndex=Math.floor(u/3),t.push(r))}}else if(a!==undefined)if(Array.isArray(o))for(let f=0,e=l.length;f<e;f++){const e=l[f],v=o[e.materialIndex],y=Math.max(e.start,u.start),p=Math.min(a.count,Math.min(e.start+e.count,u.start+u.count));for(let u=y,f=p;u<f;u+=3){const f=u,o=u+1,l=u+2;r=cl(this,v,n,i,s,h,c,f,o,l);r&&(r.faceIndex=Math.floor(u/3),r.face.materialIndex=e.materialIndex,t.push(r))}}else{const f=Math.max(0,u.start),e=Math.min(a.count,u.start+u.count);for(let u=f,l=e;u<l;u+=3){const f=u,e=u+1,l=u+2;r=cl(this,o,n,i,s,h,c,f,e,l);r&&(r.faceIndex=Math.floor(u/3),t.push(r))}}}}class ff extends l{constructor(n=1,i=1,r=1,u=1,e=1,o=1){function s(n,i,r,u,f,e,o,s,w,b,k){const it=e/w,rt=o/b,ut=e/2,ft=o/2,et=s/2,g=w+1,ot=b+1;let tt=0,nt=0;const d=new t;for(let t=0;t<ot;t++){const e=t*rt-ft;for(let o=0;o<g;o++){const h=o*it-ut;d[n]=h*u;d[i]=e*f;d[r]=et;a.push(d.x,d.y,d.z);d[n]=0;d[i]=0;d[r]=s>0?1:-1;v.push(d.x,d.y,d.z);l.push(o/w);l.push(1-t/b);tt+=1}}for(let n=0;n<b;n++)for(let t=0;t<w;t++){const u=h+t+g*n,i=h+t+g*(n+1),f=h+(t+1)+g*(n+1),r=h+(t+1)+g*n;c.push(u,i,r);c.push(i,f,r);nt+=6}p.addGroup(y,nt,k);y+=nt;h+=tt}super();this.type="BoxGeometry";this.parameters={width:n,height:i,depth:r,widthSegments:u,heightSegments:e,depthSegments:o};const p=this;u=Math.floor(u);e=Math.floor(e);o=Math.floor(o);const c=[],a=[],v=[],l=[];let h=0,y=0;s("z","y","x",-1,-1,r,i,n,o,e,0);s("z","y","x",1,-1,r,i,-n,o,e,1);s("x","z","y",1,1,n,r,i,u,o,2);s("x","z","y",1,-1,n,r,-i,u,o,3);s("x","y","z",1,-1,n,i,r,u,e,4);s("x","y","z",-1,-1,n,i,-r,u,e,5);this.setIndex(c);this.setAttribute("position",new f(a,3));this.setAttribute("normal",new f(v,3));this.setAttribute("uv",new f(l,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new ff(n.width,n.height,n.depth,n.widthSegments,n.heightSegments,n.depthSegments)}}const ktt={clone:de,merge:vt};dtt="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";gtt="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class tr extends ct{constructor(n){super();this.isShaderMaterial=!0;this.type="ShaderMaterial";this.defines={};this.uniforms={};this.uniformsGroups=[];this.vertexShader=dtt;this.fragmentShader=gtt;this.linewidth=1;this.wireframe=!1;this.wireframeLinewidth=1;this.fog=!1;this.lights=!1;this.clipping=!1;this.forceSinglePass=!0;this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1};this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]};this.index0AttributeName=undefined;this.uniformsNeedUpdate=!1;this.glslVersion=null;n!==undefined&&this.setValues(n)}copy(n){return super.copy(n),this.fragmentShader=n.fragmentShader,this.vertexShader=n.vertexShader,this.uniforms=de(n.uniforms),this.uniformsGroups=nct(n.uniformsGroups),this.defines=Object.assign({},n.defines),this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.fog=n.fog,this.lights=n.lights,this.clipping=n.clipping,this.extensions=Object.assign({},n.extensions),this.glslVersion=n.glslVersion,this}toJSON(n){const t=super.toJSON(n);t.glslVersion=this.glslVersion;t.uniforms={};for(const i in this.uniforms){const u=this.uniforms[i],r=u.value;t.uniforms[i]=r&&r.isTexture?{type:"t",value:r.toJSON(n).uuid}:r&&r.isColor?{type:"c",value:r.getHex()}:r&&r.isVector2?{type:"v2",value:r.toArray()}:r&&r.isVector3?{type:"v3",value:r.toArray()}:r&&r.isVector4?{type:"v4",value:r.toArray()}:r&&r.isMatrix3?{type:"m3",value:r.toArray()}:r&&r.isMatrix4?{type:"m4",value:r.toArray()}:{value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines);t.vertexShader=this.vertexShader;t.fragmentShader=this.fragmentShader;t.lights=this.lights;t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class ll extends v{constructor(){super();this.isCamera=!0;this.type="Camera";this.matrixWorldInverse=new o;this.projectionMatrix=new o;this.projectionMatrixInverse=new o;this.coordinateSystem=gi}copy(n,t){return super.copy(n,t),this.matrixWorldInverse.copy(n.matrixWorldInverse),this.projectionMatrix.copy(n.projectionMatrix),this.projectionMatrixInverse.copy(n.projectionMatrixInverse),this.coordinateSystem=n.coordinateSystem,this}getWorldDirection(n){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return n.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(n){super.updateMatrixWorld(n);this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(n,t){super.updateWorldMatrix(n,t);this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class ot extends ll{constructor(n=50,t=1,i=.1,r=2e3){super();this.isPerspectiveCamera=!0;this.type="PerspectiveCamera";this.fov=n;this.zoom=1;this.near=i;this.far=r;this.focus=10;this.aspect=t;this.view=null;this.filmGauge=35;this.filmOffset=0;this.updateProjectionMatrix()}copy(n,t){return super.copy(n,t),this.fov=n.fov,this.zoom=n.zoom,this.near=n.near,this.far=n.far,this.focus=n.focus,this.aspect=n.aspect,this.view=n.view===null?null:Object.assign({},n.view),this.filmGauge=n.filmGauge,this.filmOffset=n.filmOffset,this}setFocalLength(n){const t=.5*this.getFilmHeight()/n;this.fov=ie*2*Math.atan(t);this.updateProjectionMatrix()}getFocalLength(){const n=Math.tan(gu*.5*this.fov);return.5*this.getFilmHeight()/n}getEffectiveFOV(){return ie*2*Math.atan(Math.tan(gu*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(n,t,i,r,u,f){this.aspect=n/t;this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=n;this.view.fullHeight=t;this.view.offsetX=i;this.view.offsetY=r;this.view.width=u;this.view.height=f;this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1);this.updateProjectionMatrix()}updateProjectionMatrix(){const f=this.near;let t=f*Math.tan(gu*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,u=-.5*r;const n=this.view;if(this.view!==null&&this.view.enabled){const f=n.fullWidth,e=n.fullHeight;u+=n.offsetX*r/f;t-=n.offsetY*i/e;r*=n.width/f;i*=n.height/e}const e=this.filmOffset;e!==0&&(u+=f*e/this.getFilmWidth());this.projectionMatrix.makePerspective(u,u+r,t,t-i,f,this.far,this.coordinateSystem);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(n){const t=super.toJSON(n);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ge=-90,no=1;class nit extends v{constructor(n,t,i){super();this.type="CubeCamera";this.renderTarget=i;this.coordinateSystem=null;const r=new ot(ge,no,n,t);r.layers=this.layers;this.add(r);const u=new ot(ge,no,n,t);u.layers=this.layers;this.add(u);const f=new ot(ge,no,n,t);f.layers=this.layers;this.add(f);const e=new ot(ge,no,n,t);e.layers=this.layers;this.add(e);const o=new ot(ge,no,n,t);o.layers=this.layers;this.add(o);const s=new ot(ge,no,n,t);s.layers=this.layers;this.add(s)}updateCoordinateSystem(){const e=this.coordinateSystem,o=this.children.concat(),[n,t,i,r,u,f]=o;for(const n of o)this.remove(n);if(e===gi)n.up.set(0,1,0),n.lookAt(1,0,0),t.up.set(0,1,0),t.lookAt(-1,0,0),i.up.set(0,0,-1),i.lookAt(0,1,0),r.up.set(0,0,1),r.lookAt(0,-1,0),u.up.set(0,1,0),u.lookAt(0,0,1),f.up.set(0,1,0),f.lookAt(0,0,-1);else if(e===os)n.up.set(0,-1,0),n.lookAt(-1,0,0),t.up.set(0,-1,0),t.lookAt(1,0,0),i.up.set(0,0,1),i.lookAt(0,1,0),r.up.set(0,0,-1),r.lookAt(0,-1,0),u.up.set(0,-1,0),u.lookAt(0,0,1),f.up.set(0,-1,0),f.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const n of o)this.add(n),n.updateMatrixWorld()}update(n,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget;this.coordinateSystem!==n.coordinateSystem&&(this.coordinateSystem=n.coordinateSystem,this.updateCoordinateSystem());const[r,u,f,e,o,s]=this.children,h=n.getRenderTarget(),c=n.toneMapping,l=n.xr.enabled;n.toneMapping=ki;n.xr.enabled=!1;const a=i.texture.generateMipmaps;i.texture.generateMipmaps=!1;n.setRenderTarget(i,0);n.render(t,r);n.setRenderTarget(i,1);n.render(t,u);n.setRenderTarget(i,2);n.render(t,f);n.setRenderTarget(i,3);n.render(t,e);n.setRenderTarget(i,4);n.render(t,o);i.texture.generateMipmaps=a;n.setRenderTarget(i,5);n.render(t,s);n.setRenderTarget(h);n.toneMapping=c;n.xr.enabled=l;i.texture.needsPMREMUpdate=!0}}class ws extends tt{constructor(n,t,i,r,u,f,e,o,s,h){n=n!==undefined?n:[];t=t!==undefined?t:kr;super(n,t,i,r,u,f,e,o,s,h);this.isCubeTexture=!0;this.flipY=!1}get images(){return this.image}set images(n){this.image=n}}class tit extends si{constructor(n=1,t={}){super(n,n,t);this.isWebGLCubeRenderTarget=!0;const i={width:n,height:n,depth:1},r=[i,i,i,i,i,i];t.encoding!==undefined&&(cs("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===iu?e:uu);this.texture=new ws(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace);this.texture.isRenderTargetTexture=!0;this.texture.generateMipmaps=t.generateMipmaps!==undefined?t.generateMipmaps:!1;this.texture.minFilter=t.minFilter!==undefined?t.minFilter:g}fromEquirectangularTexture(n,t){this.texture.type=t.type;this.texture.colorSpace=t.colorSpace;this.texture.generateMipmaps=t.generateMipmaps;this.texture.minFilter=t.minFilter;this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},f=new ff(5,5,5),u=new tr({name:"CubemapFromEquirect",uniforms:de(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:at,blending:ur});u.uniforms.tEquirect.value=t;const r=new et(f,u),e=t.minFilter;t.minFilter===gr&&(t.minFilter=g);const o=new nit(1,10,this);return o.update(n,r),t.minFilter=e,r.geometry.dispose(),r.material.dispose(),this}clear(n,t,i,r){const u=n.getRenderTarget();for(let u=0;u<6;u++)n.setRenderTarget(this,u),n.clear(t,i,r);n.setRenderTarget(u)}}const kw=new t,tct=new t,ict=new c;class cu{constructor(n=new t(1,0,0),i=0){this.isPlane=!0;this.normal=n;this.constant=i}set(n,t){return this.normal.copy(n),this.constant=t,this}setComponents(n,t,i,r){return this.normal.set(n,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(n,t){return this.normal.copy(n),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(n,t,i){const r=kw.subVectors(i,t).cross(tct.subVectors(n,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,n),this}copy(n){return this.normal.copy(n.normal),this.constant=n.constant,this}normalize(){const n=1/this.normal.length();return this.normal.multiplyScalar(n),this.constant*=n,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(n){return this.normal.dot(n)+this.constant}distanceToSphere(n){return this.distanceToPoint(n.center)-n.radius}projectPoint(n,t){return t.copy(n).addScaledVector(this.normal,-this.distanceToPoint(n))}intersectLine(n,t){const r=n.delta(kw),u=this.normal.dot(r);if(u===0)return this.distanceToPoint(n.start)===0?t.copy(n.start):null;const i=-(n.start.dot(this.normal)+this.constant)/u;return i<0||i>1?null:t.copy(n.start).addScaledVector(r,i)}intersectsLine(n){const t=this.distanceToPoint(n.start),i=this.distanceToPoint(n.end);return t<0&&i>0||i<0&&t>0}intersectsBox(n){return n.intersectsPlane(this)}intersectsSphere(n){return n.intersectsPlane(this)}coplanarPoint(n){return n.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(n,t){const i=t||ict.getNormalMatrix(n),r=this.coplanarPoint(kw).applyMatrix4(n),u=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(u),this}translate(n){return this.constant-=n.dot(this.normal),this}equals(n){return n.normal.equals(this.normal)&&n.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const ef=new hi,al=new t;class vl{constructor(n=new cu,t=new cu,i=new cu,r=new cu,u=new cu,f=new cu){this.planes=[n,t,i,r,u,f]}set(n,t,i,r,u,f){const e=this.planes;return e[0].copy(n),e[1].copy(t),e[2].copy(i),e[3].copy(r),e[4].copy(u),e[5].copy(f),this}copy(n){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(n.planes[i]);return this}setFromProjectionMatrix(n,t=gi){const r=this.planes,i=n.elements,a=i[0],v=i[1],s=i[2],u=i[3],y=i[4],p=i[5],h=i[6],f=i[7],w=i[8],b=i[9],c=i[10],e=i[11],k=i[12],d=i[13],l=i[14],o=i[15];if(r[0].setComponents(u-a,f-y,e-w,o-k).normalize(),r[1].setComponents(u+a,f+y,e+w,o+k).normalize(),r[2].setComponents(u+v,f+p,e+b,o+d).normalize(),r[3].setComponents(u-v,f-p,e-b,o-d).normalize(),r[4].setComponents(u-s,f-h,e-c,o-l).normalize(),t===gi)r[5].setComponents(u+s,f+h,e+c,o+l).normalize();else if(t===os)r[5].setComponents(s,h,c,l).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(n){if(n.boundingSphere!==undefined)n.boundingSphere===null&&n.computeBoundingSphere(),ef.copy(n.boundingSphere).applyMatrix4(n.matrixWorld);else{const t=n.geometry;t.boundingSphere===null&&t.computeBoundingSphere();ef.copy(t.boundingSphere).applyMatrix4(n.matrixWorld)}return this.intersectsSphere(ef)}intersectsSprite(n){return ef.center.set(0,0,0),ef.radius=.70710678118654757,ef.applyMatrix4(n.matrixWorld),this.intersectsSphere(ef)}intersectsSphere(n){const t=this.planes,i=n.center,r=-n.radius;for(let n=0;n<6;n++){const u=t[n].distanceToPoint(i);if(u<r)return!1}return!0}intersectsBox(n){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(al.x=r.normal.x>0?n.max.x:n.min.x,al.y=r.normal.y>0?n.max.y:n.min.y,al.z=r.normal.z>0?n.max.z:n.min.z,r.distanceToPoint(al)<0)return!1}return!0}containsPoint(n){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(n)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}class bs extends l{constructor(n=1,t=1,i=1,r=1){super();this.type="PlaneGeometry";this.parameters={width:n,height:t,widthSegments:i,heightSegments:r};const a=n/2,v=t/2,e=Math.floor(i),o=Math.floor(r),u=e+1,y=o+1,p=n/e,w=t/o,s=[],c=[],l=[],h=[];for(let n=0;n<y;n++){const t=n*w-v;for(let i=0;i<u;i++){const r=i*p-a;c.push(r,-t,0);l.push(0,0,1);h.push(i/e);h.push(1-n/o)}}for(let n=0;n<o;n++)for(let t=0;t<e;t++){const f=t+u*n,i=t+u*(n+1),e=t+1+u*(n+1),r=t+1+u*n;s.push(f,i,r);s.push(i,e,r)}this.setIndex(s);this.setAttribute("position",new f(c,3));this.setAttribute("normal",new f(l,3));this.setAttribute("uv",new f(h,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new bs(n.width,n.height,n.widthSegments,n.heightSegments)}}const h={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#ifdef USE_ENVMAP\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\t#ifdef USE_ANISOTROPY\n\t\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n\t\t\t#ifdef ENVMAP_TYPE_CUBE_UV\n\t\t\t\tvec3 bentNormal = cross( bitangent, viewDir );\n\t\t\t\tbentNormal = normalize( cross( bentNormal, bitangent ) );\n\t\t\t\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n\t\t\t\treturn getIBLRadiance( viewDir, bentNormal, roughness );\n\t\t\t#else\n\t\t\t\treturn vec3( 0.0 );\n\t\t\t#endif\n\t\t}\n\t#endif\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\t#ifdef USE_ANISOTROPYMAP\n\t\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n\t\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n\t\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n\t#else\n\t\tvec2 anisotropyV = anisotropyVector;\n\t#endif\n\tmaterial.anisotropy = length( anisotropyV );\n\tanisotropyV /= material.anisotropy;\n\tmaterial.anisotropy = saturate( material.anisotropy );\n\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;\n\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat anisotropy;\n\t\tfloat alphaT;\n\t\tvec3 anisotropyT;\n\t\tvec3 anisotropyB;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n\t\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n\t\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n\t\tfloat v = 0.5 / ( gv + gl );\n\t\treturn saturate(v);\n\t}\n\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n\t\tfloat a2 = alphaT * alphaB;\n\t\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n\t\thighp float v2 = dot( v, v );\n\t\tfloat w2 = a2 / v2;\n\t\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\n\t}\n#endif\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\t#ifdef USE_ANISOTROPY\n\t\tfloat dotTL = dot( material.anisotropyT, lightDir );\n\t\tfloat dotTV = dot( material.anisotropyT, viewDir );\n\t\tfloat dotTH = dot( material.anisotropyT, halfDir );\n\t\tfloat dotBL = dot( material.anisotropyB, lightDir );\n\t\tfloat dotBV = dot( material.anisotropyB, viewDir );\n\t\tfloat dotBH = dot( material.anisotropyB, halfDir );\n\t\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n\t\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n\t#else\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t#endif\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\t#ifdef USE_ANISOTROPY\n\t\tradiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );\n\t#else\n\t\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, vMapUv );\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmitted = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn vec3( 1.0 );\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n\t}\n#endif",uv_pars_fragment:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tuniform mat3 anisotropyMapTransform;\n\tvarying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\n#ifdef USE_ANISOTROPY\n\tuniform vec2 anisotropyVector;\n\t#ifdef USE_ANISOTROPYMAP\n\t\tuniform sampler2D anisotropyMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},r={common:{diffuse:{value:new u(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new c},alphaMap:{value:null},alphaMapTransform:{value:new c},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new c}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new c}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new c}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new c},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new c},normalScale:{value:new i(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new c},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new c}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new c}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new c}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:.00025},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new u(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new u(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new c},alphaTest:{value:0},uvTransform:{value:new c}},sprite:{diffuse:{value:new u(16777215)},opacity:{value:1},center:{value:new i(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new c},alphaMap:{value:null},alphaMapTransform:{value:new c},alphaTest:{value:0}}},vi={basic:{uniforms:vt([r.common,r.specularmap,r.envmap,r.aomap,r.lightmap,r.fog]),vertexShader:h.meshbasic_vert,fragmentShader:h.meshbasic_frag},lambert:{uniforms:vt([r.common,r.specularmap,r.envmap,r.aomap,r.lightmap,r.emissivemap,r.bumpmap,r.normalmap,r.displacementmap,r.fog,r.lights,{emissive:{value:new u(0)}}]),vertexShader:h.meshlambert_vert,fragmentShader:h.meshlambert_frag},phong:{uniforms:vt([r.common,r.specularmap,r.envmap,r.aomap,r.lightmap,r.emissivemap,r.bumpmap,r.normalmap,r.displacementmap,r.fog,r.lights,{emissive:{value:new u(0)},specular:{value:new u(1118481)},shininess:{value:30}}]),vertexShader:h.meshphong_vert,fragmentShader:h.meshphong_frag},standard:{uniforms:vt([r.common,r.envmap,r.aomap,r.lightmap,r.emissivemap,r.bumpmap,r.normalmap,r.displacementmap,r.roughnessmap,r.metalnessmap,r.fog,r.lights,{emissive:{value:new u(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:h.meshphysical_vert,fragmentShader:h.meshphysical_frag},toon:{uniforms:vt([r.common,r.aomap,r.lightmap,r.emissivemap,r.bumpmap,r.normalmap,r.displacementmap,r.gradientmap,r.fog,r.lights,{emissive:{value:new u(0)}}]),vertexShader:h.meshtoon_vert,fragmentShader:h.meshtoon_frag},matcap:{uniforms:vt([r.common,r.bumpmap,r.normalmap,r.displacementmap,r.fog,{matcap:{value:null}}]),vertexShader:h.meshmatcap_vert,fragmentShader:h.meshmatcap_frag},points:{uniforms:vt([r.points,r.fog]),vertexShader:h.points_vert,fragmentShader:h.points_frag},dashed:{uniforms:vt([r.common,r.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:h.linedashed_vert,fragmentShader:h.linedashed_frag},depth:{uniforms:vt([r.common,r.displacementmap]),vertexShader:h.depth_vert,fragmentShader:h.depth_frag},normal:{uniforms:vt([r.common,r.bumpmap,r.normalmap,r.displacementmap,{opacity:{value:1}}]),vertexShader:h.meshnormal_vert,fragmentShader:h.meshnormal_frag},sprite:{uniforms:vt([r.sprite,r.fog]),vertexShader:h.sprite_vert,fragmentShader:h.sprite_frag},background:{uniforms:{uvTransform:{value:new c},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:h.background_vert,fragmentShader:h.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:h.backgroundCube_vert,fragmentShader:h.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:h.cube_vert,fragmentShader:h.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:h.equirect_vert,fragmentShader:h.equirect_frag},distanceRGBA:{uniforms:vt([r.common,r.displacementmap,{referencePosition:{value:new t},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:h.distanceRGBA_vert,fragmentShader:h.distanceRGBA_frag},shadow:{uniforms:vt([r.lights,r.fog,{color:{value:new u(0)},opacity:{value:1}},]),vertexShader:h.shadow_vert,fragmentShader:h.shadow_frag}};vi.physical={uniforms:vt([vi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new c},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new c},clearcoatNormalScale:{value:new i(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new c},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new c},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new c},sheen:{value:0},sheenColor:{value:new u(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new c},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new c},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new c},transmissionSamplerSize:{value:new i},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new c},attenuationDistance:{value:0},attenuationColor:{value:new u(0)},specularColor:{value:new u(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new c},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new c},anisotropyVector:{value:new i},anisotropyMap:{value:null},anisotropyMapTransform:{value:new c}}]),vertexShader:h.meshphysical_vert,fragmentShader:h.meshphysical_frag};const yl={r:0,b:0,g:0};class pl extends ll{constructor(n=-1,t=1,i=1,r=-1,u=.1,f=2e3){super();this.isOrthographicCamera=!0;this.type="OrthographicCamera";this.zoom=1;this.view=null;this.left=n;this.right=t;this.top=i;this.bottom=r;this.near=u;this.far=f;this.updateProjectionMatrix()}copy(n,t){return super.copy(n,t),this.left=n.left,this.right=n.right,this.top=n.top,this.bottom=n.bottom,this.near=n.near,this.far=n.far,this.zoom=n.zoom,this.view=n.view===null?null:Object.assign({},n.view),this}setViewOffset(n,t,i,r,u,f){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1});this.view.enabled=!0;this.view.fullWidth=n;this.view.fullHeight=t;this.view.offsetX=i;this.view.offsetY=r;this.view.width=u;this.view.height=f;this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1);this.updateProjectionMatrix()}updateProjectionMatrix(){const i=(this.right-this.left)/(2*this.zoom),r=(this.top-this.bottom)/(2*this.zoom),u=(this.right+this.left)/2,f=(this.top+this.bottom)/2;let n=u-i,e=u+i,t=f+r,o=f-r;if(this.view!==null&&this.view.enabled){const i=(this.right-this.left)/this.view.fullWidth/this.zoom,r=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=i*this.view.offsetX;e=n+i*this.view.width;t-=r*this.view.offsetY;o=t-r*this.view.height}this.projectionMatrix.makeOrthographic(n,e,t,o,this.near,this.far,this.coordinateSystem);this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(n){const t=super.toJSON(n);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const to=4,rit=[.125,.215,.35,.446,.526,.582],sf=20,dw=new pl,uit=new u;let gw=null;const hf=(1+Math.sqrt(5))/2,io=1/hf,fit=[new t(1,1,1),new t(-1,1,1),new t(1,1,-1),new t(-1,1,-1),new t(0,hf,io),new t(0,hf,-io),new t(io,0,hf),new t(-io,0,hf),new t(hf,io,0),new t(-hf,io,0)];class nb{constructor(n){this._renderer=n;this._pingPongRenderTarget=null;this._lodMax=0;this._cubeSize=0;this._lodPlanes=[];this._sizeLods=[];this._sigmas=[];this._blurMaterial=null;this._cubemapMaterial=null;this._equirectMaterial=null;this._compileMaterial(this._blurMaterial)}fromScene(n,t=0,i=.1,r=100){gw=this._renderer.getRenderTarget();this._setSize(256);const u=this._allocateTargets();return u.depthBuffer=!0,this._sceneToCubeUV(n,i,r,u),t>0&&this._blur(u,0,0,t),this._applyPMREM(u),this._cleanup(u),u}fromEquirectangular(n,t=null){return this._fromTexture(n,t)}fromCubemap(n,t=null){return this._fromTexture(n,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=sit(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=oit(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose();this._cubemapMaterial!==null&&this._cubemapMaterial.dispose();this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(n){this._lodMax=Math.floor(Math.log2(n));this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose();this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let n=0;n<this._lodPlanes.length;n++)this._lodPlanes[n].dispose()}_cleanup(n){this._renderer.setRenderTarget(gw);n.scissorTest=!1;wl(n,0,0,n.width,n.height)}_fromTexture(n,t){n.mapping===kr||n.mapping===dr?this._setSize(n.image.length===0?16:n.image[0].width||n.image[0].image.width):this._setSize(n.image.width/4);gw=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(n,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const n=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:g,minFilter:g,generateMipmaps:!1,type:te,format:kt,colorSpace:oi,depthBuffer:!1},r=eit(n,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==n||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose();this._pingPongRenderTarget=eit(n,t,i);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas})=cct(r);this._blurMaterial=lct(r,n,t)}return r}_compileMaterial(n){const t=new et(this._lodPlanes[0],n);this._renderer.compile(t,dw)}_sceneToCubeUV(n,t,i,r){const f=new ot(90,1,t,i),o=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],u=this._renderer,a=u.autoClear,v=u.toneMapping;u.getClearColor(uit);u.toneMapping=ki;u.autoClear=!1;const h=new hu({name:"PMREM.Background",side:at,depthWrite:!1,depthTest:!1}),c=new et(new ff,h);let l=!1;const e=n.background;e?e.isColor&&(h.color.copy(e),n.background=null,l=!0):(h.color.copy(uit),l=!0);for(let t=0;t<6;t++){const e=t%3;e===0?(f.up.set(0,o[t],0),f.lookAt(s[t],0,0)):e===1?(f.up.set(0,0,o[t]),f.lookAt(0,s[t],0)):(f.up.set(0,o[t],0),f.lookAt(0,0,s[t]));const i=this._cubeSize;wl(r,e*i,t>2?i:0,i,i);u.setRenderTarget(r);l&&u.render(c,f);u.render(n,f)}c.geometry.dispose();c.material.dispose();u.toneMapping=v;u.autoClear=a;n.background=e}_textureToCubeUV(n,t){const i=this._renderer,r=n.mapping===kr||n.mapping===dr;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=sit()),this._cubemapMaterial.uniforms.flipEnvMap.value=n.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=oit());const u=r?this._cubemapMaterial:this._equirectMaterial,e=new et(this._lodPlanes[0],u),o=u.uniforms;o.envMap.value=n;const f=this._cubeSize;wl(t,0,0,3*f,2*f);i.setRenderTarget(t);i.render(e,dw)}_applyPMREM(n){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const i=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),r=fit[(t-1)%fit.length];this._blur(n,t-1,t,i,r)}t.autoClear=i}_blur(n,t,i,r,u){const f=this._pingPongRenderTarget;this._halfBlur(n,f,t,i,r,"latitudinal",u);this._halfBlur(f,n,i,i,r,"longitudinal",u)}_halfBlur(n,t,i,r,u,f,e){const v=this._renderer,y=this._blurMaterial;f!=="latitudinal"&&f!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const b=new et(this._lodPlanes[r],y),o=y.uniforms,k=this._sizeLods[i]-1,p=isFinite(u)?Math.PI/(2*k):2*Math.PI/(2*sf-1),w=u/p,h=isFinite(u)?1+Math.floor(3*w):sf;h>sf&&console.warn(`sigmaRadians, ${u}, is too large and will clip, as it requested ${h} samples when the maximum is set to ${sf}`);const s=[];let l=0;for(let n=0;n<sf;++n){const i=n/w,t=Math.exp(-i*i/2);s.push(t);n===0?l+=t:n<h&&(l+=2*t)}for(let n=0;n<s.length;n++)s[n]=s[n]/l;o.envMap.value=n.texture;o.samples.value=h;o.weights.value=s;o.latitudinal.value=f==="latitudinal";e&&(o.poleAxis.value=e);const{_lodMax:a}=this;o.dTheta.value=p;o.mipInt.value=a-i;const c=this._sizeLods[r],d=3*c*(r>a-to?r-a+to:0),g=4*(this._cubeSize-c);wl(t,d,g,3*c,2*c);v.setRenderTarget(t);v.render(b,dw)}}const hit=new tt,cit=new ac,lit=new iw,ait=new ws,vit=[],yit=[],pit=new Float32Array(16),wit=new Float32Array(9),bit=new Float32Array(4);class dat{constructor(n,t,i){this.id=n;this.addr=i;this.cache=[];this.setValue=dlt(t.type)}}class gat{constructor(n,t,i){this.id=n;this.addr=i;this.cache=[];this.size=t.size;this.setValue=kat(t.type)}}class nvt{constructor(n){this.id=n;this.seq=[];this.map={}}setValue(n,t,i){const r=this.seq;for(let u=0,f=r.length;u!==f;++u){const f=r[u];f.setValue(n,t[f.id],i)}}}const ib=/(\w+)(\])?(\[|\.)?/g;class kl{constructor(n,t){this.seq=[];this.map={};const i=n.getProgramParameter(t,n.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const i=n.getActiveUniform(t,r),u=n.getUniformLocation(t,i.name);tvt(i,u,this)}}setValue(n,t,i,r){const u=this.map[t];u!==undefined&&u.setValue(n,i,r)}setOptional(n,t,i){const r=t[i];r!==undefined&&this.setValue(n,i,r)}static upload(n,t,i,r){for(let u=0,f=t.length;u!==f;++u){const f=t[u],e=i[f.id];e.needsUpdate!==!1&&f.setValue(n,e.value,r)}}static seqWithValue(n,t){const i=[];for(let r=0,u=n.length;r!==u;++r){const u=n[r];u.id in t&&i.push(u)}return i}}let ivt=0;const cvt=/^[ \t]*#include +<([\w\d./]+)>/gm;const avt=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;let gvt=0;class nyt{constructor(){this.shaderCache=new Map;this.materialCache=new Map}update(n){const u=n.vertexShader,f=n.fragmentShader,i=this._getShaderStage(u),r=this._getShaderStage(f),t=this._getShaderCacheForMaterial(n);return t.has(i)===!1&&(t.add(i),i.usedTimes++),t.has(r)===!1&&(t.add(r),r.usedTimes++),this}remove(n){const t=this.materialCache.get(n);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(n),this}getVertexShaderID(n){return this._getShaderStage(n.vertexShader).id}getFragmentShaderID(n){return this._getShaderStage(n.fragmentShader).id}dispose(){this.shaderCache.clear();this.materialCache.clear()}_getShaderCacheForMaterial(n){const i=this.materialCache;let t=i.get(n);return t===undefined&&(t=new Set,i.set(n,t)),t}_getShaderStage(n){const i=this.shaderCache;let t=i.get(n);return t===undefined&&(t=new tyt(n),i.set(n,t)),t}}class tyt{constructor(n){this.id=gvt++;this.code=n;this.usedTimes=0}}let syt=0;class ub extends ct{constructor(n){super();this.isMeshDepthMaterial=!0;this.type="MeshDepthMaterial";this.depthPacking=on;this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(n)}copy(n){return super.copy(n),this.depthPacking=n.depthPacking,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this}}class fb extends ct{constructor(n){super();this.isMeshDistanceMaterial=!0;this.type="MeshDistanceMaterial";this.map=null;this.alphaMap=null;this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.setValues(n)}copy(n){return super.copy(n),this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this}}const ayt="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",vyt="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";class srt extends ot{constructor(n=[]){super();this.isArrayCamera=!0;this.cameras=n}}class uo extends v{constructor(){super();this.isGroup=!0;this.type="Group"}}const byt={type:"move"};class eb{constructor(){this._targetRay=null;this._grip=null;this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new uo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new uo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new t,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new t),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new uo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new t,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new t),this._grip}dispatchEvent(n){return this._targetRay!==null&&this._targetRay.dispatchEvent(n),this._grip!==null&&this._grip.dispatchEvent(n),this._hand!==null&&this._hand.dispatchEvent(n),this}connect(n){if(n&&n.hand){const t=this._hand;if(t)for(const i of n.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:n}),this}disconnect(n){return this.dispatchEvent({type:"disconnected",data:n}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(n,t,i){let f=null,e=null,s=null;const r=this._targetRay,u=this._grip,o=this._hand;if(n&&t.session.visibilityState!=="visible-blurred"){if(o&&n.hand){s=!0;for(const r of n.hand.values()){const u=t.getJointPose(r,i),n=this._getHandJoint(o,r);u!==null&&(n.matrix.fromArray(u.transform.matrix),n.matrix.decompose(n.position,n.rotation,n.scale),n.matrixWorldNeedsUpdate=!0,n.jointRadius=u.radius);n.visible=u!==null}const e=o.joints["index-finger-tip"],h=o.joints["thumb-tip"],r=e.position.distanceTo(h.position),u=.02,f=.005;o.inputState.pinching&&r>u+f?(o.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:n.handedness,target:this})):!o.inputState.pinching&&r<=u-f&&(o.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:n.handedness,target:this}))}else u!==null&&n.gripSpace&&(e=t.getPose(n.gripSpace,i),e!==null&&(u.matrix.fromArray(e.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,e.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(e.linearVelocity)):u.hasLinearVelocity=!1,e.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(e.angularVelocity)):u.hasAngularVelocity=!1));r!==null&&(f=t.getPose(n.targetRaySpace,i),f===null&&e!==null&&(f=e),f!==null&&(r.matrix.fromArray(f.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,f.linearVelocity?(r.hasLinearVelocity=!0,r.linearVelocity.copy(f.linearVelocity)):r.hasLinearVelocity=!1,f.angularVelocity?(r.hasAngularVelocity=!0,r.angularVelocity.copy(f.angularVelocity)):r.hasAngularVelocity=!1,this.dispatchEvent(byt)))}return r!==null&&(r.visible=f!==null),u!==null&&(u.visible=e!==null),o!==null&&(o.visible=s!==null),this}_getHandJoint(n,t){if(n.joints[t.jointName]===undefined){const i=new uo;i.matrixAutoUpdate=!1;i.visible=!1;n.joints[t.jointName]=i;n.add(i)}return n.joints[t.jointName]}}class hrt extends tt{constructor(n,t,i,r,u,f,e,o,s,h){if(h=h!==undefined?h:tu,h!==tu&&h!==bu)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===undefined&&h===tu&&(i=er);i===undefined&&h===bu&&(i=nu);super(null,r,u,f,e,o,h,i,s);this.isDepthTexture=!0;this.image={width:n,height:t};this.magFilter=e!==undefined?e:d;this.minFilter=o!==undefined?o:d;this.flipY=!1;this.generateMipmaps=!1;this.compareFunction=null}copy(n){return super.copy(n),this.compareFunction=n.compareFunction,this}toJSON(n){const t=super.toJSON(n);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class kyt extends or{constructor(n,i){function s(n){const i=c.indexOf(n.inputSource);if(i!==-1){const t=o[i];t!==undefined&&(t.update(n.inputSource,n.frame,p||b),t.dispatchEvent({type:n.type,data:n.inputSource}))}}function lt(){r.removeEventListener("select",s);r.removeEventListener("selectstart",s);r.removeEventListener("selectend",s);r.removeEventListener("squeeze",s);r.removeEventListener("squeezestart",s);r.removeEventListener("squeezeend",s);r.removeEventListener("end",lt);r.removeEventListener("inputsourceschange",at);for(let n=0;n<o.length;n++){const t=c[n];t!==null&&(c[n]=null,o[n].disconnect(t))}ut=null;ft=null;n.setRenderTarget(ht);e=null;f=null;k=null;r=null;l=null;g.stop();a.isPresenting=!1;a.dispatchEvent({type:"sessionend"})}function at(n){for(let t=0;t<n.removed.length;t++){const r=n.removed[t],i=c.indexOf(r);i>=0&&(c[i]=null,o[i].disconnect(r))}for(let t=0;t<n.added.length;t++){const r=n.added[t];let i=c.indexOf(r);if(i===-1){for(let n=0;n<o.length;n++)if(n>=c.length){c.push(r);i=n;break}else if(c[n]===null){c[n]=r;i=n;break}if(i===-1)break}const u=o[i];u&&u.connect(r)}}function wt(n,t,i){vt.setFromMatrixPosition(t.matrixWorld);yt.setFromMatrixPosition(i.matrixWorld);const l=vt.distanceTo(yt),r=t.projectionMatrix.elements,a=i.projectionMatrix.elements,f=r[14]/(r[10]-1),e=r[14]/(r[10]+1),y=(r[9]+1)/r[5],p=(r[9]-1)/r[5],o=(r[8]-1)/r[0],v=(a[8]+1)/a[0],w=f*o,b=f*v,u=l/(-o+v),s=u*-o;t.matrixWorld.decompose(n.position,n.quaternion,n.scale);n.translateX(s);n.translateZ(u);n.matrixWorld.compose(n.position,n.quaternion,n.scale);n.matrixWorldInverse.copy(n.matrixWorld).invert();const h=f+u,c=e+u,k=w-s,d=b+(l-s),g=y*e/c*h,nt=p*e/c*h;n.projectionMatrix.makePerspective(k,d,g,nt,h,c);n.projectionMatrixInverse.copy(n.projectionMatrix).invert()}function pt(n,t){t===null?n.matrixWorld.copy(n.matrix):n.matrixWorld.multiplyMatrices(t.matrixWorld,n.matrix);n.matrixWorldInverse.copy(n.matrixWorld).invert()}function bt(n,t){const i=d;t===null?i.matrix.copy(n.matrixWorld):(i.matrix.copy(t.matrixWorld),i.matrix.invert(),i.matrix.multiply(n.matrixWorld));i.matrix.decompose(i.position,i.quaternion,i.scale);i.updateMatrixWorld(!0);const r=i.children;for(let n=0,t=r.length;n<t;n++)r[n].updateMatrixWorld(!0);i.projectionMatrix.copy(n.projectionMatrix);i.projectionMatrixInverse.copy(n.projectionMatrixInverse);i.isPerspectiveCamera&&(i.fov=ie*2*Math.atan(1/i.projectionMatrix.elements[5]),i.zoom=1)}function dt(t,i){if(it=i.getViewerPose(p||b),rt=i,it!==null){const t=it.views;e!==null&&(n.setRenderTargetFramebuffer(l,e.framebuffer),n.setRenderTarget(l));let i=!1;t.length!==u.cameras.length&&(u.cameras.length=0,i=!0);for(let r=0;r<t.length;r++){const h=t[r];let s=null;if(e!==null)s=e.getViewport(h);else{const t=k.getViewSubImage(f,h);s=t.viewport;r===0&&(n.setRenderTargetTextures(l,t.colorTexture,f.ignoreDepthValues?undefined:t.depthStencilTexture),n.setRenderTarget(l))}let o=ct[r];o===undefined&&(o=new ot,o.layers.enable(r),o.viewport=new y,ct[r]=o);o.matrix.fromArray(h.transform.matrix);o.matrix.decompose(o.position,o.quaternion,o.scale);o.projectionMatrix.fromArray(h.projectionMatrix);o.projectionMatrixInverse.copy(o.projectionMatrix).invert();o.viewport.set(s.x,s.y,s.width,s.height);r===0&&(u.matrix.copy(o.matrix),u.matrix.decompose(u.position,u.quaternion,u.scale));i===!0&&u.cameras.push(o)}}for(let n=0;n<o.length;n++){const t=c[n],r=o[n];t!==null&&r!==undefined&&r.update(t,i,p||b)}et&&et(t,i);i.detectedPlanes&&a.dispatchEvent({type:"planesdetected",data:i});rt=null}super();const a=this;let r=null,nt=1,b=null,st="local-floor",tt=1,p=null,it=null,k=null,f=null,e=null,rt=null;const h=i.getContextAttributes();let ht=null,l=null;const o=[],c=[];let d=null;const v=new ot;v.layers.enable(1);v.viewport=new y;const w=new ot;w.layers.enable(2);w.viewport=new y;const ct=[v,w],u=new srt;u.layers.enable(1);u.layers.enable(2);let ut=null,ft=null;this.cameraAutoUpdate=!0;this.enabled=!1;this.isPresenting=!1;this.getCamera=function(){};this.setUserCamera=function(n){d=n};this.getController=function(n){let t=o[n];return t===undefined&&(t=new eb,o[n]=t),t.getTargetRaySpace()};this.getControllerGrip=function(n){let t=o[n];return t===undefined&&(t=new eb,o[n]=t),t.getGripSpace()};this.getHand=function(n){let t=o[n];return t===undefined&&(t=new eb,o[n]=t),t.getHandSpace()};this.setFramebufferScaleFactor=function(n){nt=n;a.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")};this.setReferenceSpaceType=function(n){st=n;a.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")};this.getReferenceSpace=function(){return p||b};this.setReferenceSpace=function(n){p=n};this.getBaseLayer=function(){return f!==null?f:e};this.getBinding=function(){return k};this.getFrame=function(){return rt};this.getSession=function(){return r};this.setSession=async function(t){if(r=t,r!==null){if(ht=n.getRenderTarget(),r.addEventListener("select",s),r.addEventListener("selectstart",s),r.addEventListener("selectend",s),r.addEventListener("squeeze",s),r.addEventListener("squeezestart",s),r.addEventListener("squeezeend",s),r.addEventListener("end",lt),r.addEventListener("inputsourceschange",at),h.xrCompatible!==!0&&await i.makeXRCompatible(),r.renderState.layers===undefined||n.capabilities.isWebGL2===!1){const t={antialias:r.renderState.layers===undefined?h.antialias:!0,alpha:!0,depth:h.depth,stencil:h.stencil,framebufferScaleFactor:nt};e=new XRWebGLLayer(r,i,t);r.updateRenderState({baseLayer:e});l=new si(e.framebufferWidth,e.framebufferHeight,{format:kt,type:fr,colorSpace:n.outputColorSpace,stencilBuffer:h.stencil})}else{let t=null,u=null,e=null;h.depth&&(e=h.stencil?i.DEPTH24_STENCIL8:i.DEPTH_COMPONENT24,t=h.stencil?bu:tu,u=h.stencil?nu:er);const o={colorFormat:i.RGBA8,depthFormat:e,scaleFactor:nt};k=new XRWebGLBinding(r,i);f=k.createProjectionLayer(o);r.updateRenderState({layers:[f]});l=new si(f.textureWidth,f.textureHeight,{format:kt,type:fr,depthTexture:new hrt(f.textureWidth,f.textureHeight,u,undefined,undefined,undefined,undefined,undefined,undefined,t),stencilBuffer:h.stencil,colorSpace:n.outputColorSpace,samples:h.antialias?4:0});const s=n.properties.get(l);s.__ignoreDepthValues=f.ignoreDepthValues}l.isXRRenderTarget=!0;this.setFoveation(tt);p=null;b=await r.requestReferenceSpace(st);g.setContext(r);g.start();a.isPresenting=!0;a.dispatchEvent({type:"sessionstart"})}};this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};const vt=new t,yt=new t;this.updateCameraXR=function(n){if(r===null)return n;d&&(n=d);u.near=w.near=v.near=n.near;u.far=w.far=v.far=n.far;(ut!==u.near||ft!==u.far)&&(r.updateRenderState({depthNear:u.near,depthFar:u.far}),ut=u.near,ft=u.far);const t=n.parent,i=u.cameras;pt(u,t);for(let n=0;n<i.length;n++)pt(i[n],t);return i.length===2?wt(u,v,w):u.projectionMatrix.copy(v.projectionMatrix),d&&bt(u,t),u};this.getFoveation=function(){return f===null&&e===null?undefined:tt};this.setFoveation=function(n){tt=n;f!==null&&(f.fixedFoveation=n);e!==null&&e.fixedFoveation!==undefined&&(e.fixedFoveation=n)};let et=null;const g=new iit;g.setAnimationLoop(dt);this.setAnimationLoop=function(n){et=n};this.dispose=function(){}}}class crt{constructor(n={}){function tu(){return w===null?k:1}function iu(n,t){for(let i=0;i<n.length;i++){const u=n[i],r=p.getContext(u,t);if(r!==null)return r}return null}function ou(){v=new vct(r);h=new oct(r,v,n);v.init(h);ut=new ort(r,v,h);s=new pyt(r,v,h);g=new wct(r);c=new ryt;l=new wyt(r,v,s,c,h,ut,g);wt=new hct(f);bt=new act(f);ei=new rct(r,h);ct=new fct(r,v,ei,h);lr=new yct(r,ei,g,ct);dt=new gct(r,lr,ei,g);uu=new dct(r,h,l);it=new sct(c);ft=new iyt(f,wt,bt,v,h,ct,it);ar=new dyt(f,c);li=new fyt;ai=new lyt(v,h);rt=new uct(f,wt,bt,s,dt,wr,pr);nt=new yyt(f,dt,h);vi=new gyt(r,g,h,s);fu=new ect(r,v,g,h);eu=new pct(r,v,g,h);g.programs=ft.programs;f.capabilities=h;f.extensions=v;f.properties=c;f.renderLists=li;f.shadowMap=nt;f.state=s;f.info=g}function su(n){n.preventDefault();console.log("THREE.WebGLRenderer: Context Lost.");gi=!0}function hu(){console.log("THREE.WebGLRenderer: Context Restored.");gi=!1;const n=g.autoReset,t=nt.enabled,i=nt.autoUpdate,r=nt.needsUpdate,u=nt.type;ou();g.autoReset=n;nt.enabled=t;nt.autoUpdate=i;nt.needsUpdate=r;nt.type=u}function cu(n){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",n.statusMessage)}function lu(n){const t=n.target;t.removeEventListener("dispose",lu);uf(t)}function uf(n){ff(n);c.remove(n)}function ff(n){const t=c.get(n).programs;t!==undefined&&(t.forEach(function(n){ft.releaseProgram(n)}),n.isShaderMaterial&&ft.releaseShaderCache(n))}function ef(n){vr&&vr(n)}function au(){lt.stop()}function vu(){lt.start()}function yu(n,t,i,r){if(n.visible!==!1){const f=n.layers.test(t.layers);if(f)if(n.isGroup)i=n.renderOrder;else if(n.isLOD)n.autoUpdate===!0&&n.update(t);else if(n.isLight)a.pushLight(n),n.castShadow&&a.pushShadow(n);else if(n.isSprite){if(!n.frustumCulled||sr.intersectsSprite(n)){r&&st.setFromMatrixPosition(n.matrixWorld).applyMatrix4(ci);const u=dt.update(n),t=n.material;t.visible&&b.push(n,u,t,i,st.z,null)}}else if((n.isMesh||n.isLine||n.isPoints)&&(!n.frustumCulled||sr.intersectsObject(n))){n.isSkinnedMesh&&n.skeleton.frame!==g.render.frame&&(n.skeleton.update(),n.skeleton.frame=g.render.frame);const t=dt.update(n),u=n.material;if(r&&(n.boundingSphere!==undefined?(n.boundingSphere===null&&n.computeBoundingSphere(),st.copy(n.boundingSphere.center)):(t.boundingSphere===null&&t.computeBoundingSphere(),st.copy(t.boundingSphere.center)),st.applyMatrix4(n.matrixWorld).applyMatrix4(ci)),Array.isArray(u)){const r=t.groups;for(let f=0,e=r.length;f<e;f++){const o=r[f],e=u[o.materialIndex];e&&e.visible&&b.push(n,t,e,i,st.z,o)}}else u.visible&&b.push(n,t,u,i,st.z,null)}const u=n.children;for(let n=0,f=u.length;n<f;n++)yu(u[n],t,i,r)}}function pu(n,t,i,r){const e=n.opaque,u=n.transmissive,o=n.transparent;a.setupLightsView(i);ui===!0&&it.setGlobalState(f.clippingPlanes,i);u.length>0&&sf(e,u,t,i);r&&s.viewport(pt.copy(r));e.length>0&&yi(e,t,i);u.length>0&&yi(u,t,i);o.length>0&&yi(o,t,i);s.buffers.depth.setTest(!0);s.buffers.depth.setMask(!0);s.buffers.color.setMask(!0);s.setPolygonOffset(!1)}function sf(n,t,i,r){const u=h.isWebGL2;d===null&&(d=new si(1,1,{generateMipmaps:!0,type:v.has("EXT_color_buffer_half_float")?te:fr,minFilter:gr,samples:u&&yr===!0?4:0}));f.getDrawingBufferSize(fi);u?d.setSize(fi.x,fi.y):d.setSize(lc(fi.x),lc(fi.y));const o=f.getRenderTarget();f.setRenderTarget(d);f.getClearColor(br);ur=f.getClearAlpha();ur<1&&f.setClearColor(16777215,.5);f.clear();const s=f.toneMapping;f.toneMapping=ki;yi(n,i,r);l.updateMultisampleRenderTarget(d);l.updateRenderTargetMipmap(d);let e=!1;for(let n=0,u=t.length;n<u;n++){const f=t[n],o=f.object,s=f.geometry,u=f.material,h=f.group;if(u.side===bi&&o.layers.test(r.layers)){const n=u.side;u.side=at;u.needsUpdate=!0;wu(o,i,r,s,u,h);u.side=n;u.needsUpdate=!0;e=!0}}e===!0&&(l.updateMultisampleRenderTarget(d),l.updateRenderTargetMipmap(d));f.setRenderTarget(o);f.setClearColor(br,ur);f.toneMapping=s}function yi(n,t,i){const r=t.isScene===!0?t.overrideMaterial:null;for(let u=0,f=n.length;u<f;u++){const f=n[u],e=f.object,o=f.geometry,s=r===null?f.material:r,h=f.group;e.layers.test(i.layers)&&wu(e,t,i,o,s,h)}}function wu(n,t,i,r,u,e){n.onBeforeRender(f,t,i,r,u,e);n.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,n.matrixWorld);n.normalMatrix.getNormalMatrix(n.modelViewMatrix);u.onBeforeRender(f,t,i,r,n,e);u.transparent===!0&&u.side===bi&&u.forceSinglePass===!1?(u.side=at,u.needsUpdate=!0,f.renderBufferDirect(i,t,r,u,n,e),u.side=rr,u.needsUpdate=!0,f.renderBufferDirect(i,t,r,u,n,e),u.side=bi):f.renderBufferDirect(i,t,r,u,n,e);n.onAfterRender(f,t,i,r,u,e)}function pi(n,t,i){t.isScene!==!0&&(t=cr);const e=c.get(n),r=a.state.lights,y=a.state.shadowsArray,v=r.state.version,o=ft.getParameters(n,r.state,y,t,i),l=ft.getProgramCacheKey(o);let h=e.programs;e.environment=n.isMeshStandardMaterial?t.environment:null;e.fog=t.fog;e.envMap=(n.isMeshStandardMaterial?bt:wt).get(n.envMap||e.environment);h===undefined&&(n.addEventListener("dispose",lu),h=new Map,e.programs=h);let s=h.get(l);if(s!==undefined){if(e.currentProgram===s&&e.lightsStateVersion===v)return bu(n,o),s}else{o.uniforms=ft.getUniforms(n);n.onBuild(i,o,f);n.onBeforeCompile(o,f);s=ft.acquireProgram(o,l);h.set(l,s);e.uniforms=o.uniforms}const u=e.uniforms;(n.isShaderMaterial||n.isRawShaderMaterial)&&n.clipping!==!0||(u.clippingPlanes=it.uniform);bu(n,o);e.needsLights=lf(n);e.lightsStateVersion=v;e.needsLights&&(u.ambientLightColor.value=r.state.ambient,u.lightProbe.value=r.state.probe,u.directionalLights.value=r.state.directional,u.directionalLightShadows.value=r.state.directionalShadow,u.spotLights.value=r.state.spot,u.spotLightShadows.value=r.state.spotShadow,u.rectAreaLights.value=r.state.rectArea,u.ltc_1.value=r.state.rectAreaLTC1,u.ltc_2.value=r.state.rectAreaLTC2,u.pointLights.value=r.state.point,u.pointLightShadows.value=r.state.pointShadow,u.hemisphereLights.value=r.state.hemi,u.directionalShadowMap.value=r.state.directionalShadowMap,u.directionalShadowMatrix.value=r.state.directionalShadowMatrix,u.spotShadowMap.value=r.state.spotShadowMap,u.spotLightMatrix.value=r.state.spotLightMatrix,u.spotLightMap.value=r.state.spotLightMap,u.pointShadowMap.value=r.state.pointShadowMap,u.pointShadowMatrix.value=r.state.pointShadowMatrix);const p=s.getUniforms(),w=kl.seqWithValue(p.seq,u);return e.currentProgram=s,e.uniformsList=w,s}function bu(n,t){const i=c.get(n);i.outputColorSpace=t.outputColorSpace;i.instancing=t.instancing;i.skinning=t.skinning;i.morphTargets=t.morphTargets;i.morphNormals=t.morphNormals;i.morphColors=t.morphColors;i.morphTargetsCount=t.morphTargetsCount;i.numClippingPlanes=t.numClippingPlanes;i.numIntersection=t.numClipIntersection;i.vertexAlphas=t.vertexAlphas;i.vertexTangents=t.vertexTangents;i.toneMapping=t.toneMapping}function hf(n,t,i,u,e){t.isScene!==!0&&(t=cr);l.resetTextureUnits();const tt=t.fog,ht=u.isMeshStandardMaterial?t.environment:null,ct=w===null?f.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:oi,nt=(u.isMeshStandardMaterial?bt:wt).get(u.envMap||ht),lt=u.vertexColors===!0&&!!i.attributes.color&&i.attributes.color.itemSize===4,at=!!i.attributes.tangent&&(!!u.normalMap||u.anisotropy>0),vt=!!i.morphAttributes.position,pt=!!i.morphAttributes.normal,kt=!!i.morphAttributes.color,dt=u.toneMapped?f.toneMapping:ki,ft=i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color,gt=ft!==undefined?ft.length:0,o=c.get(u),ni=a.state.lights;if(ui===!0&&(hr===!0||n!==yt)){const t=n===yt&&u.id===ti;it.setState(u,n,t)}let v=!1;u.version===o.__version?o.needsLights&&o.lightsStateVersion!==ni.state.version?v=!0:o.outputColorSpace!==ct?v=!0:e.isInstancedMesh&&o.instancing===!1?v=!0:e.isInstancedMesh||o.instancing!==!0?e.isSkinnedMesh&&o.skinning===!1?v=!0:e.isSkinnedMesh||o.skinning!==!0?o.envMap!==nt?v=!0:u.fog===!0&&o.fog!==tt?v=!0:o.numClippingPlanes!==undefined&&(o.numClippingPlanes!==it.numPlanes||o.numIntersection!==it.numIntersection)?v=!0:o.vertexAlphas!==lt?v=!0:o.vertexTangents!==at?v=!0:o.morphTargets!==vt?v=!0:o.morphNormals!==pt?v=!0:o.morphColors!==kt?v=!0:o.toneMapping!==dt?v=!0:h.isWebGL2===!0&&o.morphTargetsCount!==gt&&(v=!0):v=!0:v=!0:(v=!0,o.__version=u.version);let p=o.currentProgram;v===!0&&(p=pi(u,t,e));let et=!1,g=!1,rt=!1;const y=p.getUniforms(),b=o.uniforms;if(s.useProgram(p.program)&&(et=!0,g=!0,rt=!0),u.id!==ti&&(ti=u.id,g=!0),et||yt!==n){if(y.setValue(r,"projectionMatrix",n.projectionMatrix),h.logarithmicDepthBuffer&&y.setValue(r,"logDepthBufFC",2/(Math.log(n.far+1)/Math.LN2)),yt!==n&&(yt=n,g=!0,rt=!0),u.isShaderMaterial||u.isMeshPhongMaterial||u.isMeshToonMaterial||u.isMeshStandardMaterial||u.envMap){const t=y.map.cameraPosition;t!==undefined&&t.setValue(r,st.setFromMatrixPosition(n.matrixWorld))}(u.isMeshPhongMaterial||u.isMeshToonMaterial||u.isMeshLambertMaterial||u.isMeshBasicMaterial||u.isMeshStandardMaterial||u.isShaderMaterial)&&y.setValue(r,"isOrthographic",n.isOrthographicCamera===!0);(u.isMeshPhongMaterial||u.isMeshToonMaterial||u.isMeshLambertMaterial||u.isMeshBasicMaterial||u.isMeshStandardMaterial||u.isShaderMaterial||u.isShadowMaterial||e.isSkinnedMesh)&&y.setValue(r,"viewMatrix",n.matrixWorldInverse)}if(e.isSkinnedMesh){y.setOptional(r,e,"bindMatrix");y.setOptional(r,e,"bindMatrixInverse");const n=e.skeleton;n&&(h.floatVertexTextures?(n.boneTexture===null&&n.computeBoneTexture(),y.setValue(r,"boneTexture",n.boneTexture,l),y.setValue(r,"boneTextureSize",n.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const ut=i.morphAttributes;if((ut.position!==undefined||ut.normal!==undefined||ut.color!==undefined&&h.isWebGL2===!0)&&uu.update(e,i,p),(g||o.receiveShadow!==e.receiveShadow)&&(o.receiveShadow=e.receiveShadow,y.setValue(r,"receiveShadow",e.receiveShadow)),u.isMeshGouraudMaterial&&u.envMap!==null&&(b.envMap.value=nt,b.flipEnvMap.value=nt.isCubeTexture&&nt.isRenderTargetTexture===!1?-1:1),g&&(y.setValue(r,"toneMappingExposure",f.toneMappingExposure),o.needsLights&&cf(b,rt),tt&&u.fog===!0&&ar.refreshFogUniforms(b,tt),ar.refreshMaterialUniforms(b,u,k,ot,d),kl.upload(r,o.uniformsList,b,l)),u.isShaderMaterial&&u.uniformsNeedUpdate===!0&&(kl.upload(r,o.uniformsList,b,l),u.uniformsNeedUpdate=!1),u.isSpriteMaterial&&y.setValue(r,"center",e.center),y.setValue(r,"modelViewMatrix",e.modelViewMatrix),y.setValue(r,"normalMatrix",e.normalMatrix),y.setValue(r,"modelMatrix",e.matrixWorld),u.isShaderMaterial||u.isRawShaderMaterial){const n=u.uniformsGroups;for(let t=0,i=n.length;t<i;t++)if(h.isWebGL2){const i=n[t];vi.update(i,p);vi.bind(i,p)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return p}function cf(n,t){n.ambientLightColor.needsUpdate=t;n.lightProbe.needsUpdate=t;n.directionalLights.needsUpdate=t;n.directionalLightShadows.needsUpdate=t;n.pointLights.needsUpdate=t;n.pointLightShadows.needsUpdate=t;n.spotLights.needsUpdate=t;n.spotLightShadows.needsUpdate=t;n.rectAreaLights.needsUpdate=t;n.hemisphereLights.needsUpdate=t}function lf(n){return n.isMeshLambertMaterial||n.isMeshToonMaterial||n.isMeshPhongMaterial||n.isMeshStandardMaterial||n.isShadowMaterial||n.isShaderMaterial&&n.lights===!0}const{p=createCanvasElement(),wi=null,ku=!0,du=!0,gu=!1,yr=!1,pr=!0,nf=!1,tf="default",rf=!1}=n;this.isWebGLRenderer=!0;let wr;wr=wi!==null?wi.getContextAttributes().alpha:gu;const gt=new Uint32Array(4),ni=new Int32Array(4);let b=null,a=null;const vt=[],et=[];this.domElement=p;this.debug={checkShaderErrors:!0,onShaderError:null};this.autoClear=!0;this.autoClearColor=!0;this.autoClearDepth=!0;this.autoClearStencil=!0;this.sortObjects=!0;this.clippingPlanes=[];this.localClippingEnabled=!1;this.outputColorSpace=e;this.useLegacyLights=!0;this.toneMapping=ki;this.toneMappingExposure=1;const f=this;let gi=!1,nr=0,tr=0,w=null,ti=-1,yt=null;const pt=new y,hi=new y;let ir=null;const br=new u(0);let ur=0,ht=p.width,ot=p.height,k=1,kr=null,dr=null;const ii=new y(0,0,ht,ot),ri=new y(0,0,ht,ot);let or=!1;const sr=new vl;let ui=!1,hr=!1,d=null;const ci=new o,fi=new i,st=new t,cr={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let r=wi;try{const n={alpha:!0,depth:ku,stencil:du,antialias:yr,premultipliedAlpha:pr,preserveDrawingBuffer:nf,powerPreference:tf,failIfMajorPerformanceCaveat:rf};if("setAttribute"in p&&p.setAttribute("data-engine",`three.js r${kh}`),p.addEventListener("webglcontextlost",su,!1),p.addEventListener("webglcontextrestored",hu,!1),p.addEventListener("webglcontextcreationerror",cu,!1),r===null){const t=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&t.shift(),r=iu(t,n),r===null)if(iu(t))throw new Error("Error creating WebGL context with your selected attributes.");else throw new Error("Error creating WebGL context.");}r instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.");r.getShaderPrecisionFormat===undefined&&(r.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(ru){console.error("THREE.WebGLRenderer: "+ru.message);throw ru;}let v,h,s,g,c,l,wt,bt,ei,lr,dt,ft,ar,li,ai,it,nt,rt,uu,fu,eu,ut,ct,vi;ou();const tt=new kyt(f,r);this.xr=tt;this.getContext=function(){return r};this.getContextAttributes=function(){return r.getContextAttributes()};this.forceContextLoss=function(){const n=v.get("WEBGL_lose_context");n&&n.loseContext()};this.forceContextRestore=function(){const n=v.get("WEBGL_lose_context");n&&n.restoreContext()};this.getPixelRatio=function(){return k};this.setPixelRatio=function(n){n!==undefined&&(k=n,this.setSize(ht,ot,!1))};this.getSize=function(n){return n.set(ht,ot)};this.setSize=function(n,t,i=true){if(tt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}ht=n;ot=t;p.width=Math.floor(n*k);p.height=Math.floor(t*k);i===!0&&(p.style.width=n+"px",p.style.height=t+"px");this.setViewport(0,0,n,t)};this.getDrawingBufferSize=function(n){return n.set(ht*k,ot*k).floor()};this.setDrawingBufferSize=function(n,t,i){ht=n;ot=t;k=i;p.width=Math.floor(n*i);p.height=Math.floor(t*i);this.setViewport(0,0,n,t)};this.getCurrentViewport=function(n){return n.copy(pt)};this.getViewport=function(n){return n.copy(ii)};this.setViewport=function(n,t,i,r){n.isVector4?ii.set(n.x,n.y,n.z,n.w):ii.set(n,t,i,r);s.viewport(pt.copy(ii).multiplyScalar(k).floor())};this.getScissor=function(n){return n.copy(ri)};this.setScissor=function(n,t,i,r){n.isVector4?ri.set(n.x,n.y,n.z,n.w):ri.set(n,t,i,r);s.scissor(hi.copy(ri).multiplyScalar(k).floor())};this.getScissorTest=function(){return or};this.setScissorTest=function(n){s.setScissorTest(or=n)};this.setOpaqueSort=function(n){kr=n};this.setTransparentSort=function(n){dr=n};this.getClearColor=function(n){return n.copy(rt.getClearColor())};this.setClearColor=function(){rt.setClearColor.apply(rt,arguments)};this.getClearAlpha=function(){return rt.getClearAlpha()};this.setClearAlpha=function(){rt.setClearAlpha.apply(rt,arguments)};this.clear=function(n=true,t=true,i=true){let u=0;if(n){let n=!1;if(w!==null){const t=w.texture.format;n=t===cy||t===hy||t===sy}if(n){const n=w.texture.type,s=n===fr||n===er||n===tc||n===nu||n===ey||n===oy,t=rt.getClearColor(),i=rt.getClearAlpha(),u=t.r,f=t.g,e=t.b,o=c.get(w).__webglFramebuffer;s?(gt[0]=u,gt[1]=f,gt[2]=e,gt[3]=i,r.clearBufferuiv(r.COLOR,o,gt)):(ni[0]=u,ni[1]=f,ni[2]=e,ni[3]=i,r.clearBufferiv(r.COLOR,o,ni))}else u|=r.COLOR_BUFFER_BIT}t&&(u|=r.DEPTH_BUFFER_BIT);i&&(u|=r.STENCIL_BUFFER_BIT);r.clear(u)};this.clearColor=function(){this.clear(!0,!1,!1)};this.clearDepth=function(){this.clear(!1,!0,!1)};this.clearStencil=function(){this.clear(!1,!1,!0)};this.dispose=function(){p.removeEventListener("webglcontextlost",su,!1);p.removeEventListener("webglcontextrestored",hu,!1);p.removeEventListener("webglcontextcreationerror",cu,!1);li.dispose();ai.dispose();c.dispose();wt.dispose();bt.dispose();dt.dispose();ct.dispose();vi.dispose();ft.dispose();tt.dispose();tt.removeEventListener("sessionstart",au);tt.removeEventListener("sessionend",vu);d&&(d.dispose(),d=null);lt.stop()};this.renderBufferDirect=function(n,t,i,u,f,e){t===null&&(t=cr);const b=f.isMesh&&f.matrixWorld.determinant()<0,k=hf(n,t,i,u,f);s.setMaterial(u,b);let l=i.index,a=1;u.wireframe===!0&&(l=lr.getWireframeAttribute(i),a=2);const y=i.drawRange,p=i.attributes.position;let h=y.start*a,c=(y.start+y.count)*a;e!==null&&(h=Math.max(h,e.start*a),c=Math.min(c,(e.start+e.count)*a));l!==null?(h=Math.max(h,0),c=Math.min(c,l.count)):p!==undefined&&p!==null&&(h=Math.max(h,0),c=Math.min(c,p.count));const v=c-h;if(!(v<0)&&v!==Infinity){ct.setup(f,u,k,i,l);let w,o=fu;if(l!==null&&(w=ei.get(l),o=eu,o.setIndex(w)),f.isMesh)u.wireframe===!0?(s.setLineWidth(u.wireframeLinewidth*tu()),o.setMode(r.LINES)):o.setMode(r.TRIANGLES);else if(f.isLine){let n=u.linewidth;n===undefined&&(n=1);s.setLineWidth(n*tu());f.isLineSegments?o.setMode(r.LINES):f.isLineLoop?o.setMode(r.LINE_LOOP):o.setMode(r.LINE_STRIP)}else f.isPoints?o.setMode(r.POINTS):f.isSprite&&o.setMode(r.TRIANGLES);if(f.isInstancedMesh)o.renderInstances(h,v,f.count);else if(i.isInstancedBufferGeometry){const n=i._maxInstanceCount!==undefined?i._maxInstanceCount:Infinity,t=Math.min(i.instanceCount,n);o.renderInstances(h,v,t)}else o.render(h,v)}};this.compile=function(n,t){function i(n,t,i){n.transparent===!0&&n.side===bi&&n.forceSinglePass===!1?(n.side=at,n.needsUpdate=!0,pi(n,t,i),n.side=rr,n.needsUpdate=!0,pi(n,t,i),n.side=bi):pi(n,t,i)}a=ai.get(n);a.init();et.push(a);n.traverseVisible(function(n){n.isLight&&n.layers.test(t.layers)&&(a.pushLight(n),n.castShadow&&a.pushShadow(n))});a.setupLights(f.useLegacyLights);n.traverse(function(t){const r=t.material;if(r)if(Array.isArray(r))for(let u=0;u<r.length;u++){const f=r[u];i(f,n,t)}else i(r,n,t)});et.pop();a=null};let vr=null;const lt=new iit;lt.setAnimationLoop(ef);typeof self!="undefined"&&lt.setContext(self);this.setAnimationLoop=function(n){vr=n;tt.setAnimationLoop(n);n===null?lt.stop():lt.start()};tt.addEventListener("sessionstart",au);tt.addEventListener("sessionend",vu);this.render=function(n,t){if(t!==undefined&&t.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(gi!==!0){if(n.matrixWorldAutoUpdate===!0&&n.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),tt.enabled===!0&&tt.isPresenting===!0&&(t=tt.updateCameraXR(t)),n.isScene===!0)n.onBeforeRender(f,n,t,w);a=ai.get(n,et.length);a.init();et.push(a);ci.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);sr.setFromProjectionMatrix(ci);hr=this.localClippingEnabled;ui=it.init(this.clippingPlanes,hr);b=li.get(n,vt.length);b.init();vt.push(b);yu(n,t,0,f.sortObjects);b.finish();f.sortObjects===!0&&b.sort(kr,dr);ui===!0&&it.beginShadows();const i=a.state.shadowsArray;if(nt.render(i,n,t),ui===!0&&it.endShadows(),this.info.autoReset===!0&&this.info.reset(),this.info.render.frame++,rt.render(b,n),a.setupLights(f.useLegacyLights),t.isArrayCamera){const i=t.cameras;for(let t=0,r=i.length;t<r;t++){const r=i[t];pu(b,n,r,r.viewport)}}else pu(b,n,t);if(w!==null&&(l.updateMultisampleRenderTarget(w),l.updateRenderTargetMipmap(w)),n.isScene===!0)n.onAfterRender(f,n,t);ct.resetDefaultState();ti=-1;yt=null;et.pop();a=et.length>0?et[et.length-1]:null;vt.pop();b=vt.length>0?vt[vt.length-1]:null}};this.getActiveCubeFace=function(){return nr};this.getActiveMipmapLevel=function(){return tr};this.getRenderTarget=function(){return w};this.setRenderTargetTextures=function(n,t,i){c.get(n.texture).__webglTexture=t;c.get(n.depthTexture).__webglTexture=i;const r=c.get(n);r.__hasExternalTextures=!0;r.__hasExternalTextures&&(r.__autoAllocateDepthBuffer=i===undefined,r.__autoAllocateDepthBuffer||v.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),r.__useRenderToTexture=!1))};this.setRenderTargetFramebuffer=function(n,t){const i=c.get(n);i.__webglFramebuffer=t;i.__useDefaultFramebuffer=t===undefined};this.setRenderTarget=function(n,t=0,i=0){w=n;nr=t;tr=i;let f=!0,u=null,e=!1,o=!1;if(n){const i=c.get(n);i.__useDefaultFramebuffer!==undefined?(s.bindFramebuffer(r.FRAMEBUFFER,null),f=!1):i.__webglFramebuffer===undefined?l.setupRenderTarget(n):i.__hasExternalTextures&&l.rebindTextures(n,c.get(n.texture).__webglTexture,c.get(n.depthTexture).__webglTexture);const a=n.texture;(a.isData3DTexture||a.isDataArrayTexture||a.isCompressedArrayTexture)&&(o=!0);const v=c.get(n).__webglFramebuffer;n.isWebGLCubeRenderTarget?(u=v[t],e=!0):u=h.isWebGL2&&n.samples>0&&l.useMultisampledRTT(n)===!1?c.get(n).__webglMultisampledFramebuffer:v;pt.copy(n.viewport);hi.copy(n.scissor);ir=n.scissorTest}else pt.copy(ii).multiplyScalar(k).floor(),hi.copy(ri).multiplyScalar(k).floor(),ir=or;const a=s.bindFramebuffer(r.FRAMEBUFFER,u);if(a&&h.drawBuffers&&f&&s.drawBuffers(n,u),s.viewport(pt),s.scissor(hi),s.setScissorTest(ir),e){const u=c.get(n.texture);r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+t,u.__webglTexture,i)}else if(o){const u=c.get(n.texture),f=t||0;r.framebufferTextureLayer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,u.__webglTexture,i||0,f)}ti=-1};this.readRenderTargetPixels=function(n,t,i,u,f,e,o){if(!(n&&n.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let l=c.get(n).__webglFramebuffer;if(n.isWebGLCubeRenderTarget&&o!==undefined&&(l=l[o]),l){s.bindFramebuffer(r.FRAMEBUFFER,l);try{const c=n.texture,s=c.format,o=c.type;if(s!==kt&&ut.convert(s)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const l=o===te&&(v.has("EXT_color_buffer_half_float")||h.isWebGL2&&v.has("EXT_color_buffer_float"));if(o!==fr&&ut.convert(o)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&!(o===di&&(h.isWebGL2||v.has("OES_texture_float")||v.has("WEBGL_color_buffer_float")))&&!l){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}t>=0&&t<=n.width-u&&i>=0&&i<=n.height-f&&r.readPixels(t,i,u,f,ut.convert(s),ut.convert(o),e)}finally{const n=w!==null?c.get(w).__webglFramebuffer:null;s.bindFramebuffer(r.FRAMEBUFFER,n)}}};this.copyFramebufferToTexture=function(n,t,i=0){const u=Math.pow(2,-i),f=Math.floor(t.image.width*u),e=Math.floor(t.image.height*u);l.setTexture2D(t,0);r.copyTexSubImage2D(r.TEXTURE_2D,i,0,0,n.x,n.y,f,e);s.unbindTexture()};this.copyTextureToTexture=function(n,t,i,u=0){const o=t.image.width,h=t.image.height,f=ut.convert(i.format),e=ut.convert(i.type);l.setTexture2D(i,0);r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,i.flipY);r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha);r.pixelStorei(r.UNPACK_ALIGNMENT,i.unpackAlignment);t.isDataTexture?r.texSubImage2D(r.TEXTURE_2D,u,n.x,n.y,o,h,f,e,t.image.data):t.isCompressedTexture?r.compressedTexSubImage2D(r.TEXTURE_2D,u,n.x,n.y,t.mipmaps[0].width,t.mipmaps[0].height,f,t.mipmaps[0].data):r.texSubImage2D(r.TEXTURE_2D,u,n.x,n.y,f,e,t.image);u===0&&i.generateMipmaps&&r.generateMipmap(r.TEXTURE_2D);s.unbindTexture()};this.copyTextureToTexture3D=function(n,t,i,u,e=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const c=n.max.x-n.min.x+1,a=n.max.y-n.min.y+1,v=n.max.z-n.min.z+1,y=ut.convert(u.format),p=ut.convert(u.type);let o;if(u.isData3DTexture)l.setTexture3D(u,0),o=r.TEXTURE_3D;else if(u.isDataArrayTexture)l.setTexture2DArray(u,0),o=r.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,u.flipY);r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,u.premultiplyAlpha);r.pixelStorei(r.UNPACK_ALIGNMENT,u.unpackAlignment);const w=r.getParameter(r.UNPACK_ROW_LENGTH),b=r.getParameter(r.UNPACK_IMAGE_HEIGHT),k=r.getParameter(r.UNPACK_SKIP_PIXELS),d=r.getParameter(r.UNPACK_SKIP_ROWS),g=r.getParameter(r.UNPACK_SKIP_IMAGES),h=i.isCompressedTexture?i.mipmaps[0]:i.image;r.pixelStorei(r.UNPACK_ROW_LENGTH,h.width);r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,h.height);r.pixelStorei(r.UNPACK_SKIP_PIXELS,n.min.x);r.pixelStorei(r.UNPACK_SKIP_ROWS,n.min.y);r.pixelStorei(r.UNPACK_SKIP_IMAGES,n.min.z);i.isDataTexture||i.isData3DTexture?r.texSubImage3D(o,e,t.x,t.y,t.z,c,a,v,y,p,h.data):i.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),r.compressedTexSubImage3D(o,e,t.x,t.y,t.z,c,a,v,y,h.data)):r.texSubImage3D(o,e,t.x,t.y,t.z,c,a,v,y,p,h);r.pixelStorei(r.UNPACK_ROW_LENGTH,w);r.pixelStorei(r.UNPACK_IMAGE_HEIGHT,b);r.pixelStorei(r.UNPACK_SKIP_PIXELS,k);r.pixelStorei(r.UNPACK_SKIP_ROWS,d);r.pixelStorei(r.UNPACK_SKIP_IMAGES,g);e===0&&u.generateMipmaps&&r.generateMipmap(o);s.unbindTexture()};this.initTexture=function(n){n.isCubeTexture?l.setTextureCube(n,0):n.isData3DTexture?l.setTexture3D(n,0):n.isDataArrayTexture||n.isCompressedArrayTexture?l.setTexture2DArray(n,0):l.setTexture2D(n,0);s.unbindTexture()};this.resetState=function(){nr=0;tr=0;w=null;s.reset();ct.reset()};typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return gi}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(n){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.");this.useLegacyLights=!n}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===e?iu:yp}set outputEncoding(n){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.");this.outputColorSpace=n===iu?e:oi}}class lrt extends crt{}lrt.prototype.isWebGL1Renderer=!0;class ob{constructor(n,t=.00025){this.isFogExp2=!0;this.name="";this.color=new u(n);this.density=t}clone(){return new ob(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class sb{constructor(n,t=1,i=1e3){this.isFog=!0;this.name="";this.color=new u(n);this.near=t;this.far=i}clone(){return new sb(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class art extends v{constructor(){super();this.isScene=!0;this.type="Scene";this.background=null;this.environment=null;this.fog=null;this.backgroundBlurriness=0;this.backgroundIntensity=1;this.overrideMaterial=null;typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(n,t){return super.copy(n,t),n.background!==null&&(this.background=n.background.clone()),n.environment!==null&&(this.environment=n.environment.clone()),n.fog!==null&&(this.fog=n.fog.clone()),this.backgroundBlurriness=n.backgroundBlurriness,this.backgroundIntensity=n.backgroundIntensity,n.overrideMaterial!==null&&(this.overrideMaterial=n.overrideMaterial.clone()),this.matrixAutoUpdate=n.matrixAutoUpdate,this}toJSON(n){const t=super.toJSON(n);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(n){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144.");this.matrixWorldAutoUpdate=n}}class dl{constructor(n,t){this.isInterleavedBuffer=!0;this.array=n;this.stride=t;this.count=n!==undefined?n.length/t:0;this.usage=es;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=dt()}onUploadCallback(){}set needsUpdate(n){n===!0&&this.version++}setUsage(n){return this.usage=n,this}copy(n){return this.array=new n.array.constructor(n.array),this.count=n.count,this.stride=n.stride,this.usage=n.usage,this}copyAt(n,t,i){n*=this.stride;i*=t.stride;for(let r=0,u=this.stride;r<u;r++)this.array[n+r]=t.array[i+r];return this}set(n,t=0){return this.array.set(n,t),this}clone(n){n.arrayBuffers===undefined&&(n.arrayBuffers={});this.array.buffer._uuid===undefined&&(this.array.buffer._uuid=dt());n.arrayBuffers[this.array.buffer._uuid]===undefined&&(n.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const i=new this.array.constructor(n.arrayBuffers[this.array.buffer._uuid]),t=new this.constructor(i,this.stride);return t.setUsage(this.usage),t}onUpload(n){return this.onUploadCallback=n,this}toJSON(n){return n.arrayBuffers===undefined&&(n.arrayBuffers={}),this.array.buffer._uuid===undefined&&(this.array.buffer._uuid=dt()),n.arrayBuffers[this.array.buffer._uuid]===undefined&&(n.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const yt=new t;class fo{constructor(n,t,i,r=false){this.isInterleavedBufferAttribute=!0;this.name="";this.data=n;this.itemSize=t;this.offset=i;this.normalized=r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(n){this.data.needsUpdate=n}applyMatrix4(n){for(let t=0,i=this.data.count;t<i;t++)yt.fromBufferAttribute(this,t),yt.applyMatrix4(n),this.setXYZ(t,yt.x,yt.y,yt.z);return this}applyNormalMatrix(n){for(let t=0,i=this.count;t<i;t++)yt.fromBufferAttribute(this,t),yt.applyNormalMatrix(n),this.setXYZ(t,yt.x,yt.y,yt.z);return this}transformDirection(n){for(let t=0,i=this.count;t<i;t++)yt.fromBufferAttribute(this,t),yt.transformDirection(n),this.setXYZ(t,yt.x,yt.y,yt.z);return this}setX(n,t){return this.normalized&&(t=s(t,this.array)),this.data.array[n*this.data.stride+this.offset]=t,this}setY(n,t){return this.normalized&&(t=s(t,this.array)),this.data.array[n*this.data.stride+this.offset+1]=t,this}setZ(n,t){return this.normalized&&(t=s(t,this.array)),this.data.array[n*this.data.stride+this.offset+2]=t,this}setW(n,t){return this.normalized&&(t=s(t,this.array)),this.data.array[n*this.data.stride+this.offset+3]=t,this}getX(n){let t=this.data.array[n*this.data.stride+this.offset];return this.normalized&&(t=gt(t,this.array)),t}getY(n){let t=this.data.array[n*this.data.stride+this.offset+1];return this.normalized&&(t=gt(t,this.array)),t}getZ(n){let t=this.data.array[n*this.data.stride+this.offset+2];return this.normalized&&(t=gt(t,this.array)),t}getW(n){let t=this.data.array[n*this.data.stride+this.offset+3];return this.normalized&&(t=gt(t,this.array)),t}setXY(n,t,i){return n=n*this.data.stride+this.offset,this.normalized&&(t=s(t,this.array),i=s(i,this.array)),this.data.array[n+0]=t,this.data.array[n+1]=i,this}setXYZ(n,t,i,r){return n=n*this.data.stride+this.offset,this.normalized&&(t=s(t,this.array),i=s(i,this.array),r=s(r,this.array)),this.data.array[n+0]=t,this.data.array[n+1]=i,this.data.array[n+2]=r,this}setXYZW(n,t,i,r,u){return n=n*this.data.stride+this.offset,this.normalized&&(t=s(t,this.array),i=s(i,this.array),r=s(r,this.array),u=s(u,this.array)),this.data.array[n+0]=t,this.data.array[n+1]=i,this.data.array[n+2]=r,this.data.array[n+3]=u,this}clone(n){if(n===undefined){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)n.push(this.data.array[i+t])}return new p(new this.array.constructor(n),this.itemSize,this.normalized)}return n.interleavedBuffers===undefined&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===undefined&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new fo(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(n){if(n===undefined){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const n=[];for(let t=0;t<this.count;t++){const i=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)n.push(this.data.array[i+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}return n.interleavedBuffers===undefined&&(n.interleavedBuffers={}),n.interleavedBuffers[this.data.uuid]===undefined&&(n.interleavedBuffers[this.data.uuid]=this.data.toJSON(n)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class hb extends ct{constructor(n){super();this.isSpriteMaterial=!0;this.type="SpriteMaterial";this.color=new u(16777215);this.map=null;this.alphaMap=null;this.rotation=0;this.sizeAttenuation=!0;this.transparent=!0;this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.rotation=n.rotation,this.sizeAttenuation=n.sizeAttenuation,this.fog=n.fog,this}}let eo;const ds=new t,oo=new t,so=new t,ho=new i,gs=new i,vrt=new o,gl=new t,nh=new t,na=new t,yrt=new i,cb=new i,prt=new i;class wrt extends v{constructor(n){if(super(),this.isSprite=!0,this.type="Sprite",eo===undefined){eo=new l;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new dl(t,5);eo.setIndex([0,1,2,0,2,3]);eo.setAttribute("position",new fo(n,3,0,!1));eo.setAttribute("uv",new fo(n,2,3,!1))}this.geometry=eo;this.material=n!==undefined?n:new hb;this.center=new i(.5,.5)}raycast(n,t){n.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.');oo.setFromMatrixScale(this.matrixWorld);vrt.copy(n.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(n.camera.matrixWorldInverse,this.matrixWorld);so.setFromMatrixPosition(this.modelViewMatrix);n.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&oo.multiplyScalar(-so.z);const e=this.material.rotation;let r,u;e!==0&&(u=Math.cos(e),r=Math.sin(e));const f=this.center;ta(gl.set(-.5,-.5,0),so,f,oo,r,u);ta(nh.set(.5,-.5,0),so,f,oo,r,u);ta(na.set(.5,.5,0),so,f,oo,r,u);yrt.set(0,0);cb.set(1,0);prt.set(1,1);let o=n.ray.intersectTriangle(gl,nh,na,!1,ds);if(o!==null||(ta(nh.set(-.5,.5,0),so,f,oo,r,u),cb.set(0,1),o=n.ray.intersectTriangle(gl,na,nh,!1,ds),o!==null)){const s=n.ray.origin.distanceTo(ds);s<n.near||s>n.far||t.push({distance:s,point:ds.clone(),uv:ti.getInterpolation(ds,gl,nh,na,yrt,cb,prt,new i),face:null,object:this})}}copy(n,t){return super.copy(n,t),n.center!==undefined&&this.center.copy(n.center),this.material=n.material,this}}const ia=new t,brt=new t;class krt extends v{constructor(){super();this._currentLevel=0;this.type="LOD";Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}});this.autoUpdate=!0}copy(n){super.copy(n,!1);const t=n.levels;for(let n=0,i=t.length;n<i;n++){const i=t[n];this.addLevel(i.object.clone(),i.distance,i.hysteresis)}return this.autoUpdate=n.autoUpdate,this}addLevel(n,t=0,i=0){t=Math.abs(t);const u=this.levels;let r;for(r=0;r<u.length;r++)if(t<u[r].distance)break;return u.splice(r,0,{distance:t,hysteresis:i,object:n}),this.add(n),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){const t=this.levels;if(t.length>0){let i,r;for(i=1,r=t.length;i<r;i++){let r=t[i].distance;if(t[i].object.visible&&(r-=r*t[i].hysteresis),n<r)break}return t[i-1].object}return null}raycast(n,t){const i=this.levels;if(i.length>0){ia.setFromMatrixPosition(this.matrixWorld);const i=n.ray.origin.distanceTo(ia);this.getObjectForDistance(i).raycast(n,t)}}update(n){const t=this.levels;if(t.length>1){ia.setFromMatrixPosition(n.matrixWorld);brt.setFromMatrixPosition(this.matrixWorld);const u=ia.distanceTo(brt)/n.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let n=t[i].distance;if(t[i].object.visible&&(n-=n*t[i].hysteresis),u>=n)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(n){const t=super.toJSON(n);this.autoUpdate===!1&&(t.object.autoUpdate=!1);t.object.levels=[];const i=this.levels;for(let n=0,r=i.length;n<r;n++){const r=i[n];t.object.levels.push({object:r.object.uuid,distance:r.distance,hysteresis:r.hysteresis})}return t}}const drt=new t,grt=new y,nut=new y,npt=new t,tut=new o,co=new t,lb=new hi,iut=new o,ab=new ce;class rut extends et{constructor(n,t){super(n,t);this.isSkinnedMesh=!0;this.type="SkinnedMesh";this.bindMode="attached";this.bindMatrix=new o;this.bindMatrixInverse=new o;this.boundingBox=null;this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new nr);this.boundingBox.makeEmpty();const n=t.getAttribute("position");for(let t=0;t<n.count;t++)co.fromBufferAttribute(n,t),this.applyBoneTransform(t,co),this.boundingBox.expandByPoint(co)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new hi);this.boundingSphere.makeEmpty();const n=t.getAttribute("position");for(let t=0;t<n.count;t++)co.fromBufferAttribute(n,t),this.applyBoneTransform(t,co),this.boundingSphere.expandByPoint(co)}copy(n,t){return super.copy(n,t),this.bindMode=n.bindMode,this.bindMatrix.copy(n.bindMatrix),this.bindMatrixInverse.copy(n.bindMatrixInverse),this.skeleton=n.skeleton,n.boundingBox!==null&&(this.boundingBox=n.boundingBox.clone()),n.boundingSphere!==null&&(this.boundingSphere=n.boundingSphere.clone()),this}raycast(n,t){const r=this.material,i=this.matrixWorld;r!==undefined&&(this.boundingSphere===null&&this.computeBoundingSphere(),lb.copy(this.boundingSphere),lb.applyMatrix4(i),n.ray.intersectsSphere(lb)!==!1)&&(iut.copy(i).invert(),ab.copy(n.ray).applyMatrix4(iut),this.boundingBox===null||ab.intersectsBox(this.boundingBox)!==!1)&&this._computeIntersections(n,t,ab)}getVertexPosition(n,t){return super.getVertexPosition(n,t),this.applyBoneTransform(n,t),t}bind(n,t){this.skeleton=n;t===undefined&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld);this.bindMatrix.copy(t);this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const n=new y,t=this.geometry.attributes.skinWeight;for(let i=0,r=t.count;i<r;i++){n.fromBufferAttribute(t,i);const r=1/n.manhattanLength();r!==Infinity?n.multiplyScalar(r):n.set(1,0,0,0);t.setXYZW(i,n.x,n.y,n.z,n.w)}}updateMatrixWorld(n){super.updateMatrixWorld(n);this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(n,t){const i=this.skeleton,r=this.geometry;grt.fromBufferAttribute(r.attributes.skinIndex,n);nut.fromBufferAttribute(r.attributes.skinWeight,n);drt.copy(t).applyMatrix4(this.bindMatrix);t.set(0,0,0);for(let n=0;n<4;n++){const r=nut.getComponent(n);if(r!==0){const u=grt.getComponent(n);tut.multiplyMatrices(i.bones[u].matrixWorld,i.boneInverses[u]);t.addScaledVector(npt.copy(drt).applyMatrix4(tut),r)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(n,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(n,t)}}class vb extends v{constructor(){super();this.isBone=!0;this.type="Bone"}}class lo extends tt{constructor(n=null,t=1,i=1,r,u,f,e,o,s=d,h=d,c,l){super(null,f,e,o,s,h,r,u,c,l);this.isDataTexture=!0;this.image={data:n,width:t,height:i};this.generateMipmaps=!1;this.flipY=!1;this.unpackAlignment=1}}const uut=new o,tpt=new o;class yb{constructor(n=[],t=[]){this.uuid=dt();this.bones=n.slice(0);this.boneInverses=t;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init()}init(){const n=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(n.length*16),t.length===0)this.calculateInverses();else if(n.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.");this.boneInverses=[];for(let n=0,t=this.bones.length;n<t;n++)this.boneInverses.push(new o)}}calculateInverses(){this.boneInverses.length=0;for(let n=0,t=this.bones.length;n<t;n++){const t=new o;this.bones[n]&&t.copy(this.bones[n].matrixWorld).invert();this.boneInverses.push(t)}}pose(){for(let n=0,t=this.bones.length;n<t;n++){const t=this.bones[n];t&&t.matrixWorld.copy(this.boneInverses[n]).invert()}for(let n=0,t=this.bones.length;n<t;n++){const t=this.bones[n];t&&(t.parent&&t.parent.isBone?(t.matrix.copy(t.parent.matrixWorld).invert(),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))}}update(){const n=this.bones,i=this.boneInverses,r=this.boneMatrices,t=this.boneTexture;for(let t=0,u=n.length;t<u;t++){const u=n[t]?n[t].matrixWorld:tpt;uut.multiplyMatrices(u,i[t]);uut.toArray(r,t*16)}t!==null&&(t.needsUpdate=!0)}clone(){return new yb(this.bones,this.boneInverses)}computeBoneTexture(){let n=Math.sqrt(this.bones.length*4);n=gn(n);n=Math.max(n,4);const t=new Float32Array(n*n*4);t.set(this.boneMatrices);const i=new lo(t,n,n,kt,di);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this.boneTextureSize=n,this}getBoneByName(n){for(let t=0,i=this.bones.length;t<i;t++){const i=this.bones[t];if(i.name===n)return i}return undefined}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(n,t){this.uuid=n.uuid;for(let i=0,r=n.bones.length;i<r;i++){const u=n.bones[i];let r=t[u];r===undefined&&(console.warn("THREE.Skeleton: No bone found with UUID:",u),r=new vb);this.bones.push(r);this.boneInverses.push((new o).fromArray(n.boneInverses[i]))}return this.init(),this}toJSON(){const n={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let r=0,u=t.length;r<u;r++){const u=t[r];n.bones.push(u.uuid);const f=i[r];n.boneInverses.push(f.toArray())}return n}}class ao extends p{constructor(n,t,i,r=1){super(n,t,i);this.isInstancedBufferAttribute=!0;this.meshPerAttribute=r}copy(n){return super.copy(n),this.meshPerAttribute=n.meshPerAttribute,this}toJSON(){const n=super.toJSON();return n.meshPerAttribute=this.meshPerAttribute,n.isInstancedBufferAttribute=!0,n}}const vo=new o,fut=new o,ra=[],eut=new nr,ipt=new o,th=new et,ih=new hi;class out extends et{constructor(n,t,i){super(n,t);this.isInstancedMesh=!0;this.instanceMatrix=new ao(new Float32Array(i*16),16);this.instanceColor=null;this.count=i;this.boundingBox=null;this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,ipt)}computeBoundingBox(){const n=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new nr);n.boundingBox===null&&n.computeBoundingBox();this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,vo),eut.copy(n.boundingBox).applyMatrix4(vo),this.boundingBox.union(eut)}computeBoundingSphere(){const n=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new hi);n.boundingSphere===null&&n.computeBoundingSphere();this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,vo),ih.copy(n.boundingSphere).applyMatrix4(vo),this.boundingSphere.union(ih)}copy(n,t){return super.copy(n,t),this.instanceMatrix.copy(n.instanceMatrix),n.instanceColor!==null&&(this.instanceColor=n.instanceColor.clone()),this.count=n.count,n.boundingBox!==null&&(this.boundingBox=n.boundingBox.clone()),n.boundingSphere!==null&&(this.boundingSphere=n.boundingSphere.clone()),this}getColorAt(n,t){t.fromArray(this.instanceColor.array,n*3)}getMatrixAt(n,t){t.fromArray(this.instanceMatrix.array,n*16)}raycast(n,t){const i=this.matrixWorld,r=this.count;if((th.geometry=this.geometry,th.material=this.material,th.material!==undefined)&&(this.boundingSphere===null&&this.computeBoundingSphere(),ih.copy(this.boundingSphere),ih.applyMatrix4(i),n.ray.intersectsSphere(ih)!==!1))for(let u=0;u<r;u++){this.getMatrixAt(u,vo);fut.multiplyMatrices(i,vo);th.matrixWorld=fut;th.raycast(n,ra);for(let n=0,i=ra.length;n<i;n++){const i=ra[n];i.instanceId=u;i.object=this;t.push(i)}ra.length=0}}setColorAt(n,t){this.instanceColor===null&&(this.instanceColor=new ao(new Float32Array(this.instanceMatrix.count*3),3));t.toArray(this.instanceColor.array,n*3)}setMatrixAt(n,t){t.toArray(this.instanceMatrix.array,n*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class pt extends ct{constructor(n){super();this.isLineBasicMaterial=!0;this.type="LineBasicMaterial";this.color=new u(16777215);this.map=null;this.linewidth=1;this.linecap="round";this.linejoin="round";this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.linewidth=n.linewidth,this.linecap=n.linecap,this.linejoin=n.linejoin,this.fog=n.fog,this}}const sut=new t,hut=new t,cut=new o,pb=new ce,ua=new hi;class lu extends v{constructor(n=new l,t=new pt){super();this.isLine=!0;this.type="Line";this.geometry=n;this.material=t;this.updateMorphTargets()}copy(n,t){return super.copy(n,t),this.material=n.material,this.geometry=n.geometry,this}computeLineDistances(){const n=this.geometry;if(n.index===null){const i=n.attributes.position,t=[0];for(let n=1,r=i.count;n<r;n++)sut.fromBufferAttribute(i,n-1),hut.fromBufferAttribute(i,n),t[n]=t[n-1],t[n]+=sut.distanceTo(hut);n.setAttribute("lineDistance",new f(t,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(n,i){const r=this.geometry,l=this.matrixWorld,a=n.params.Line.threshold,u=r.drawRange;if(r.boundingSphere===null&&r.computeBoundingSphere(),ua.copy(r.boundingSphere),ua.applyMatrix4(l),ua.radius+=a,n.ray.intersectsSphere(ua)!==!1){cut.copy(l).invert();pb.copy(n.ray).applyMatrix4(cut);const v=a/((this.scale.x+this.scale.y+this.scale.z)/3),y=v*v,o=new t,s=new t,h=new t,f=new t,p=this.isLineSegments?2:1,c=r.index,w=r.attributes,e=w.position;if(c!==null){const t=Math.max(0,u.start),r=Math.min(c.count,u.start+u.count);for(let u=t,l=r-1;u<l;u+=p){const r=c.getX(u),l=c.getX(u+1);o.fromBufferAttribute(e,r);s.fromBufferAttribute(e,l);const a=pb.distanceSqToSegment(o,s,f,h);if(!(a>y)){f.applyMatrix4(this.matrixWorld);const t=n.ray.origin.distanceTo(f);t<n.near||t>n.far||i.push({distance:t,point:h.clone().applyMatrix4(this.matrixWorld),index:u,face:null,faceIndex:null,object:this})}}}else{const t=Math.max(0,u.start),r=Math.min(e.count,u.start+u.count);for(let u=t,c=r-1;u<c;u+=p){o.fromBufferAttribute(e,u);s.fromBufferAttribute(e,u+1);const r=pb.distanceSqToSegment(o,s,f,h);if(!(r>y)){f.applyMatrix4(this.matrixWorld);const t=n.ray.origin.distanceTo(f);t<n.near||t>n.far||i.push({distance:t,point:h.clone().applyMatrix4(this.matrixWorld),index:u,face:null,faceIndex:null,object:this})}}}}}updateMorphTargets(){const i=this.geometry,n=i.morphAttributes,t=Object.keys(n);if(t.length>0){const i=n[t[0]];if(i!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let n=0,t=i.length;n<t;n++){const t=i[n].name||String(n);this.morphTargetInfluences.push(0);this.morphTargetDictionary[t]=n}}}}}const lut=new t,aut=new t;class ir extends lu{constructor(n,t){super(n,t);this.isLineSegments=!0;this.type="LineSegments"}computeLineDistances(){const n=this.geometry;if(n.index===null){const i=n.attributes.position,t=[];for(let n=0,r=i.count;n<r;n+=2)lut.fromBufferAttribute(i,n),aut.fromBufferAttribute(i,n+1),t[n]=n===0?0:t[n-1],t[n+1]=t[n]+lut.distanceTo(aut);n.setAttribute("lineDistance",new f(t,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class vut extends lu{constructor(n,t){super(n,t);this.isLineLoop=!0;this.type="LineLoop"}}class wb extends ct{constructor(n){super();this.isPointsMaterial=!0;this.type="PointsMaterial";this.color=new u(16777215);this.map=null;this.alphaMap=null;this.size=1;this.sizeAttenuation=!0;this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.size=n.size,this.sizeAttenuation=n.sizeAttenuation,this.fog=n.fog,this}}const yut=new o,bb=new ce,fa=new hi,ea=new t;class put extends v{constructor(n=new l,t=new wb){super();this.isPoints=!0;this.type="Points";this.geometry=n;this.material=t;this.updateMorphTargets()}copy(n,t){return super.copy(n,t),this.material=n.material,this.geometry=n.geometry,this}raycast(n,t){const i=this.geometry,u=this.matrixWorld,o=n.params.Points.threshold,r=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),fa.copy(i.boundingSphere),fa.applyMatrix4(u),fa.radius+=o,n.ray.intersectsSphere(fa)!==!1){yut.copy(u).invert();bb.copy(n.ray).applyMatrix4(yut);const s=o/((this.scale.x+this.scale.y+this.scale.z)/3),h=s*s,f=i.index,c=i.attributes,e=c.position;if(f!==null){const i=Math.max(0,r.start),o=Math.min(f.count,r.start+r.count);for(let r=i,s=o;r<s;r++){const i=f.getX(r);ea.fromBufferAttribute(e,i);wut(ea,i,h,u,n,t,this)}}else{const i=Math.max(0,r.start),f=Math.min(e.count,r.start+r.count);for(let r=i,o=f;r<o;r++)ea.fromBufferAttribute(e,r),wut(ea,r,h,u,n,t,this)}}}updateMorphTargets(){const i=this.geometry,n=i.morphAttributes,t=Object.keys(n);if(t.length>0){const i=n[t[0]];if(i!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(let n=0,t=i.length;n<t;n++){const t=i[n].name||String(n);this.morphTargetInfluences.push(0);this.morphTargetDictionary[t]=n}}}}}class rpt extends tt{constructor(n,t,i,r,u,f,e,o,s){function h(){c.needsUpdate=!0;n.requestVideoFrameCallback(h)}super(n,t,i,r,u,f,e,o,s);this.isVideoTexture=!0;this.minFilter=f!==undefined?f:g;this.magFilter=u!==undefined?u:g;this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in n&&n.requestVideoFrameCallback(h)}clone(){return new this.constructor(this.image).copy(this)}update(){const n=this.image,t="requestVideoFrameCallback"in n;t===!1&&n.readyState>=n.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class upt extends tt{constructor(n,t){super({width:n,height:t});this.isFramebufferTexture=!0;this.magFilter=d;this.minFilter=d;this.generateMipmaps=!1;this.needsUpdate=!0}}class kb extends tt{constructor(n,t,i,r,u,f,e,o,s,h,c,l){super(null,f,e,o,s,h,r,u,c,l);this.isCompressedTexture=!0;this.image={width:t,height:i};this.mipmaps=n;this.flipY=!1;this.generateMipmaps=!1}}class fpt extends kb{constructor(n,t,i,r,u,f){super(n,t,i,u,f);this.isCompressedArrayTexture=!0;this.image.depth=r;this.wrapR=st}}class ept extends tt{constructor(n,t,i,r,u,f,e,o,s){super(n,t,i,r,u,f,e,o,s);this.isCanvasTexture=!0;this.needsUpdate=!0}}class yi{constructor(){this.type="Curve";this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(n,t){const i=this.getUtoTmapping(n);return this.getPoint(i,t)}getPoints(n=5){const t=[];for(let i=0;i<=n;i++)t.push(this.getPoint(i/n));return t}getSpacedPoints(n=5){const t=[];for(let i=0;i<=n;i++)t.push(this.getPointAt(i/n));return t}getLength(){const n=this.getLengths();return n[n.length-1]}getLengths(n=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===n+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let i,r=this.getPoint(0),u=0;t.push(0);for(let f=1;f<=n;f++)i=this.getPoint(f/n),u+=i.distanceTo(r),t.push(u),r=i;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0;this.getLengths()}getUtoTmapping(n,t){const r=this.getLengths();let i=0;const f=r.length;let e;e=t?t:n*r[f-1];let o=0,u=f-1,s;while(o<=u)if(i=Math.floor(o+(u-o)/2),s=r[i]-e,s<0)o=i+1;else if(s>0)u=i-1;else{u=i;break}if(i=u,r[i]===e)return i/(f-1);const h=r[i],c=r[i+1],l=c-h,a=(e-h)/l;return(i+a)/(f-1)}getTangent(n,r){const e=.0001;let u=n-e,f=n+e;u<0&&(u=0);f>1&&(f=1);const o=this.getPoint(u),h=this.getPoint(f),s=r||(o.isVector2?new i:new t);return s.copy(h).sub(o).normalize(),s}getTangentAt(n,t){const i=this.getUtoTmapping(n);return this.getTangent(i,t)}computeFrenetFrames(n,i){const h=new t,r=[],u=[],f=[],e=new t,c=new o;for(let i=0;i<=n;i++){const u=i/n;r[i]=this.getTangentAt(u,new t)}u[0]=new t;f[0]=new t;let s=Number.MAX_VALUE;const l=Math.abs(r[0].x),a=Math.abs(r[0].y),v=Math.abs(r[0].z);l<=s&&(s=l,h.set(1,0,0));a<=s&&(s=a,h.set(0,1,0));v<=s&&h.set(0,0,1);e.crossVectors(r[0],h).normalize();u[0].crossVectors(r[0],e);f[0].crossVectors(r[0],u[0]);for(let t=1;t<=n;t++){if(u[t]=u[t-1].clone(),f[t]=f[t-1].clone(),e.crossVectors(r[t-1],r[t]),e.length()>Number.EPSILON){e.normalize();const n=Math.acos(b(r[t-1].dot(r[t]),-1,1));u[t].applyMatrix4(c.makeRotationAxis(e,n))}f[t].crossVectors(r[t],u[t])}if(i===!0){let t=Math.acos(b(u[0].dot(u[n]),-1,1));t/=n;r[0].dot(e.crossVectors(u[0],u[n]))>0&&(t=-t);for(let i=1;i<=n;i++)u[i].applyMatrix4(c.makeRotationAxis(r[i],t*i)),f[i].crossVectors(r[i],u[i])}return{tangents:r,normals:u,binormals:f}}clone(){return(new this.constructor).copy(this)}copy(n){return this.arcLengthDivisions=n.arcLengthDivisions,this}toJSON(){const n={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return n.arcLengthDivisions=this.arcLengthDivisions,n.type=this.type,n}fromJSON(n){return this.arcLengthDivisions=n.arcLengthDivisions,this}}class oa extends yi{constructor(n=0,t=0,i=1,r=1,u=0,f=Math.PI*2,e=false,o=0){super();this.isEllipseCurve=!0;this.type="EllipseCurve";this.aX=n;this.aY=t;this.xRadius=i;this.yRadius=r;this.aStartAngle=u;this.aEndAngle=f;this.aClockwise=e;this.aRotation=o}getPoint(n,t){const h=t||new i,u=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;while(r<0)r+=u;while(r>u)r-=u;r<Number.EPSILON&&(r=o?0:u);this.aClockwise!==!0||o||(r=r===u?-u:r-u);const s=this.aStartAngle+n*r;let f=this.aX+this.xRadius*Math.cos(s),e=this.aY+this.yRadius*Math.sin(s);if(this.aRotation!==0){const n=Math.cos(this.aRotation),t=Math.sin(this.aRotation),i=f-this.aX,r=e-this.aY;f=i*n-r*t+this.aX;e=i*t+r*n+this.aY}return h.set(f,e)}copy(n){return super.copy(n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this}toJSON(){const n=super.toJSON();return n.aX=this.aX,n.aY=this.aY,n.xRadius=this.xRadius,n.yRadius=this.yRadius,n.aStartAngle=this.aStartAngle,n.aEndAngle=this.aEndAngle,n.aClockwise=this.aClockwise,n.aRotation=this.aRotation,n}fromJSON(n){return super.fromJSON(n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this}}class but extends oa{constructor(n,t,i,r,u,f){super(n,t,i,i,r,u,f);this.isArcCurve=!0;this.type="ArcCurve"}}const sa=new t,gb=new db,nk=new db,tk=new db;class kut extends yi{constructor(n=[],t=false,i="centripetal",r=.5){super();this.isCatmullRomCurve3=!0;this.type="CatmullRomCurve3";this.points=n;this.closed=t;this.curveType=i;this.tension=r}getPoint(n,i=new t){const l=i,f=this.points,r=f.length,a=(r-(this.closed?0:1))*n;let u=Math.floor(a),c=a-u;this.closed?u+=u>0?0:(Math.floor(Math.abs(u)/r)+1)*r:c===0&&u===r-1&&(u=r-2,c=1);let e,o;this.closed||u>0?e=f[(u-1)%r]:(sa.subVectors(f[0],f[1]).add(f[0]),e=sa);const s=f[u%r],h=f[(u+1)%r];if(this.closed||u+2<r?o=f[(u+2)%r]:(sa.subVectors(f[r-1],f[r-2]).add(f[r-1]),o=sa),this.curveType==="centripetal"||this.curveType==="chordal"){const r=this.curveType==="chordal"?.5:.25;let t=Math.pow(e.distanceToSquared(s),r),n=Math.pow(s.distanceToSquared(h),r),i=Math.pow(h.distanceToSquared(o),r);n<.0001&&(n=1);t<.0001&&(t=n);i<.0001&&(i=n);gb.initNonuniformCatmullRom(e.x,s.x,h.x,o.x,t,n,i);nk.initNonuniformCatmullRom(e.y,s.y,h.y,o.y,t,n,i);tk.initNonuniformCatmullRom(e.z,s.z,h.z,o.z,t,n,i)}else this.curveType==="catmullrom"&&(gb.initCatmullRom(e.x,s.x,h.x,o.x,this.tension),nk.initCatmullRom(e.y,s.y,h.y,o.y,this.tension),tk.initCatmullRom(e.z,s.z,h.z,o.z,this.tension));return l.set(gb.calc(c),nk.calc(c),tk.calc(c)),l}copy(n){super.copy(n);this.points=[];for(let t=0,i=n.points.length;t<i;t++){const i=n.points[t];this.points.push(i.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){const n=super.toJSON();n.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];n.points.push(i.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n);this.points=[];for(let i=0,r=n.points.length;i<r;i++){const r=n.points[i];this.points.push((new t).fromArray(r))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}class ik extends yi{constructor(n=new i,t=new i,r=new i,u=new i){super();this.isCubicBezierCurve=!0;this.type="CubicBezierCurve";this.v0=n;this.v1=t;this.v2=r;this.v3=u}getPoint(n,t=new i){const r=t,u=this.v0,f=this.v1,e=this.v2,o=this.v3;return r.set(uh(n,u.x,f.x,e.x,o.x),uh(n,u.y,f.y,e.y,o.y)),r}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this}}class gut extends yi{constructor(n=new t,i=new t,r=new t,u=new t){super();this.isCubicBezierCurve3=!0;this.type="CubicBezierCurve3";this.v0=n;this.v1=i;this.v2=r;this.v3=u}getPoint(n,i=new t){const o=i,r=this.v0,u=this.v1,f=this.v2,e=this.v3;return o.set(uh(n,r.x,u.x,f.x,e.x),uh(n,r.y,u.y,f.y,e.y),uh(n,r.z,u.z,f.z,e.z)),o}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this}}class ha extends yi{constructor(n=new i,t=new i){super();this.isLineCurve=!0;this.type="LineCurve";this.v1=n;this.v2=t}getPoint(n,t=new i){const r=t;return n===1?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(n).add(this.v1)),r}getPointAt(n,t){return this.getPoint(n,t)}getTangent(n,t=new i){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(n,t){return this.getTangent(n,t)}copy(n){return super.copy(n),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}class nft extends yi{constructor(n=new t,i=new t){super();this.isLineCurve3=!0;this.type="LineCurve3";this.v1=n;this.v2=i}getPoint(n,i=new t){const r=i;return n===1?r.copy(this.v2):(r.copy(this.v2).sub(this.v1),r.multiplyScalar(n).add(this.v1)),r}getPointAt(n,t){return this.getPoint(n,t)}getTangent(n,i=new t){return i.subVectors(this.v2,this.v1).normalize()}getTangentAt(n,t){return this.getTangent(n,t)}copy(n){return super.copy(n),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}class rk extends yi{constructor(n=new i,t=new i,r=new i){super();this.isQuadraticBezierCurve=!0;this.type="QuadraticBezierCurve";this.v0=n;this.v1=t;this.v2=r}getPoint(n,t=new i){const r=t,u=this.v0,f=this.v1,e=this.v2;return r.set(rh(n,u.x,f.x,e.x),rh(n,u.y,f.y,e.y)),r}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}class uk extends yi{constructor(n=new t,i=new t,r=new t){super();this.isQuadraticBezierCurve3=!0;this.type="QuadraticBezierCurve3";this.v0=n;this.v1=i;this.v2=r}getPoint(n,i=new t){const e=i,r=this.v0,u=this.v1,f=this.v2;return e.set(rh(n,r.x,u.x,f.x),rh(n,r.y,u.y,f.y),rh(n,r.z,u.z,f.z)),e}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}class fk extends yi{constructor(n=[]){super();this.isSplineCurve=!0;this.type="SplineCurve";this.points=n}getPoint(n,t=new i){const f=t,r=this.points,e=(r.length-1)*n,u=Math.floor(e),o=e-u,s=r[u===0?u:u-1],h=r[u],c=r[u>r.length-2?r.length-1:u+1],l=r[u>r.length-3?r.length-1:u+2];return f.set(dut(o,s.x,h.x,c.x,l.x),dut(o,s.y,h.y,c.y,l.y)),f}copy(n){super.copy(n);this.points=[];for(let t=0,i=n.points.length;t<i;t++){const i=n.points[t];this.points.push(i.clone())}return this}toJSON(){const n=super.toJSON();n.points=[];for(let t=0,i=this.points.length;t<i;t++){const i=this.points[t];n.points.push(i.toArray())}return n}fromJSON(n){super.fromJSON(n);this.points=[];for(let t=0,r=n.points.length;t<r;t++){const r=n.points[t];this.points.push((new i).fromArray(r))}return this}}ca=Object.freeze({__proto__:null,ArcCurve:but,CatmullRomCurve3:kut,CubicBezierCurve:ik,CubicBezierCurve3:gut,EllipseCurve:oa,LineCurve:ha,LineCurve3:nft,QuadraticBezierCurve:rk,QuadraticBezierCurve3:uk,SplineCurve:fk});class tft extends yi{constructor(){super();this.type="CurvePath";this.curves=[];this.autoClose=!1}add(n){this.curves.push(n)}closePath(){const n=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);n.equals(t)||this.curves.push(new ha(t,n))}getPoint(n,t){const u=n*this.getLength(),r=this.getCurveLengths();let i=0;while(i<r.length){if(r[i]>=u){const e=r[i]-u,n=this.curves[i],f=n.getLength(),o=f===0?0:1-e/f;return n.getPointAt(o,t)}i++}return null}getLength(){const n=this.getCurveLengths();return n[n.length-1]}updateArcLengths(){this.needsUpdate=!0;this.cacheLengths=null;this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let t=0;for(let i=0,r=this.curves.length;i<r;i++)t+=this.curves[i].getLength(),n.push(t);return this.cacheLengths=n,n}getSpacedPoints(n=40){const t=[];for(let i=0;i<=n;i++)t.push(this.getPoint(i/n));return this.autoClose&&t.push(t[0]),t}getPoints(n=12){const t=[];let i;for(let r=0,u=this.curves;r<u.length;r++){const f=u[r],o=f.isEllipseCurve?n*2:f.isLineCurve||f.isLineCurve3?1:f.isSplineCurve?n*f.points.length:n,e=f.getPoints(o);for(let n=0;n<e.length;n++){const r=e[n];i&&i.equals(r)||(t.push(r),i=r)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(n){super.copy(n);this.curves=[];for(let t=0,i=n.curves.length;t<i;t++){const i=n.curves[t];this.curves.push(i.clone())}return this.autoClose=n.autoClose,this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose;n.curves=[];for(let t=0,i=this.curves.length;t<i;t++){const i=this.curves[t];n.curves.push(i.toJSON())}return n}fromJSON(n){super.fromJSON(n);this.autoClose=n.autoClose;this.curves=[];for(let t=0,i=n.curves.length;t<i;t++){const i=n.curves[t];this.curves.push((new ca[i.type]).fromJSON(i))}return this}}class fh extends tft{constructor(n){super();this.type="Path";this.currentPoint=new i;n&&this.setFromPoints(n)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let t=1,i=n.length;t<i;t++)this.lineTo(n[t].x,n[t].y);return this}moveTo(n,t){return this.currentPoint.set(n,t),this}lineTo(n,t){const r=new ha(this.currentPoint.clone(),new i(n,t));return this.curves.push(r),this.currentPoint.set(n,t),this}quadraticCurveTo(n,t,r,u){const f=new rk(this.currentPoint.clone(),new i(n,t),new i(r,u));return this.curves.push(f),this.currentPoint.set(r,u),this}bezierCurveTo(n,t,r,u,f,e){const o=new ik(this.currentPoint.clone(),new i(n,t),new i(r,u),new i(f,e));return this.curves.push(o),this.currentPoint.set(f,e),this}splineThru(n){const t=[this.currentPoint.clone()].concat(n),i=new fk(t);return this.curves.push(i),this.currentPoint.copy(n[n.length-1]),this}arc(n,t,i,r,u,f){const e=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(n+e,t+o,i,r,u,f),this}absarc(n,t,i,r,u,f){return this.absellipse(n,t,i,i,r,u,f),this}ellipse(n,t,i,r,u,f,e,o){const s=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(n+s,t+h,i,r,u,f,e,o),this}absellipse(n,t,i,r,u,f,e,o){const s=new oa(n,t,i,r,u,f,e,o);if(this.curves.length>0){const n=s.getPoint(0);n.equals(this.currentPoint)||this.lineTo(n.x,n.y)}this.curves.push(s);const h=s.getPoint(1);return this.currentPoint.copy(h),this}copy(n){return super.copy(n),this.currentPoint.copy(n.currentPoint),this}toJSON(){const n=super.toJSON();return n.currentPoint=this.currentPoint.toArray(),n}fromJSON(n){return super.fromJSON(n),this.currentPoint.fromArray(n.currentPoint),this}}class eh extends l{constructor(n=[new i(0,-.5),new i(.5,0),new i(0,.5)],r=12,u=0,e=Math.PI*2){super();this.type="LatheGeometry";this.parameters={points:n,segments:r,phiStart:u,phiLength:e};r=Math.floor(r);e=b(e,0,Math.PI*2);const y=[],p=[],w=[],h=[],k=[],g=1/r,c=new t,a=new i,o=new t,d=new t,s=new t;let v=0,l=0;for(let t=0;t<=n.length-1;t++)switch(t){case 0:v=n[t+1].x-n[t].x;l=n[t+1].y-n[t].y;o.x=l*1;o.y=-v;o.z=l*0;s.copy(o);o.normalize();h.push(o.x,o.y,o.z);break;case n.length-1:h.push(s.x,s.y,s.z);break;default:v=n[t+1].x-n[t].x;l=n[t+1].y-n[t].y;o.x=l*1;o.y=-v;o.z=l*0;d.copy(o);o.x+=s.x;o.y+=s.y;o.z+=s.z;o.normalize();h.push(o.x,o.y,o.z);s.copy(d)}for(let t=0;t<=r;t++){const i=u+t*g*e,f=Math.sin(i),o=Math.cos(i);for(let i=0;i<=n.length-1;i++){c.x=n[i].x*f;c.y=n[i].y;c.z=n[i].x*o;p.push(c.x,c.y,c.z);a.x=t/r;a.y=i/(n.length-1);w.push(a.x,a.y);const u=h[3*i+0]*f,e=h[3*i+1],s=h[3*i+0]*o;k.push(u,e,s)}}for(let t=0;t<r;t++)for(let i=0;i<n.length-1;i++){const r=i+t*n.length,e=r,u=r+n.length,o=r+n.length+1,f=r+1;y.push(e,u,f);y.push(o,f,u)}this.setIndex(y);this.setAttribute("position",new f(p,3));this.setAttribute("uv",new f(w,2));this.setAttribute("normal",new f(k,3))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new eh(n.points,n.segments,n.phiStart,n.phiLength)}}class la extends eh{constructor(n=1,t=1,i=4,r=8){const u=new fh;u.absarc(0,-t/2,n,Math.PI*1.5,0);u.absarc(0,t/2,n,0,Math.PI*.5);super(u.getPoints(i),r);this.type="CapsuleGeometry";this.parameters={radius:n,height:t,capSegments:i,radialSegments:r}}static fromJSON(n){return new la(n.radius,n.length,n.capSegments,n.radialSegments)}}class aa extends l{constructor(n=1,r=32,u=0,e=Math.PI*2){super();this.type="CircleGeometry";this.parameters={radius:n,segments:r,thetaStart:u,thetaLength:e};r=Math.max(3,r);const a=[],o=[],c=[],l=[],s=new t,h=new i;o.push(0,0,0);c.push(0,0,1);l.push(.5,.5);for(let t=0,i=3;t<=r;t++,i+=3){const f=u+t/r*e;s.x=n*Math.cos(f);s.y=n*Math.sin(f);o.push(s.x,s.y,s.z);c.push(0,0,1);h.x=(o[i]/n+1)/2;h.y=(o[i+1]/n+1)/2;l.push(h.x,h.y)}for(let n=1;n<=r;n++)a.push(n,n+1,0);this.setIndex(a);this.setAttribute("position",new f(o,3));this.setAttribute("normal",new f(c,3));this.setAttribute("uv",new f(l,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new aa(n.radius,n.segments,n.thetaStart,n.thetaLength)}}class yo extends l{constructor(n=1,r=1,u=1,e=32,o=1,s=false,h=0,c=Math.PI*2){function nt(){const f=new t,i=new t;let s=0;const g=(r-n)/u;for(let t=0;t<=o;t++){const l=[],s=t/o,b=s*(r-n)+n;for(let n=0;n<=e;n++){const t=n/e,r=t*c+h,o=Math.sin(r),v=Math.cos(r);i.x=b*o;i.y=-s*u+k;i.z=b*v;y.push(i.x,i.y,i.z);f.set(o,g,v).normalize();p.push(f.x,f.y,f.z);w.push(t,1-s);l.push(a++)}v.push(l)}for(let n=0;n<e;n++)for(let t=0;t<o;t++){const u=v[t][n],i=v[t+1][n],f=v[t+1][n+1],r=v[t][n+1];l.push(u,i,r);l.push(i,f,r);s+=6}d.addGroup(b,s,0);b+=s}function g(u){const nt=a,s=new i,f=new t;let v=0;const g=u===!0?n:r,o=u===!0?1:-1;for(let n=1;n<=e;n++)y.push(0,k*o,0),p.push(0,o,0),w.push(.5,.5),a++;const tt=a;for(let n=0;n<=e;n++){const u=n/e,t=u*c+h,i=Math.cos(t),r=Math.sin(t);f.x=g*r;f.y=k*o;f.z=g*i;y.push(f.x,f.y,f.z);p.push(0,o,0);s.x=i*.5+.5;s.y=r*.5*o+.5;w.push(s.x,s.y);a++}for(let n=0;n<e;n++){const i=nt+n,t=tt+n;u===!0?l.push(t,t+1,i):l.push(t+1,t,i);v+=3}d.addGroup(b,v,u===!0?1:2);b+=v}super();this.type="CylinderGeometry";this.parameters={radiusTop:n,radiusBottom:r,height:u,radialSegments:e,heightSegments:o,openEnded:s,thetaStart:h,thetaLength:c};const d=this;e=Math.floor(e);o=Math.floor(o);const l=[],y=[],p=[],w=[];let a=0;const v=[],k=u/2;let b=0;nt();s===!1&&(n>0&&g(!0),r>0&&g(!1));this.setIndex(l);this.setAttribute("position",new f(y,3));this.setAttribute("normal",new f(p,3));this.setAttribute("uv",new f(w,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new yo(n.radiusTop,n.radiusBottom,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength)}}class va extends yo{constructor(n=1,t=1,i=32,r=1,u=false,f=0,e=Math.PI*2){super(0,n,t,i,r,u,f,e);this.type="ConeGeometry";this.parameters={radius:n,height:t,radialSegments:i,heightSegments:r,openEnded:u,thetaStart:f,thetaLength:e}}static fromJSON(n){return new va(n.radius,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength)}}class au extends l{constructor(n=[],r=[],u=1,e=0){function v(n){const i=new t,u=new t,f=new t;for(let t=0;t<r.length;t+=3)c(r[t+0],i),c(r[t+1],u),c(r[t+2],f),y(i,u,f,n)}function y(n,t,i,r){const f=r+1,u=[];for(let r=0;r<=f;r++){u[r]=[];const e=n.clone().lerp(i,r/f),s=t.clone().lerp(i,r/f),o=f-r;for(let n=0;n<=o;n++)u[r][n]=n===0&&r===f?e:e.clone().lerp(s,n/o)}for(let n=0;n<f;n++)for(let t=0;t<2*(f-n)-1;t++){const i=Math.floor(t/2);t%2==0?(h(u[n][i+1]),h(u[n+1][i]),h(u[n][i])):(h(u[n][i+1]),h(u[n+1][i+1]),h(u[n+1][i]))}}function p(n){const i=new t;for(let t=0;t<o.length;t+=3)i.x=o[t+0],i.y=o[t+1],i.z=o[t+2],i.normalize().multiplyScalar(n),o[t+0]=i.x,o[t+1]=i.y,o[t+2]=i.z}function w(){const n=new t;for(let t=0;t<o.length;t+=3){n.x=o[t+0];n.y=o[t+1];n.z=o[t+2];const i=a(n)/2/Math.PI+.5,r=d(n)/Math.PI+.5;s.push(i,1-r)}k();b()}function b(){for(let n=0;n<s.length;n+=6){const t=s[n+0],i=s[n+2],r=s[n+4],u=Math.max(t,i,r),f=Math.min(t,i,r);u>.9&&f<.1&&(t<.2&&(s[n+0]+=1),i<.2&&(s[n+2]+=1),r<.2&&(s[n+4]+=1))}}function h(n){o.push(n.x,n.y,n.z)}function c(t,i){const r=t*3;i.x=n[r+0];i.y=n[r+1];i.z=n[r+2]}function k(){const n=new t,r=new t,u=new t,f=new t,e=new i,h=new i,c=new i;for(let t=0,i=0;t<o.length;t+=9,i+=6){n.set(o[t+0],o[t+1],o[t+2]);r.set(o[t+3],o[t+4],o[t+5]);u.set(o[t+6],o[t+7],o[t+8]);e.set(s[i+0],s[i+1]);h.set(s[i+2],s[i+3]);c.set(s[i+4],s[i+5]);f.copy(n).add(r).add(u).divideScalar(3);const v=a(f);l(e,i+0,n,v);l(h,i+2,r,v);l(c,i+4,u,v)}}function l(n,t,i,r){r<0&&n.x===1&&(s[t]=n.x-1);i.x===0&&i.z===0&&(s[t]=r/2/Math.PI+.5)}function a(n){return Math.atan2(n.z,-n.x)}function d(n){return Math.atan2(-n.y,Math.sqrt(n.x*n.x+n.z*n.z))}super();this.type="PolyhedronGeometry";this.parameters={vertices:n,indices:r,radius:u,detail:e};const o=[],s=[];v(e);p(u);w();this.setAttribute("position",new f(o,3));this.setAttribute("normal",new f(o.slice(),3));this.setAttribute("uv",new f(s,2));e===0?this.computeVertexNormals():this.normalizeNormals()}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new au(n.vertices,n.indices,n.radius,n.details)}}class ya extends au{constructor(n=1,t=0){const i=(1+Math.sqrt(5))/2,r=1/i,u=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r];super(u,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],n,t);this.type="DodecahedronGeometry";this.parameters={radius:n,detail:t}}static fromJSON(n){return new ya(n.radius,n.detail)}}const pa=new t,wa=new t,ek=new t,ba=new ti;class ift extends l{constructor(n=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:n,thresholdAngle:t},n!==null){const u=Math.pow(10,4),l=Math.cos(gu*t),o=n.getIndex(),s=n.getAttribute("position"),a=o?o.count:s.count,i=[0,0,0],c=["a","b","c"],r=new Array(3),e={},h=[];for(let n=0;n<a;n+=3){o?(i[0]=o.getX(n),i[1]=o.getX(n+1),i[2]=o.getX(n+2)):(i[0]=n,i[1]=n+1,i[2]=n+2);const{a:t,b:f,c:a}=ba;if(t.fromBufferAttribute(s,i[0]),f.fromBufferAttribute(s,i[1]),a.fromBufferAttribute(s,i[2]),ba.getNormal(ek),r[0]=`${Math.round(t.x*u)},${Math.round(t.y*u)},${Math.round(t.z*u)}`,r[1]=`${Math.round(f.x*u)},${Math.round(f.y*u)},${Math.round(f.z*u)}`,r[2]=`${Math.round(a.x*u)},${Math.round(a.y*u)},${Math.round(a.z*u)}`,r[0]!==r[1]&&r[1]!==r[2]&&r[2]!==r[0])for(let n=0;n<3;n++){const u=(n+1)%3,s=r[n],a=r[u],f=ba[c[n]],o=ba[c[u]],v=`${s}_${a}`,t=`${a}_${s}`;t in e&&e[t]?(ek.dot(e[t].normal)<=l&&(h.push(f.x,f.y,f.z),h.push(o.x,o.y,o.z)),e[t]=null):v in e||(e[v]={index0:i[n],index1:i[u],normal:ek.clone()})}}for(const n in e)if(e[n]){const{index0:t,index1:i}=e[n];pa.fromBufferAttribute(s,t);wa.fromBufferAttribute(s,i);h.push(pa.x,pa.y,pa.z);h.push(wa.x,wa.y,wa.z)}this.setAttribute("position",new f(h,3))}}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}}class cf extends fh{constructor(n){super(n);this.uuid=dt();this.type="Shape";this.holes=[]}getPointsHoles(n){const t=[];for(let i=0,r=this.holes.length;i<r;i++)t[i]=this.holes[i].getPoints(n);return t}extractPoints(n){return{shape:this.getPoints(n),holes:this.getPointsHoles(n)}}copy(n){super.copy(n);this.holes=[];for(let t=0,i=n.holes.length;t<i;t++){const i=n.holes[t];this.holes.push(i.clone())}return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid;n.holes=[];for(let t=0,i=this.holes.length;t<i;t++){const i=this.holes[t];n.holes.push(i.toJSON())}return n}fromJSON(n){super.fromJSON(n);this.uuid=n.uuid;this.holes=[];for(let t=0,i=n.holes.length;t<i;t++){const i=n.holes[t];this.holes.push((new fh).fromJSON(i))}return this}}const ypt={triangulate:function(n,t,i=2){const a=t&&t.length,v=a?t[0]*i:n.length;let r=rft(n,0,v,i,!0);const l=[];if(!r||r.next===r.prev)return l;let u,f,h,c,e,o,s;if(a&&(r=dpt(n,t,r,i)),n.length>80*i){u=h=n[0];f=c=n[1];for(let t=i;t<v;t+=i)e=n[t],o=n[t+1],e<u&&(u=e),o<f&&(f=o),e>h&&(h=e),o>c&&(c=o);s=Math.max(h-u,c-f);s=s!==0?32767/s:0}return oh(r,l,i,u,f,s,0),l}};class pr{static area(n){const t=n.length;let i=0;for(let u=t-1,r=0;r<t;u=r++)i+=n[u].x*n[r].y-n[r].x*n[u].y;return i*.5}static isClockWise(n){return pr.area(n)<0}static triangulateShape(n,t){const i=[],r=[],u=[];oft(n);sft(i,n);let f=n.length;t.forEach(oft);for(let n=0;n<t.length;n++)r.push(f),f+=t[n].length,sft(i,t[n]);const e=ypt.triangulate(i,r);for(let n=0;n<e.length;n+=3)u.push(e.slice(n,n+3));return u}}class nv extends l{constructor(n=new cf([new i(.5,.5),new i(-.5,.5),new i(-.5,-.5),new i(.5,-.5)]),r={}){function s(n){function d(n,t,i){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),n.clone().addScaledVector(t,i)}function kt(n,t,r){let o,s,c;const u=n.x-t.x,f=n.y-t.y,e=r.x-n.x,h=r.y-n.y,l=u*u+f*f,a=u*h-f*e;if(Math.abs(a)>Number.EPSILON){const a=Math.sqrt(l),v=Math.sqrt(e*e+h*h),y=t.x-f/a,p=t.y+u/a,k=r.x-h/v,d=r.y+e/v,w=((k-y)*h-(d-p)*e)/(u*h-f*e);o=y+u*w-n.x;s=p+f*w-n.y;const b=o*o+s*s;if(b<=2)return new i(o,s);c=Math.sqrt(b/2)}else{let n=!1;u>Number.EPSILON?e>Number.EPSILON&&(n=!0):u<-Number.EPSILON?e<-Number.EPSILON&&(n=!0):Math.sign(f)===Math.sign(h)&&(n=!0);n?(o=-f,s=u,c=Math.sqrt(l)):(o=u,s=f,c=Math.sqrt(l/2))}return new i(o/c,s/c)}function ii(){const n=u.length/3;if(g){let t=0,n=a*t;for(let t=0;t<ht;t++){const i=ut[t];at(i[2]+n,i[1]+n,i[0]+n)}t=h+b*2;n=a*t;for(let t=0;t<ht;t++){const i=ut[t];at(i[0]+n,i[1]+n,i[2]+n)}}else{for(let n=0;n<ht;n++){const t=ut[n];at(t[2],t[1],t[0])}for(let n=0;n<ht;n++){const t=ut[n];at(t[0]+a*h,t[1]+a*h,t[2]+a*h)}}e.addGroup(n,u.length/3-n,0)}function ri(){const t=u.length/3;let n=0;gt(c,n);n+=c.length;for(let t=0,i=f.length;t<i;t++){const i=f[t];gt(i,n);n+=i.length}e.addGroup(t,u.length/3-t,1)}function gt(n,t){let i=n.length;while(--i>=0){const u=i;let r=i-1;r<0&&(r=n.length-1);for(let n=0,i=h+b*2;n<i;n++){const i=a*n,f=a*(n+1),e=t+u+i,o=t+r+i,s=t+r+f,h=t+u+f;ui(e,o,s,h)}}}function v(n,t,i){k.push(n);k.push(t);k.push(i)}function at(n,t,i){y(n);y(t);y(i);const r=u.length/3,f=wt.generateTopUV(e,u,r-3,r-2,r-1);p(f[0]);p(f[1]);p(f[2])}function ui(n,t,i,r){y(n);y(t);y(r);y(t);y(i);y(r);const o=u.length/3,f=wt.generateSideWallUV(e,u,o-6,o-3,o-2,o-1);p(f[0]);p(f[1]);p(f[3]);p(f[1]);p(f[2]);p(f[3])}function y(n){u.push(k[n*3+0]);u.push(k[n*3+1]);u.push(k[n*3+2])}function p(n){o.push(n.x);o.push(n.y)}const k=[],ni=r.curveSegments!==undefined?r.curveSegments:12,h=r.steps!==undefined?r.steps:1,vt=r.depth!==undefined?r.depth:1;let g=r.bevelEnabled!==undefined?r.bevelEnabled:!0,ft=r.bevelThickness!==undefined?r.bevelThickness:.2,et=r.bevelSize!==undefined?r.bevelSize:ft-.1,ot=r.bevelOffset!==undefined?r.bevelOffset:0,b=r.bevelSegments!==undefined?r.bevelSegments:3;const yt=r.extrudePath,wt=r.UVGenerator!==undefined?r.UVGenerator:cwt;let nt,st=!1,tt,it,rt,l;yt&&(nt=yt.getSpacedPoints(h),st=!0,g=!1,tt=yt.computeFrenetFrames(h,!1),it=new t,rt=new t,l=new t);g||(b=0,ft=0,et=0,ot=0);const bt=n.extractPoints(ni);let s=bt.shape;const f=bt.holes,ti=!pr.isClockWise(s);if(ti){s=s.reverse();for(let n=0,t=f.length;n<t;n++){const t=f[n];pr.isClockWise(t)&&(f[n]=t.reverse())}}const ut=pr.triangulateShape(s,f),c=s;for(let n=0,t=f.length;n<t;n++){const t=f[n];s=s.concat(t)}const a=s.length,ht=ut.length;const ct=[];for(let n=0,t=c.length,i=t-1,r=n+1;n<t;n++,i++,r++)i===t&&(i=0),r===t&&(r=0),ct[n]=kt(c[n],c[i],c[r]);const pt=[];let w,lt=ct.concat();for(let n=0,t=f.length;n<t;n++){const t=f[n];w=[];for(let n=0,i=t.length,r=i-1,u=n+1;n<i;n++,r++,u++)r===i&&(r=0),u===i&&(u=0),w[n]=kt(t[n],t[r],t[u]);pt.push(w);lt=lt.concat(w)}for(let n=0;n<b;n++){const t=n/b,i=ft*Math.cos(t*Math.PI/2),r=et*Math.sin(t*Math.PI/2)+ot;for(let n=0,t=c.length;n<t;n++){const t=d(c[n],ct[n],r);v(t.x,t.y,-i)}for(let n=0,t=f.length;n<t;n++){const t=f[n];w=pt[n];for(let n=0,u=t.length;n<u;n++){const u=d(t[n],w[n],r);v(u.x,u.y,-i)}}}const dt=et+ot;for(let n=0;n<a;n++){const t=g?d(s[n],lt[n],dt):s[n];st?(rt.copy(tt.normals[0]).multiplyScalar(t.x),it.copy(tt.binormals[0]).multiplyScalar(t.y),l.copy(nt[0]).add(rt).add(it),v(l.x,l.y,l.z)):v(t.x,t.y,0)}for(let n=1;n<=h;n++)for(let t=0;t<a;t++){const i=g?d(s[t],lt[t],dt):s[t];st?(rt.copy(tt.normals[n]).multiplyScalar(i.x),it.copy(tt.binormals[n]).multiplyScalar(i.y),l.copy(nt[n]).add(rt).add(it),v(l.x,l.y,l.z)):v(i.x,i.y,vt/h*n)}for(let n=b-1;n>=0;n--){const i=n/b,t=ft*Math.cos(i*Math.PI/2),r=et*Math.sin(i*Math.PI/2)+ot;for(let n=0,i=c.length;n<i;n++){const i=d(c[n],ct[n],r);v(i.x,i.y,vt+t)}for(let n=0,i=f.length;n<i;n++){const i=f[n];w=pt[n];for(let n=0,u=i.length;n<u;n++){const u=d(i[n],w[n],r);st?v(u.x,u.y+nt[h-1].y,nt[h-1].x+t):v(u.x,u.y,vt+t)}}}ii();ri()}super();this.type="ExtrudeGeometry";this.parameters={shapes:n,options:r};n=Array.isArray(n)?n:[n];const e=this,u=[],o=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];s(i)}this.setAttribute("position",new f(u,3));this.setAttribute("uv",new f(o,2));this.computeVertexNormals()}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}toJSON(){const n=super.toJSON(),t=this.parameters.shapes,i=this.parameters.options;return lwt(t,i,n)}static fromJSON(n,t){const r=[];for(let i=0,u=n.shapes.length;i<u;i++){const u=t[n.shapes[i]];r.push(u)}const i=n.options.extrudePath;return i!==undefined&&(n.options.extrudePath=(new ca[i.type]).fromJSON(i)),new nv(r,n.options)}}const cwt={generateTopUV:function(n,t,r,u,f){const e=t[r*3],o=t[r*3+1],s=t[u*3],h=t[u*3+1],c=t[f*3],l=t[f*3+1];return[new i(e,o),new i(s,h),new i(c,l)]},generateSideWallUV:function(n,t,r,u,f,e){const o=t[r*3],s=t[r*3+1],h=t[r*3+2],c=t[u*3],l=t[u*3+1],a=t[u*3+2],p=t[f*3],w=t[f*3+1],v=t[f*3+2],b=t[e*3],k=t[e*3+1],y=t[e*3+2];return Math.abs(s-l)<Math.abs(o-c)?[new i(o,1-h),new i(c,1-a),new i(p,1-v),new i(b,1-y)]:[new i(s,1-h),new i(l,1-a),new i(w,1-v),new i(k,1-y)]}};class tv extends au{constructor(n=1,t=0){const i=(1+Math.sqrt(5))/2,r=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1];super(r,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],n,t);this.type="IcosahedronGeometry";this.parameters={radius:n,detail:t}}static fromJSON(n){return new tv(n.radius,n.detail)}}class ch extends au{constructor(n=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],n,t);this.type="OctahedronGeometry";this.parameters={radius:n,detail:t}}static fromJSON(n){return new ch(n.radius,n.detail)}}class iv extends l{constructor(n=.5,r=1,u=32,e=1,o=0,s=Math.PI*2){super();this.type="RingGeometry";this.parameters={innerRadius:n,outerRadius:r,thetaSegments:u,phiSegments:e,thetaStart:o,thetaLength:s};u=Math.max(3,u);e=Math.max(1,e);const l=[],v=[],y=[],p=[];let a=n;const w=(r-n)/e,h=new t,c=new i;for(let n=0;n<=e;n++){for(let n=0;n<=u;n++){const t=o+n/u*s;h.x=a*Math.cos(t);h.y=a*Math.sin(t);v.push(h.x,h.y,h.z);y.push(0,0,1);c.x=(h.x/r+1)/2;c.y=(h.y/r+1)/2;p.push(c.x,c.y)}a+=w}for(let n=0;n<e;n++){const t=n*(u+1);for(let n=0;n<u;n++){const i=n+t,e=i,r=i+u+1,o=i+u+2,f=i+1;l.push(e,r,f);l.push(r,o,f)}}this.setIndex(l);this.setAttribute("position",new f(v,3));this.setAttribute("normal",new f(y,3));this.setAttribute("uv",new f(p,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new iv(n.innerRadius,n.outerRadius,n.thetaSegments,n.phiSegments,n.thetaStart,n.thetaLength)}}class rv extends l{constructor(n=new cf([new i(0,.5),new i(-.5,-.5),new i(.5,-.5)]),t=12){function c(n){const h=u.length/3,c=n.extractPoints(t);let i=c.shape;const f=c.holes;pr.isClockWise(i)===!1&&(i=i.reverse());for(let n=0,t=f.length;n<t;n++){const t=f[n];pr.isClockWise(t)===!0&&(f[n]=t.reverse())}const l=pr.triangulateShape(i,f);for(let n=0,t=f.length;n<t;n++){const t=f[n];i=i.concat(t)}for(let n=0,t=i.length;n<t;n++){const t=i[n];u.push(t.x,t.y,0);o.push(0,0,1);s.push(t.x,t.y)}for(let n=0,t=l.length;n<t;n++){const t=l[n],i=t[0]+h,u=t[1]+h,f=t[2]+h;e.push(i,u,f);r+=3}}super();this.type="ShapeGeometry";this.parameters={shapes:n,curveSegments:t};const e=[],u=[],o=[],s=[];let h=0,r=0;if(Array.isArray(n)===!1)c(n);else for(let t=0;t<n.length;t++)c(n[t]),this.addGroup(h,r,t),h+=r,r=0;this.setIndex(e);this.setAttribute("position",new f(u,3));this.setAttribute("normal",new f(o,3));this.setAttribute("uv",new f(s,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}toJSON(){const n=super.toJSON(),t=this.parameters.shapes;return awt(t,n)}static fromJSON(n,t){const i=[];for(let r=0,u=n.shapes.length;r<u;r++){const u=t[n.shapes[r]];i.push(u)}return new rv(i,n.curveSegments)}}class lh extends l{constructor(n=1,i=32,r=16,u=0,e=Math.PI*2,o=0,s=Math.PI){super();this.type="SphereGeometry";this.parameters={radius:n,widthSegments:i,heightSegments:r,phiStart:u,phiLength:e,thetaStart:o,thetaLength:s};i=Math.max(3,Math.floor(i));r=Math.max(2,Math.floor(r));const v=Math.min(o+s,Math.PI);let b=0;const c=[],h=new t,l=new t,a=[],y=[],p=[],w=[];for(let t=0;t<=r;t++){const k=[],f=t/r;let a=0;t===0&&o===0?a=.5/i:t===r&&v===Math.PI&&(a=-.5/i);for(let t=0;t<=i;t++){const r=t/i;h.x=-n*Math.cos(u+r*e)*Math.sin(o+f*s);h.y=n*Math.cos(o+f*s);h.z=n*Math.sin(u+r*e)*Math.sin(o+f*s);y.push(h.x,h.y,h.z);l.copy(h).normalize();p.push(l.x,l.y,l.z);w.push(r+a,1-f);k.push(b++)}c.push(k)}for(let n=0;n<r;n++)for(let t=0;t<i;t++){const f=c[n][t+1],i=c[n][t],e=c[n+1][t],u=c[n+1][t+1];(n!==0||o>0)&&a.push(f,i,u);(n!==r-1||v<Math.PI)&&a.push(i,e,u)}this.setIndex(a);this.setAttribute("position",new f(y,3));this.setAttribute("normal",new f(p,3));this.setAttribute("uv",new f(w,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new lh(n.radius,n.widthSegments,n.heightSegments,n.phiStart,n.phiLength,n.thetaStart,n.thetaLength)}}class uv extends au{constructor(n=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],n,t);this.type="TetrahedronGeometry";this.parameters={radius:n,detail:t}}static fromJSON(n){return new uv(n.radius,n.detail)}}class fv extends l{constructor(n=1,i=.4,r=12,u=48,e=Math.PI*2){super();this.type="TorusGeometry";this.parameters={radius:n,tube:i,radialSegments:r,tubularSegments:u,arc:e};r=Math.floor(r);u=Math.floor(u);const h=[],a=[],v=[],c=[],l=new t,o=new t,s=new t;for(let t=0;t<=r;t++)for(let f=0;f<=u;f++){const h=f/u*e,y=t/r*Math.PI*2;o.x=(n+i*Math.cos(y))*Math.cos(h);o.y=(n+i*Math.cos(y))*Math.sin(h);o.z=i*Math.sin(y);a.push(o.x,o.y,o.z);l.x=n*Math.cos(h);l.y=n*Math.sin(h);s.subVectors(o,l).normalize();v.push(s.x,s.y,s.z);c.push(f/u);c.push(t/r)}for(let n=1;n<=r;n++)for(let t=1;t<=u;t++){const f=(u+1)*n+t-1,i=(u+1)*(n-1)+t-1,e=(u+1)*(n-1)+t,r=(u+1)*n+t;h.push(f,i,r);h.push(i,e,r)}this.setIndex(h);this.setAttribute("position",new f(a,3));this.setAttribute("normal",new f(v,3));this.setAttribute("uv",new f(c,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new fv(n.radius,n.tube,n.radialSegments,n.tubularSegments,n.arc)}}class ev extends l{constructor(n=1,i=.4,r=64,u=8,e=2,o=3){function d(n,t,i,r,u){const o=Math.cos(n),s=Math.sin(n),f=i/t*n,e=Math.cos(f);u.x=r*(2+e)*.5*o;u.y=r*(2+e)*s*.5;u.z=r*Math.sin(f)*.5}super();this.type="TorusKnotGeometry";this.parameters={radius:n,tube:i,tubularSegments:r,radialSegments:u,p:e,q:o};r=Math.floor(r);u=Math.floor(u);const v=[],b=[],k=[],y=[],s=new t,a=new t,h=new t,p=new t,l=new t,w=new t,c=new t;for(let t=0;t<=r;++t){const f=t/r*e*Math.PI*2;d(f,e,o,n,h);d(f+.01,e,o,n,p);w.subVectors(p,h);c.addVectors(p,h);l.crossVectors(w,c);c.crossVectors(l,w);l.normalize();c.normalize();for(let n=0;n<=u;++n){const o=n/u*Math.PI*2,f=-i*Math.cos(o),e=i*Math.sin(o);s.x=h.x+(f*c.x+e*l.x);s.y=h.y+(f*c.y+e*l.y);s.z=h.z+(f*c.z+e*l.z);b.push(s.x,s.y,s.z);a.subVectors(s,h).normalize();k.push(a.x,a.y,a.z);y.push(t/r);y.push(n/u)}}for(let n=1;n<=r;n++)for(let t=1;t<=u;t++){const f=(u+1)*(n-1)+(t-1),i=(u+1)*n+(t-1),e=(u+1)*n+t,r=(u+1)*(n-1)+t;v.push(f,i,r);v.push(i,e,r)}this.setIndex(v);this.setAttribute("position",new f(b,3));this.setAttribute("normal",new f(k,3));this.setAttribute("uv",new f(y,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}static fromJSON(n){return new ev(n.radius,n.tube,n.tubularSegments,n.radialSegments,n.p,n.q)}}class ov extends l{constructor(n=new uk(new t(-1,-1,0),new t(-1,1,0),new t(1,1,0)),r=64,u=1,e=8,o=false){function k(){for(let n=0;n<r;n++)b(n);b(o===!1?r:0);g();d()}function b(t){l=n.getPointAt(t/r,l);const i=c.normals[t],f=c.binormals[t];for(let n=0;n<=e;n++){const o=n/e*Math.PI*2,t=Math.sin(o),r=-Math.cos(o);s.x=r*i.x+t*f.x;s.y=r*i.y+t*f.y;s.z=r*i.z+t*f.z;s.normalize();p.push(s.x,s.y,s.z);h.x=l.x+u*s.x;h.y=l.y+u*s.y;h.z=l.z+u*s.z;y.push(h.x,h.y,h.z)}}function d(){for(let n=1;n<=r;n++)for(let t=1;t<=e;t++){const u=(e+1)*(n-1)+(t-1),i=(e+1)*n+(t-1),f=(e+1)*n+t,r=(e+1)*(n-1)+t;v.push(u,i,r);v.push(i,f,r)}}function g(){for(let n=0;n<=r;n++)for(let t=0;t<=e;t++)a.x=n/r,a.y=t/e,w.push(a.x,a.y)}super();this.type="TubeGeometry";this.parameters={path:n,tubularSegments:r,radius:u,radialSegments:e,closed:o};const c=n.computeFrenetFrames(r,o);this.tangents=c.tangents;this.normals=c.normals;this.binormals=c.binormals;const h=new t,s=new t,a=new i;let l=new t;const y=[],p=[],w=[],v=[];k();this.setIndex(v);this.setAttribute("position",new f(y,3));this.setAttribute("normal",new f(p,3));this.setAttribute("uv",new f(w,2))}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}toJSON(){const n=super.toJSON();return n.path=this.parameters.path.toJSON(),n}static fromJSON(n){return new ov((new ca[n.path.type]).fromJSON(n.path),n.tubularSegments,n.radius,n.radialSegments,n.closed)}}class hft extends l{constructor(n=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:n},n!==null){const u=[],e=new Set,i=new t,r=new t;if(n.index!==null){const o=n.attributes.position,f=n.index;let t=n.groups;t.length===0&&(t=[{start:0,count:f.count,materialIndex:0}]);for(let n=0,s=t.length;n<s;++n){const s=t[n],h=s.start,c=s.count;for(let n=h,t=h+c;n<t;n+=3)for(let t=0;t<3;t++){const s=f.getX(n+t),h=f.getX(n+(t+1)%3);i.fromBufferAttribute(o,s);r.fromBufferAttribute(o,h);cft(i,r,e)===!0&&(u.push(i.x,i.y,i.z),u.push(r.x,r.y,r.z))}}}else{const t=n.attributes.position;for(let n=0,f=t.count/3;n<f;n++)for(let f=0;f<3;f++){const o=3*n+f,s=3*n+(f+1)%3;i.fromBufferAttribute(t,o);r.fromBufferAttribute(t,s);cft(i,r,e)===!0&&(u.push(i.x,i.y,i.z),u.push(r.x,r.y,r.z))}}this.setAttribute("position",new f(u,3))}}copy(n){return super.copy(n),this.parameters=Object.assign({},n.parameters),this}}hk=Object.freeze({__proto__:null,BoxGeometry:ff,CapsuleGeometry:la,CircleGeometry:aa,ConeGeometry:va,CylinderGeometry:yo,DodecahedronGeometry:ya,EdgesGeometry:ift,ExtrudeGeometry:nv,IcosahedronGeometry:tv,LatheGeometry:eh,OctahedronGeometry:ch,PlaneGeometry:bs,PolyhedronGeometry:au,RingGeometry:iv,ShapeGeometry:rv,SphereGeometry:lh,TetrahedronGeometry:uv,TorusGeometry:fv,TorusKnotGeometry:ev,TubeGeometry:ov,WireframeGeometry:hft});class lft extends ct{constructor(n){super();this.isShadowMaterial=!0;this.type="ShadowMaterial";this.color=new u(0);this.transparent=!0;this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.fog=n.fog,this}}class aft extends tr{constructor(n){super(n);this.isRawShaderMaterial=!0;this.type="RawShaderMaterial"}}class ck extends ct{constructor(n){super();this.isMeshStandardMaterial=!0;this.defines={STANDARD:""};this.type="MeshStandardMaterial";this.color=new u(16777215);this.roughness=1;this.metalness=0;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new u(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=ru;this.normalScale=new i(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.roughnessMap=null;this.metalnessMap=null;this.alphaMap=null;this.envMap=null;this.envMapIntensity=1;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.flatShading=!1;this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.defines={STANDARD:""},this.color.copy(n.color),this.roughness=n.roughness,this.metalness=n.metalness,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.roughnessMap=n.roughnessMap,this.metalnessMap=n.metalnessMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.envMapIntensity=n.envMapIntensity,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.flatShading=n.flatShading,this.fog=n.fog,this}}class vft extends ck{constructor(n){super();this.isMeshPhysicalMaterial=!0;this.defines={STANDARD:"",PHYSICAL:""};this.type="MeshPhysicalMaterial";this.anisotropyRotation=0;this.anisotropyMap=null;this.clearcoatMap=null;this.clearcoatRoughness=0;this.clearcoatRoughnessMap=null;this.clearcoatNormalScale=new i(1,1);this.clearcoatNormalMap=null;this.ior=1.5;Object.defineProperty(this,"reflectivity",{get:function(){return b(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(n){this.ior=(1+.4*n)/(1-.4*n)}});this.iridescenceMap=null;this.iridescenceIOR=1.3;this.iridescenceThicknessRange=[100,400];this.iridescenceThicknessMap=null;this.sheenColor=new u(0);this.sheenColorMap=null;this.sheenRoughness=1;this.sheenRoughnessMap=null;this.transmissionMap=null;this.thickness=0;this.thicknessMap=null;this.attenuationDistance=Infinity;this.attenuationColor=new u(1,1,1);this.specularIntensity=1;this.specularIntensityMap=null;this.specularColor=new u(1,1,1);this.specularColorMap=null;this._anisotropy=0;this._clearcoat=0;this._iridescence=0;this._sheen=0;this._transmission=0;this.setValues(n)}get anisotropy(){return this._anisotropy}set anisotropy(n){this._anisotropy>0!=n>0&&this.version++;this._anisotropy=n}get clearcoat(){return this._clearcoat}set clearcoat(n){this._clearcoat>0!=n>0&&this.version++;this._clearcoat=n}get iridescence(){return this._iridescence}set iridescence(n){this._iridescence>0!=n>0&&this.version++;this._iridescence=n}get sheen(){return this._sheen}set sheen(n){this._sheen>0!=n>0&&this.version++;this._sheen=n}get transmission(){return this._transmission}set transmission(n){this._transmission>0!=n>0&&this.version++;this._transmission=n}copy(n){return super.copy(n),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=n.anisotropy,this.anisotropyRotation=n.anisotropyRotation,this.anisotropyMap=n.anisotropyMap,this.clearcoat=n.clearcoat,this.clearcoatMap=n.clearcoatMap,this.clearcoatRoughness=n.clearcoatRoughness,this.clearcoatRoughnessMap=n.clearcoatRoughnessMap,this.clearcoatNormalMap=n.clearcoatNormalMap,this.clearcoatNormalScale.copy(n.clearcoatNormalScale),this.ior=n.ior,this.iridescence=n.iridescence,this.iridescenceMap=n.iridescenceMap,this.iridescenceIOR=n.iridescenceIOR,this.iridescenceThicknessRange=[...n.iridescenceThicknessRange],this.iridescenceThicknessMap=n.iridescenceThicknessMap,this.sheen=n.sheen,this.sheenColor.copy(n.sheenColor),this.sheenColorMap=n.sheenColorMap,this.sheenRoughness=n.sheenRoughness,this.sheenRoughnessMap=n.sheenRoughnessMap,this.transmission=n.transmission,this.transmissionMap=n.transmissionMap,this.thickness=n.thickness,this.thicknessMap=n.thicknessMap,this.attenuationDistance=n.attenuationDistance,this.attenuationColor.copy(n.attenuationColor),this.specularIntensity=n.specularIntensity,this.specularIntensityMap=n.specularIntensityMap,this.specularColor.copy(n.specularColor),this.specularColorMap=n.specularColorMap,this}}class yft extends ct{constructor(n){super();this.isMeshPhongMaterial=!0;this.type="MeshPhongMaterial";this.color=new u(16777215);this.specular=new u(1118481);this.shininess=30;this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new u(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=ru;this.normalScale=new i(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=bo;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.flatShading=!1;this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.specular.copy(n.specular),this.shininess=n.shininess,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.flatShading=n.flatShading,this.fog=n.fog,this}}class pft extends ct{constructor(n){super();this.isMeshToonMaterial=!0;this.defines={TOON:""};this.type="MeshToonMaterial";this.color=new u(16777215);this.map=null;this.gradientMap=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new u(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=ru;this.normalScale=new i(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.gradientMap=n.gradientMap,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.fog=n.fog,this}}class wft extends ct{constructor(n){super();this.isMeshNormalMaterial=!0;this.type="MeshNormalMaterial";this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=ru;this.normalScale=new i(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.wireframe=!1;this.wireframeLinewidth=1;this.flatShading=!1;this.setValues(n)}copy(n){return super.copy(n),this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.flatShading=n.flatShading,this}}class bft extends ct{constructor(n){super();this.isMeshLambertMaterial=!0;this.type="MeshLambertMaterial";this.color=new u(16777215);this.map=null;this.lightMap=null;this.lightMapIntensity=1;this.aoMap=null;this.aoMapIntensity=1;this.emissive=new u(0);this.emissiveIntensity=1;this.emissiveMap=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=ru;this.normalScale=new i(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.specularMap=null;this.alphaMap=null;this.envMap=null;this.combine=bo;this.reflectivity=1;this.refractionRatio=.98;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinecap="round";this.wireframeLinejoin="round";this.flatShading=!1;this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.flatShading=n.flatShading,this.fog=n.fog,this}}class kft extends ct{constructor(n){super();this.isMeshMatcapMaterial=!0;this.defines={MATCAP:""};this.type="MeshMatcapMaterial";this.color=new u(16777215);this.matcap=null;this.map=null;this.bumpMap=null;this.bumpScale=1;this.normalMap=null;this.normalMapType=ru;this.normalScale=new i(1,1);this.displacementMap=null;this.displacementScale=1;this.displacementBias=0;this.alphaMap=null;this.flatShading=!1;this.fog=!0;this.setValues(n)}copy(n){return super.copy(n),this.defines={MATCAP:""},this.color.copy(n.color),this.matcap=n.matcap,this.map=n.map,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.flatShading=n.flatShading,this.fog=n.fog,this}}class dft extends pt{constructor(n){super();this.isLineDashedMaterial=!0;this.type="LineDashedMaterial";this.scale=1;this.dashSize=3;this.gapSize=1;this.setValues(n)}copy(n){return super.copy(n),this.scale=n.scale,this.dashSize=n.dashSize,this.gapSize=n.gapSize,this}}const pwt={arraySlice:ei,convertArray:af,isTypedArray:lk,getKeyframeOrder:gft,sortedArray:ak,flattenJSON:vk,subclip:vwt,makeClipAdditive:ywt};class ah{constructor(n,t,i,r){this.parameterPositions=n;this._cachedIndex=0;this.resultBuffer=r!==undefined?r:new t.constructor(i);this.sampleValues=t;this.valueSize=i;this.settings=null;this.DefaultSettings_={}}evaluate(n){const r=this.parameterPositions;let t=this._cachedIndex,u=r[t],i=r[t-1];n:{t:{let f;i:{r:if(!(n<u)){for(let f=t+2;;){if(u===undefined){if(n<i)break r;return t=r.length,this._cachedIndex=t,this.copySampleValue_(t-1)}if(t===f)break;if(i=u,u=r[++t],n<u)break t}f=r.length;break i}if(!(n>=i)){const e=r[1];n<e&&(t=2,i=e);for(let f=t-2;;){if(i===undefined)return this._cachedIndex=0,this.copySampleValue_(0);if(t===f)break;if(u=i,i=r[--t-1],n>=i)break t}f=t;t=0;break i}break n}while(t<f){const i=t+f>>>1;n<r[i]?f=i:t=i+1}if(u=r[t],i=r[t-1],i===undefined)return this._cachedIndex=0,this.copySampleValue_(0);if(u===undefined)return t=r.length,this._cachedIndex=t,this.copySampleValue_(t-1)}this._cachedIndex=t;this.intervalChanged_(t,i,u)}return this.interpolate_(t,i,n,u)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(n){const t=this.resultBuffer,r=this.sampleValues,i=this.valueSize,u=n*i;for(let n=0;n!==i;++n)t[n]=r[u+n];return t}interpolate_(){throw new Error("call to abstract method");}intervalChanged_(){}}class net extends ah{constructor(n,t,i,r){super(n,t,i,r);this._weightPrev=-0;this._offsetPrev=-0;this._weightNext=-0;this._offsetNext=-0;this.DefaultSettings_={endingStart:ku,endingEnd:ku}}intervalChanged_(n,t,i){const r=this.parameterPositions;let u=n-2,f=n+1,e=r[u],o=r[f];if(e===undefined)switch(this.getSettings_().endingStart){case du:u=n;e=2*t-i;break;case fs:u=r.length-2;e=t+r[u]-r[u+1];break;default:u=n;e=i}if(o===undefined)switch(this.getSettings_().endingEnd){case du:f=n;o=2*i-t;break;case fs:f=1;o=i+r[1]-r[0];break;default:f=n-1;o=t}const s=(i-t)*.5,h=this.valueSize;this._weightPrev=s/(t-e);this._weightNext=s/(o-i);this._offsetPrev=u*h;this._offsetNext=f*h}interpolate_(n,t,i,r){const l=this.resultBuffer,o=this.sampleValues,c=this.valueSize,a=n*c,v=a-c,y=this._offsetPrev,p=this._offsetNext,u=this._weightPrev,s=this._weightNext,f=(i-t)/(r-t),e=f*f,h=e*f,w=-u*h+2*u*e-u*f,b=(1+u)*h+(-1.5-2*u)*e+(-.5+u)*f+1,k=(-1-s)*h+(1.5+s)*e+.5*f,d=s*h-s*e;for(let n=0;n!==c;++n)l[n]=w*o[y+n]+b*o[v+n]+k*o[a+n]+d*o[p+n];return l}}class yk extends ah{constructor(n,t,i,r){super(n,t,i,r)}interpolate_(n,t,i,r){const f=this.resultBuffer,e=this.sampleValues,u=this.valueSize,o=n*u,h=o-u,s=(i-t)/(r-t),c=1-s;for(let n=0;n!==u;++n)f[n]=e[h+n]*c+e[o+n]*s;return f}}class tet extends ah{constructor(n,t,i,r){super(n,t,i,r)}interpolate_(n){return this.copySampleValue_(n-1)}}class pi{constructor(n,t,i,r){if(n===undefined)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===undefined||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+n);this.name=n;this.times=af(t,this.TimeBufferType);this.values=af(i,this.ValueBufferType);this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(n){const i=n.constructor;let t;if(i.toJSON!==this.toJSON)t=i.toJSON(n);else{t={name:n.name,times:af(n.times,Array),values:af(n.values,Array)};const i=n.getInterpolation();i!==n.DefaultInterpolation&&(t.interpolation=i)}return t.type=n.ValueTypeName,t}InterpolantFactoryMethodDiscrete(n){return new tet(this.times,this.values,this.getValueSize(),n)}InterpolantFactoryMethodLinear(n){return new yk(this.times,this.values,this.getValueSize(),n)}InterpolantFactoryMethodSmooth(n){return new net(this.times,this.values,this.getValueSize(),n)}setInterpolation(n){let t;switch(n){case rs:t=this.InterpolantFactoryMethodDiscrete;break;case us:t=this.InterpolantFactoryMethodLinear;break;case oc:t=this.InterpolantFactoryMethodSmooth}if(t===undefined){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined)if(n!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(t);return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return rs;case this.InterpolantFactoryMethodLinear:return us;case this.InterpolantFactoryMethodSmooth:return oc}}getValueSize(){return this.values.length/this.times.length}shift(n){if(n!==0){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]+=n}return this}scale(n){if(n!==1){const t=this.times;for(let i=0,r=t.length;i!==r;++i)t[i]*=n}return this}trim(n,t){const u=this.times,f=u.length;let r=0,i=f-1;while(r!==f&&u[r]<n)++r;while(i!==-1&&u[i]>t)--i;if(++i,r!==0||i!==f){r>=i&&(i=Math.max(i,1),r=i-1);const n=this.getValueSize();this.times=ei(u,r,i);this.values=ei(this.values,r*n,i*n)}return this}validate(){let n=!0;const r=this.getValueSize();r-Math.floor(r)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);const u=this.times,t=this.values,f=u.length;f===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let i=null;for(let t=0;t!==f;t++){const r=u[t];if(typeof r=="number"&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,r);n=!1;break}if(i!==null&&i>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,r,i);n=!1;break}i=r}if(t!==undefined&&lk(t))for(let i=0,r=t.length;i!==r;++i){const r=t[i];if(isNaN(r)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,i,r);n=!1;break}}return n}optimize(){const n=ei(this.times),r=ei(this.values),t=this.getValueSize(),f=this.getInterpolation()===oc,u=n.length-1;let i=1;for(let e=1;e<u;++e){let u=!1;const o=n[e],s=n[e+1];if(o!==s&&(e!==1||o!==n[0]))if(f)u=!0;else{const n=e*t,i=n-t,f=n+t;for(let e=0;e!==t;++e){const t=r[n+e];if(t!==r[i+e]||t!==r[f+e]){u=!0;break}}}if(u){if(e!==i){n[i]=n[e];const u=e*t,f=i*t;for(let n=0;n!==t;++n)r[f+n]=r[u+n]}++i}}if(u>0){n[i]=n[u];for(let f=u*t,e=i*t,n=0;n!==t;++n)r[e+n]=r[f+n];++i}return i!==n.length?(this.times=ei(n,0,i),this.values=ei(r,0,i*t)):(this.times=n,this.values=r),this}clone(){const t=ei(this.times,0),i=ei(this.values,0),r=this.constructor,n=new r(this.name,t,i);return n.createInterpolant=this.createInterpolant,n}}pi.prototype.TimeBufferType=Float32Array;pi.prototype.ValueBufferType=Float32Array;pi.prototype.DefaultInterpolation=us;class vf extends pi{}vf.prototype.ValueTypeName="bool";vf.prototype.ValueBufferType=Array;vf.prototype.DefaultInterpolation=rs;vf.prototype.InterpolantFactoryMethodLinear=undefined;vf.prototype.InterpolantFactoryMethodSmooth=undefined;class pk extends pi{}pk.prototype.ValueTypeName="color";class vh extends pi{}vh.prototype.ValueTypeName="number";class iet extends ah{constructor(n,t,i,r){super(n,t,i,r)}interpolate_(n,t,i,r){const e=this.resultBuffer,o=this.sampleValues,f=this.valueSize,s=(i-t)/(r-t);let u=n*f;for(let n=u+f;u!==n;u+=4)wt.slerpFlat(e,0,o,u-f,o,u,s);return e}}class wo extends pi{InterpolantFactoryMethodLinear(n){return new iet(this.times,this.values,this.getValueSize(),n)}}wo.prototype.ValueTypeName="quaternion";wo.prototype.DefaultInterpolation=us;wo.prototype.InterpolantFactoryMethodSmooth=undefined;class yf extends pi{}yf.prototype.ValueTypeName="string";yf.prototype.ValueBufferType=Array;yf.prototype.DefaultInterpolation=rs;yf.prototype.InterpolantFactoryMethodLinear=undefined;yf.prototype.InterpolantFactoryMethodSmooth=undefined;class yh extends pi{}yh.prototype.ValueTypeName="vector";class ph{constructor(n,t=-1,i,r=sc){this.name=n;this.tracks=i;this.duration=t;this.blendMode=r;this.uuid=dt();this.duration<0&&this.resetDuration()}static parse(n){const t=[],i=n.tracks,u=1/(n.fps||1);for(let n=0,r=i.length;n!==r;++n)t.push(bwt(i[n]).scale(u));const r=new this(n.name,n.duration,t,n.blendMode);return r.uuid=n.uuid,r}static toJSON(n){const t=[],i=n.tracks,r={name:n.name,duration:n.duration,tracks:t,uuid:n.uuid,blendMode:n.blendMode};for(let n=0,r=i.length;n!==r;++n)t.push(pi.toJSON(i[n]));return r}static CreateFromMorphTargetSequence(n,t,i,r){const u=t.length,f=[];for(let n=0;n<u;n++){let e=[],o=[];e.push((n+u-1)%u,n,(n+1)%u);o.push(0,1,0);const s=gft(e);e=ak(e,1,s);o=ak(o,1,s);r||e[0]!==0||(e.push(u),o.push(o[0]));f.push(new vh(".morphTargetInfluences["+t[n].name+"]",e,o).scale(1/i))}return new this(n,-1,f)}static findByName(n,t){let i=n;if(!Array.isArray(n)){const t=n;i=t.geometry&&t.geometry.animations||t.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(n,t,i){const r={},f=/^([\w-]*?)([\d]+)$/;for(let t=0,i=n.length;t<i;t++){const u=n[t],i=u.name.match(f);if(i&&i.length>1){const t=i[1];let n=r[t];n||(r[t]=n=[]);n.push(u)}}const u=[];for(const n in r)u.push(this.CreateFromMorphTargetSequence(n,r[n],t,i));return u}static parseAnimation(n,t){if(!n)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const r=function(n,t,i,r,u){if(i.length!==0){const f=[],e=[];vk(i,f,e,r);f.length!==0&&u.push(new n(t,f,e))}},i=[],e=n.name||"default",o=n.fps||30,s=n.blendMode;let u=n.length||-1;const f=n.hierarchy||[];for(let n=0;n<f.length;n++){const e=f[n].keys;if(e&&e.length!==0)if(e[0].morphTargets){const t={};let n;for(n=0;n<e.length;n++)if(e[n].morphTargets)for(let i=0;i<e[n].morphTargets.length;i++)t[e[n].morphTargets[i]]=-1;for(const r in t){const t=[],u=[];for(let i=0;i!==e[n].morphTargets.length;++i){const i=e[n];t.push(i.time);u.push(i.morphTarget===r?1:0)}i.push(new vh(".morphTargetInfluence["+r+"]",t,u))}u=t.length*o}else{const u=".bones["+t[n].name+"]";r(yh,u+".position",e,"pos",i);r(wo,u+".quaternion",e,"rot",i);r(yh,u+".scale",e,"scl",i)}}if(i.length===0)return null;return new this(e,u,i,s)}resetDuration(){const t=this.tracks;let n=0;for(let i=0,r=t.length;i!==r;++i){const t=this.tracks[i];n=Math.max(n,t.times[t.times.length-1])}return this.duration=n,this}trim(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].trim(0,this.duration);return this}validate(){let n=!0;for(let t=0;t<this.tracks.length;t++)n=n&&this.tracks[t].validate();return n}optimize(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].optimize();return this}clone(){const n=[];for(let t=0;t<this.tracks.length;t++)n.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,n,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const pf={enabled:!1,files:{},add:function(n,t){this.enabled!==!1&&(this.files[n]=t)},get:function(n){if(this.enabled!==!1)return this.files[n]},remove:function(n){delete this.files[n]},clear:function(){this.files={}}};class wk{constructor(n,t,i){const r=this;let o=!1,f=0,e=0,s=undefined;const u=[];this.onStart=undefined;this.onLoad=n;this.onProgress=t;this.onError=i;this.itemStart=function(n){if(e++,o===!1&&r.onStart!==undefined)r.onStart(n,f,e);o=!0};this.itemEnd=function(n){if(f++,r.onProgress!==undefined)r.onProgress(n,f,e);f===e&&(o=!1,r.onLoad!==undefined&&r.onLoad())};this.itemError=function(n){if(r.onError!==undefined)r.onError(n)};this.resolveURL=function(n){return s?s(n):n};this.setURLModifier=function(n){return s=n,this};this.addHandler=function(n,t){return u.push(n,t),this};this.removeHandler=function(n){const t=u.indexOf(n);return t!==-1&&u.splice(t,2),this};this.getHandler=function(n){for(let t=0,i=u.length;t<i;t+=2){const i=u[t],r=u[t+1];if(i.global&&(i.lastIndex=0),i.test(n))return r}return null}}}const ret=new wk;class ri{constructor(n){this.manager=n!==undefined?n:ret;this.crossOrigin="anonymous";this.withCredentials=!1;this.path="";this.resourcePath="";this.requestHeader={}}load(){}loadAsync(n,t){const i=this;return new Promise(function(r,u){i.load(n,r,t,u)})}parse(){}setCrossOrigin(n){return this.crossOrigin=n,this}setWithCredentials(n){return this.withCredentials=n,this}setPath(n){return this.path=n,this}setResourcePath(n){return this.resourcePath=n,this}setRequestHeader(n){return this.requestHeader=n,this}}const wr={};class kwt extends Error{constructor(n,t){super(n);this.response=t}}class br extends ri{constructor(n){super(n)}load(n,t,i,r){n===undefined&&(n="");this.path!==undefined&&(n=this.path+n);n=this.manager.resolveURL(n);const u=pf.get(n);if(u!==undefined)return this.manager.itemStart(n),setTimeout(()=>{t&&t(u),this.manager.itemEnd(n)},0),u;if(wr[n]!==undefined){wr[n].push({onLoad:t,onProgress:i,onError:r});return}wr[n]=[];wr[n].push({onLoad:t,onProgress:i,onError:r});const e=new Request(n,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),f=this.mimeType,o=this.responseType;fetch(e).then(t=>{if(t.status===200||t.status===0){if(t.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||t.body===undefined||t.body.getReader===undefined)return t;const i=wr[n],e=t.body.getReader(),r=t.headers.get("Content-Length")||t.headers.get("X-File-Size"),u=r?parseInt(r):0,o=u!==0;let f=0;const s=new ReadableStream({start(n){function t(){e.read().then(({done:r,value:e})=>{if(r)n.close();else{f+=e.byteLength;const r=new ProgressEvent("progress",{lengthComputable:o,loaded:f,total:u});for(let n=0,t=i.length;n<t;n++){const t=i[n];if(t.onProgress)t.onProgress(r)}n.enqueue(e);t()}})}t()}});return new Response(s)}throw new kwt(`fetch for "${t.url}" responded with ${t.status}: ${t.statusText}`,t);}).then(n=>{switch(o){case"arraybuffer":return n.arrayBuffer();case"blob":return n.blob();case"document":return n.text().then(n=>{const t=new DOMParser;return t.parseFromString(n,f)});case"json":return n.json();default:if(f===undefined)return n.text();else{const t=/charset="?([^;"\s]*)"?/i.exec(f),i=t&&t[1]?t[1].toLowerCase():undefined,r=new TextDecoder(i);return n.arrayBuffer().then(n=>r.decode(n))}}}).then(t=>{pf.add(n,t);const i=wr[n];delete wr[n];for(let n=0,r=i.length;n<r;n++){const r=i[n];if(r.onLoad)r.onLoad(t)}}).catch(t=>{const i=wr[n];if(i===undefined){this.manager.itemError(n);throw t;}delete wr[n];for(let n=0,r=i.length;n<r;n++){const r=i[n];if(r.onError)r.onError(t)}this.manager.itemError(n)}).finally(()=>{this.manager.itemEnd(n)});this.manager.itemStart(n)}setResponseType(n){return this.responseType=n,this}setMimeType(n){return this.mimeType=n,this}}class dwt extends ri{constructor(n){super(n)}load(n,t,i,r){const f=this,u=new br(this.manager);u.setPath(this.path);u.setRequestHeader(this.requestHeader);u.setWithCredentials(this.withCredentials);u.load(n,function(i){try{t(f.parse(JSON.parse(i)))}catch(u){r?r(u):console.error(u);f.manager.itemError(n)}},i,r)}parse(n){const t=[];for(let i=0;i<n.length;i++){const r=ph.parse(n[i]);t.push(r)}return t}}class gwt extends ri{constructor(n){super(n)}load(n,t,i,r){function h(h){e.load(n[h],function(n){const i=o.parse(n,!0);f[h]={width:i.width,height:i.height,format:i.format,mipmaps:i.mipmaps};s+=1;s===6&&(i.mipmapCount===1&&(u.minFilter=g),u.image=f,u.format=i.format,u.needsUpdate=!0,t&&t(u))},i,r)}const o=this,f=[],u=new kb,e=new br(this.manager);e.setPath(this.path);e.setResponseType("arraybuffer");e.setRequestHeader(this.requestHeader);e.setWithCredentials(o.withCredentials);let s=0;if(Array.isArray(n))for(let t=0,i=n.length;t<i;++t)h(t);else e.load(n,function(n){const i=o.parse(n,!0);if(i.isCubemap){const n=i.mipmaps.length/i.mipmapCount;for(let t=0;t<n;t++){f[t]={mipmaps:[]};for(let n=0;n<i.mipmapCount;n++)f[t].mipmaps.push(i.mipmaps[t*i.mipmapCount+n]),f[t].format=i.format,f[t].width=i.width,f[t].height=i.height}u.image=f}else u.image.width=i.width,u.image.height=i.height,u.mipmaps=i.mipmaps;i.mipmapCount===1&&(u.minFilter=g);u.format=i.format;u.needsUpdate=!0;t&&t(u)},i,r);return u}}class wh extends ri{constructor(n){super(n)}load(n,t,i,r){function o(){h();pf.add(n,this);t&&t(this);f.manager.itemEnd(n)}function s(t){h();r&&r(t);f.manager.itemError(n);f.manager.itemEnd(n)}function h(){u.removeEventListener("load",o,!1);u.removeEventListener("error",s,!1)}this.path!==undefined&&(n=this.path+n);n=this.manager.resolveURL(n);const f=this,e=pf.get(n);if(e!==undefined)return f.manager.itemStart(n),setTimeout(function(){t&&t(e);f.manager.itemEnd(n)},0),e;const u=hs("img");return u.addEventListener("load",o,!1),u.addEventListener("error",s,!1),n.slice(0,5)!=="data:"&&this.crossOrigin!==undefined&&(u.crossOrigin=this.crossOrigin),f.manager.itemStart(n),u.src=n,u}}class nbt extends ri{constructor(n){super(n)}load(n,t,i,r){function s(i){f.load(n[i],function(n){u.images[i]=n;o++;o===6&&(u.needsUpdate=!0,t&&t(u))},undefined,r)}const u=new ws;u.colorSpace=e;const f=new wh(this.manager);f.setCrossOrigin(this.crossOrigin);f.setPath(this.path);let o=0;for(let t=0;t<n.length;++t)s(t);return u}}class tbt extends ri{constructor(n){super(n)}load(n,t,i,r){const e=this,u=new lo,f=new br(this.manager);return f.setResponseType("arraybuffer"),f.setRequestHeader(this.requestHeader),f.setPath(this.path),f.setWithCredentials(e.withCredentials),f.load(n,function(n){const i=e.parse(n);i&&(i.image!==undefined?u.image=i.image:i.data!==undefined&&(u.image.width=i.width,u.image.height=i.height,u.image.data=i.data),u.wrapS=i.wrapS!==undefined?i.wrapS:st,u.wrapT=i.wrapT!==undefined?i.wrapT:st,u.magFilter=i.magFilter!==undefined?i.magFilter:g,u.minFilter=i.minFilter!==undefined?i.minFilter:g,u.anisotropy=i.anisotropy!==undefined?i.anisotropy:1,i.colorSpace!==undefined?u.colorSpace=i.colorSpace:i.encoding!==undefined&&(u.encoding=i.encoding),i.flipY!==undefined&&(u.flipY=i.flipY),i.format!==undefined&&(u.format=i.format),i.type!==undefined&&(u.type=i.type),i.mipmaps!==undefined&&(u.mipmaps=i.mipmaps,u.minFilter=gr),i.mipmapCount===1&&(u.minFilter=g),i.generateMipmaps!==undefined&&(u.generateMipmaps=i.generateMipmaps),u.needsUpdate=!0,t&&t(u,i))},i,r),u}}class ibt extends ri{constructor(n){super(n)}load(n,t,i,r){const u=new tt,f=new wh(this.manager);return f.setCrossOrigin(this.crossOrigin),f.setPath(this.path),f.load(n,function(n){u.image=n;u.needsUpdate=!0;t!==undefined&&t(u)},i,r),u}}class vu extends v{constructor(n,t=1){super();this.isLight=!0;this.type="Light";this.color=new u(n);this.intensity=t}dispose(){}copy(n,t){return super.copy(n,t),this.color.copy(n.color),this.intensity=n.intensity,this}toJSON(n){const t=super.toJSON(n);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==undefined&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==undefined&&(t.object.distance=this.distance),this.angle!==undefined&&(t.object.angle=this.angle),this.decay!==undefined&&(t.object.decay=this.decay),this.penumbra!==undefined&&(t.object.penumbra=this.penumbra),this.shadow!==undefined&&(t.object.shadow=this.shadow.toJSON()),t}}class uet extends vu{constructor(n,t,i){super(n,i);this.isHemisphereLight=!0;this.type="HemisphereLight";this.position.copy(v.DEFAULT_UP);this.updateMatrix();this.groundColor=new u(t)}copy(n,t){return super.copy(n,t),this.groundColor.copy(n.groundColor),this}}const bk=new o,fet=new t,eet=new t;class kk{constructor(n){this.camera=n;this.bias=0;this.normalBias=0;this.radius=1;this.blurSamples=8;this.mapSize=new i(512,512);this.map=null;this.mapPass=null;this.matrix=new o;this.autoUpdate=!0;this.needsUpdate=!1;this._frustum=new vl;this._frameExtents=new i(1,1);this._viewportCount=1;this._viewports=[new y(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(n){const t=this.camera,i=this.matrix;fet.setFromMatrixPosition(n.matrixWorld);t.position.copy(fet);eet.setFromMatrixPosition(n.target.matrixWorld);t.lookAt(eet);t.updateMatrixWorld();bk.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse);this._frustum.setFromProjectionMatrix(bk);i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1);i.multiply(bk)}getViewport(n){return this._viewports[n]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose();this.mapPass&&this.mapPass.dispose()}copy(n){return this.camera=n.camera.clone(),this.bias=n.bias,this.radius=n.radius,this.mapSize.copy(n.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const n={};return this.bias!==0&&(n.bias=this.bias),this.normalBias!==0&&(n.normalBias=this.normalBias),this.radius!==1&&(n.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(n.mapSize=this.mapSize.toArray()),n.camera=this.camera.toJSON(!1).object,delete n.camera.matrix,n}}class rbt extends kk{constructor(){super(new ot(50,1,.5,500));this.isSpotLightShadow=!0;this.focus=1}updateMatrices(n){const t=this.camera,i=ie*2*n.angle*this.focus,r=this.mapSize.width/this.mapSize.height,u=n.distance||t.far;(i!==t.fov||r!==t.aspect||u!==t.far)&&(t.fov=i,t.aspect=r,t.far=u,t.updateProjectionMatrix());super.updateMatrices(n)}copy(n){return super.copy(n),this.focus=n.focus,this}}class oet extends vu{constructor(n,t,i=0,r=Math.PI/3,u=0,f=2){super(n,t);this.isSpotLight=!0;this.type="SpotLight";this.position.copy(v.DEFAULT_UP);this.updateMatrix();this.target=new v;this.distance=i;this.angle=r;this.penumbra=u;this.decay=f;this.map=null;this.shadow=new rbt}get power(){return this.intensity*Math.PI}set power(n){this.intensity=n/Math.PI}dispose(){this.shadow.dispose()}copy(n,t){return super.copy(n,t),this.distance=n.distance,this.angle=n.angle,this.penumbra=n.penumbra,this.decay=n.decay,this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}}const set=new o,bh=new t,dk=new t;class ubt extends kk{constructor(){super(new ot(90,1,.5,500));this.isPointLightShadow=!0;this._frameExtents=new i(4,2);this._viewportCount=6;this._viewports=[new y(2,1,1,1),new y(0,1,1,1),new y(3,1,1,1),new y(1,1,1,1),new y(3,0,1,1),new y(1,0,1,1)];this._cubeDirections=[new t(1,0,0),new t(-1,0,0),new t(0,0,1),new t(0,0,-1),new t(0,1,0),new t(0,-1,0)];this._cubeUps=[new t(0,1,0),new t(0,1,0),new t(0,1,0),new t(0,1,0),new t(0,0,1),new t(0,0,-1)]}updateMatrices(n,t=0){const i=this.camera,u=this.matrix,r=n.distance||i.far;r!==i.far&&(i.far=r,i.updateProjectionMatrix());bh.setFromMatrixPosition(n.matrixWorld);i.position.copy(bh);dk.copy(i.position);dk.add(this._cubeDirections[t]);i.up.copy(this._cubeUps[t]);i.lookAt(dk);i.updateMatrixWorld();u.makeTranslation(-bh.x,-bh.y,-bh.z);set.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse);this._frustum.setFromProjectionMatrix(set)}}class het extends vu{constructor(n,t,i=0,r=2){super(n,t);this.isPointLight=!0;this.type="PointLight";this.distance=i;this.decay=r;this.shadow=new ubt}get power(){return this.intensity*4*Math.PI}set power(n){this.intensity=n/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(n,t){return super.copy(n,t),this.distance=n.distance,this.decay=n.decay,this.shadow=n.shadow.clone(),this}}class fbt extends kk{constructor(){super(new pl(-5,5,5,-5,.5,500));this.isDirectionalLightShadow=!0}}class cet extends vu{constructor(n,t){super(n,t);this.isDirectionalLight=!0;this.type="DirectionalLight";this.position.copy(v.DEFAULT_UP);this.updateMatrix();this.target=new v;this.shadow=new fbt}dispose(){this.shadow.dispose()}copy(n){return super.copy(n),this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}}class aet extends vu{constructor(n,t){super(n,t);this.isAmbientLight=!0;this.type="AmbientLight"}}class vet extends vu{constructor(n,t,i=10,r=10){super(n,t);this.isRectAreaLight=!0;this.type="RectAreaLight";this.width=i;this.height=r}get power(){return this.intensity*this.width*this.height*Math.PI}set power(n){this.intensity=n/(this.width*this.height*Math.PI)}copy(n){return super.copy(n),this.width=n.width,this.height=n.height,this}toJSON(n){const t=super.toJSON(n);return t.object.width=this.width,t.object.height=this.height,t}}class yet{constructor(){this.isSphericalHarmonics3=!0;this.coefficients=[];for(let n=0;n<9;n++)this.coefficients.push(new t)}set(n){for(let t=0;t<9;t++)this.coefficients[t].copy(n[t]);return this}zero(){for(let n=0;n<9;n++)this.coefficients[n].set(0,0,0);return this}getAt(n,t){const r=n.x,u=n.y,f=n.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.282095),t.addScaledVector(i[1],.488603*u),t.addScaledVector(i[2],.488603*f),t.addScaledVector(i[3],.488603*r),t.addScaledVector(i[4],1.092548*r*u),t.addScaledVector(i[5],1.092548*u*f),t.addScaledVector(i[6],.315392*(3*f*f-1)),t.addScaledVector(i[7],1.092548*r*f),t.addScaledVector(i[8],.546274*(r*r-u*u)),t}getIrradianceAt(n,t){const r=n.x,u=n.y,f=n.z,i=this.coefficients;return t.copy(i[0]).multiplyScalar(.886227),t.addScaledVector(i[1],2*.511664*u),t.addScaledVector(i[2],2*.511664*f),t.addScaledVector(i[3],2*.511664*r),t.addScaledVector(i[4],2*.429043*r*u),t.addScaledVector(i[5],2*.429043*u*f),t.addScaledVector(i[6],.743125*f*f-.247708),t.addScaledVector(i[7],2*.429043*r*f),t.addScaledVector(i[8],.429043*(r*r-u*u)),t}add(n){for(let t=0;t<9;t++)this.coefficients[t].add(n.coefficients[t]);return this}addScaledSH(n,t){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(n.coefficients[i],t);return this}scale(n){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(n);return this}lerp(n,t){for(let i=0;i<9;i++)this.coefficients[i].lerp(n.coefficients[i],t);return this}equals(n){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(n.coefficients[t]))return!1;return!0}copy(n){return this.set(n.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(n,t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].fromArray(n,t+r*3);return this}toArray(n=[],t=0){const i=this.coefficients;for(let r=0;r<9;r++)i[r].toArray(n,t+r*3);return n}static getBasisAt(n,t){const i=n.x,r=n.y,u=n.z;t[0]=.282095;t[1]=.488603*r;t[2]=.488603*u;t[3]=.488603*i;t[4]=1.092548*i*r;t[5]=1.092548*r*u;t[6]=.315392*(3*u*u-1);t[7]=1.092548*i*u;t[8]=.546274*(i*i-r*r)}}class sv extends vu{constructor(n=new yet,t=1){super(undefined,t);this.isLightProbe=!0;this.sh=n}copy(n){return super.copy(n),this.sh.copy(n.sh),this}fromJSON(n){return this.intensity=n.intensity,this.sh.fromArray(n.sh),this}toJSON(n){const t=super.toJSON(n);return t.object.sh=this.sh.toArray(),t}}class gk extends ri{constructor(n){super(n);this.textures={}}load(n,t,i,r){const u=this,f=new br(u.manager);f.setPath(u.path);f.setRequestHeader(u.requestHeader);f.setWithCredentials(u.withCredentials);f.load(n,function(i){try{t(u.parse(JSON.parse(i)))}catch(f){r?r(f):console.error(f);u.manager.itemError(n)}},i,r)}parse(n){function f(n){return e[n]===undefined&&console.warn("THREE.MaterialLoader: Undefined texture",n),e[n]}const e=this.textures;const r=gk.createMaterialFromType(n.type);if(n.uuid!==undefined&&(r.uuid=n.uuid),n.name!==undefined&&(r.name=n.name),n.color!==undefined&&r.color!==undefined&&r.color.setHex(n.color),n.roughness!==undefined&&(r.roughness=n.roughness),n.metalness!==undefined&&(r.metalness=n.metalness),n.sheen!==undefined&&(r.sheen=n.sheen),n.sheenColor!==undefined&&(r.sheenColor=(new u).setHex(n.sheenColor)),n.sheenRoughness!==undefined&&(r.sheenRoughness=n.sheenRoughness),n.emissive!==undefined&&r.emissive!==undefined&&r.emissive.setHex(n.emissive),n.specular!==undefined&&r.specular!==undefined&&r.specular.setHex(n.specular),n.specularIntensity!==undefined&&(r.specularIntensity=n.specularIntensity),n.specularColor!==undefined&&r.specularColor!==undefined&&r.specularColor.setHex(n.specularColor),n.shininess!==undefined&&(r.shininess=n.shininess),n.clearcoat!==undefined&&(r.clearcoat=n.clearcoat),n.clearcoatRoughness!==undefined&&(r.clearcoatRoughness=n.clearcoatRoughness),n.iridescence!==undefined&&(r.iridescence=n.iridescence),n.iridescenceIOR!==undefined&&(r.iridescenceIOR=n.iridescenceIOR),n.iridescenceThicknessRange!==undefined&&(r.iridescenceThicknessRange=n.iridescenceThicknessRange),n.transmission!==undefined&&(r.transmission=n.transmission),n.thickness!==undefined&&(r.thickness=n.thickness),n.attenuationDistance!==undefined&&(r.attenuationDistance=n.attenuationDistance),n.attenuationColor!==undefined&&r.attenuationColor!==undefined&&r.attenuationColor.setHex(n.attenuationColor),n.anisotropy!==undefined&&(r.anisotropy=n.anisotropy),n.anisotropyRotation!==undefined&&(r.anisotropyRotation=n.anisotropyRotation),n.fog!==undefined&&(r.fog=n.fog),n.flatShading!==undefined&&(r.flatShading=n.flatShading),n.blending!==undefined&&(r.blending=n.blending),n.combine!==undefined&&(r.combine=n.combine),n.side!==undefined&&(r.side=n.side),n.shadowSide!==undefined&&(r.shadowSide=n.shadowSide),n.opacity!==undefined&&(r.opacity=n.opacity),n.transparent!==undefined&&(r.transparent=n.transparent),n.alphaTest!==undefined&&(r.alphaTest=n.alphaTest),n.depthTest!==undefined&&(r.depthTest=n.depthTest),n.depthWrite!==undefined&&(r.depthWrite=n.depthWrite),n.colorWrite!==undefined&&(r.colorWrite=n.colorWrite),n.stencilWrite!==undefined&&(r.stencilWrite=n.stencilWrite),n.stencilWriteMask!==undefined&&(r.stencilWriteMask=n.stencilWriteMask),n.stencilFunc!==undefined&&(r.stencilFunc=n.stencilFunc),n.stencilRef!==undefined&&(r.stencilRef=n.stencilRef),n.stencilFuncMask!==undefined&&(r.stencilFuncMask=n.stencilFuncMask),n.stencilFail!==undefined&&(r.stencilFail=n.stencilFail),n.stencilZFail!==undefined&&(r.stencilZFail=n.stencilZFail),n.stencilZPass!==undefined&&(r.stencilZPass=n.stencilZPass),n.wireframe!==undefined&&(r.wireframe=n.wireframe),n.wireframeLinewidth!==undefined&&(r.wireframeLinewidth=n.wireframeLinewidth),n.wireframeLinecap!==undefined&&(r.wireframeLinecap=n.wireframeLinecap),n.wireframeLinejoin!==undefined&&(r.wireframeLinejoin=n.wireframeLinejoin),n.rotation!==undefined&&(r.rotation=n.rotation),n.linewidth!==1&&(r.linewidth=n.linewidth),n.dashSize!==undefined&&(r.dashSize=n.dashSize),n.gapSize!==undefined&&(r.gapSize=n.gapSize),n.scale!==undefined&&(r.scale=n.scale),n.polygonOffset!==undefined&&(r.polygonOffset=n.polygonOffset),n.polygonOffsetFactor!==undefined&&(r.polygonOffsetFactor=n.polygonOffsetFactor),n.polygonOffsetUnits!==undefined&&(r.polygonOffsetUnits=n.polygonOffsetUnits),n.dithering!==undefined&&(r.dithering=n.dithering),n.alphaToCoverage!==undefined&&(r.alphaToCoverage=n.alphaToCoverage),n.premultipliedAlpha!==undefined&&(r.premultipliedAlpha=n.premultipliedAlpha),n.forceSinglePass!==undefined&&(r.forceSinglePass=n.forceSinglePass),n.visible!==undefined&&(r.visible=n.visible),n.toneMapped!==undefined&&(r.toneMapped=n.toneMapped),n.userData!==undefined&&(r.userData=n.userData),n.vertexColors!==undefined&&(r.vertexColors=typeof n.vertexColors=="number"?n.vertexColors>0?!0:!1:n.vertexColors),n.uniforms!==undefined)for(const e in n.uniforms){const s=n.uniforms[e];r.uniforms[e]={};switch(s.type){case"t":r.uniforms[e].value=f(s.value);break;case"c":r.uniforms[e].value=(new u).setHex(s.value);break;case"v2":r.uniforms[e].value=(new i).fromArray(s.value);break;case"v3":r.uniforms[e].value=(new t).fromArray(s.value);break;case"v4":r.uniforms[e].value=(new y).fromArray(s.value);break;case"m3":r.uniforms[e].value=(new c).fromArray(s.value);break;case"m4":r.uniforms[e].value=(new o).fromArray(s.value);break;default:r.uniforms[e].value=s.value}}if(n.defines!==undefined&&(r.defines=n.defines),n.vertexShader!==undefined&&(r.vertexShader=n.vertexShader),n.fragmentShader!==undefined&&(r.fragmentShader=n.fragmentShader),n.glslVersion!==undefined&&(r.glslVersion=n.glslVersion),n.extensions!==undefined)for(const t in n.extensions)r.extensions[t]=n.extensions[t];if(n.lights!==undefined&&(r.lights=n.lights),n.clipping!==undefined&&(r.clipping=n.clipping),n.size!==undefined&&(r.size=n.size),n.sizeAttenuation!==undefined&&(r.sizeAttenuation=n.sizeAttenuation),n.map!==undefined&&(r.map=f(n.map)),n.matcap!==undefined&&(r.matcap=f(n.matcap)),n.alphaMap!==undefined&&(r.alphaMap=f(n.alphaMap)),n.bumpMap!==undefined&&(r.bumpMap=f(n.bumpMap)),n.bumpScale!==undefined&&(r.bumpScale=n.bumpScale),n.normalMap!==undefined&&(r.normalMap=f(n.normalMap)),n.normalMapType!==undefined&&(r.normalMapType=n.normalMapType),n.normalScale!==undefined){let t=n.normalScale;Array.isArray(t)===!1&&(t=[t,t]);r.normalScale=(new i).fromArray(t)}return n.displacementMap!==undefined&&(r.displacementMap=f(n.displacementMap)),n.displacementScale!==undefined&&(r.displacementScale=n.displacementScale),n.displacementBias!==undefined&&(r.displacementBias=n.displacementBias),n.roughnessMap!==undefined&&(r.roughnessMap=f(n.roughnessMap)),n.metalnessMap!==undefined&&(r.metalnessMap=f(n.metalnessMap)),n.emissiveMap!==undefined&&(r.emissiveMap=f(n.emissiveMap)),n.emissiveIntensity!==undefined&&(r.emissiveIntensity=n.emissiveIntensity),n.specularMap!==undefined&&(r.specularMap=f(n.specularMap)),n.specularIntensityMap!==undefined&&(r.specularIntensityMap=f(n.specularIntensityMap)),n.specularColorMap!==undefined&&(r.specularColorMap=f(n.specularColorMap)),n.envMap!==undefined&&(r.envMap=f(n.envMap)),n.envMapIntensity!==undefined&&(r.envMapIntensity=n.envMapIntensity),n.reflectivity!==undefined&&(r.reflectivity=n.reflectivity),n.refractionRatio!==undefined&&(r.refractionRatio=n.refractionRatio),n.lightMap!==undefined&&(r.lightMap=f(n.lightMap)),n.lightMapIntensity!==undefined&&(r.lightMapIntensity=n.lightMapIntensity),n.aoMap!==undefined&&(r.aoMap=f(n.aoMap)),n.aoMapIntensity!==undefined&&(r.aoMapIntensity=n.aoMapIntensity),n.gradientMap!==undefined&&(r.gradientMap=f(n.gradientMap)),n.clearcoatMap!==undefined&&(r.clearcoatMap=f(n.clearcoatMap)),n.clearcoatRoughnessMap!==undefined&&(r.clearcoatRoughnessMap=f(n.clearcoatRoughnessMap)),n.clearcoatNormalMap!==undefined&&(r.clearcoatNormalMap=f(n.clearcoatNormalMap)),n.clearcoatNormalScale!==undefined&&(r.clearcoatNormalScale=(new i).fromArray(n.clearcoatNormalScale)),n.iridescenceMap!==undefined&&(r.iridescenceMap=f(n.iridescenceMap)),n.iridescenceThicknessMap!==undefined&&(r.iridescenceThicknessMap=f(n.iridescenceThicknessMap)),n.transmissionMap!==undefined&&(r.transmissionMap=f(n.transmissionMap)),n.thicknessMap!==undefined&&(r.thicknessMap=f(n.thicknessMap)),n.anisotropyMap!==undefined&&(r.anisotropyMap=f(n.anisotropyMap)),n.sheenColorMap!==undefined&&(r.sheenColorMap=f(n.sheenColorMap)),n.sheenRoughnessMap!==undefined&&(r.sheenRoughnessMap=f(n.sheenRoughnessMap)),r}setTextures(n){return this.textures=n,this}static createMaterialFromType(n){const t={ShadowMaterial:lft,SpriteMaterial:hb,RawShaderMaterial:aft,ShaderMaterial:tr,PointsMaterial:wb,MeshPhysicalMaterial:vft,MeshStandardMaterial:ck,MeshPhongMaterial:yft,MeshToonMaterial:pft,MeshNormalMaterial:wft,MeshLambertMaterial:bft,MeshDepthMaterial:ub,MeshDistanceMaterial:fb,MeshBasicMaterial:hu,MeshMatcapMaterial:kft,LineDashedMaterial:dft,LineBasicMaterial:pt,Material:ct};return new t[n]}}class nd{static decodeText(n){if(typeof TextDecoder!="undefined")return(new TextDecoder).decode(n);let t="";for(let i=0,r=n.length;i<r;i++)t+=String.fromCharCode(n[i]);try{return decodeURIComponent(escape(t))}catch(i){return t}}static extractUrlBase(n){const t=n.lastIndexOf("/");return t===-1?"./":n.slice(0,t+1)}static resolveURL(n,t){return typeof n!="string"||n===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(n)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(n))?n:/^data:.*,.*$/i.test(n)?n:/^blob:.*$/i.test(n)?n:t+n}}class pet extends l{constructor(){super();this.isInstancedBufferGeometry=!0;this.type="InstancedBufferGeometry";this.instanceCount=Infinity}copy(n){return super.copy(n),this.instanceCount=n.instanceCount,this}toJSON(){const n=super.toJSON();return n.instanceCount=this.instanceCount,n.isInstancedBufferGeometry=!0,n}}class wet extends ri{constructor(n){super(n)}load(n,t,i,r){const u=this,f=new br(u.manager);f.setPath(u.path);f.setRequestHeader(u.requestHeader);f.setWithCredentials(u.withCredentials);f.load(n,function(i){try{t(u.parse(JSON.parse(i)))}catch(f){r?r(f):console.error(f);u.manager.itemError(n)}},i,r)}parse(n){function h(n,t){if(u[t]!==undefined)return u[t];const f=n.interleavedBuffers,i=f[t],e=a(n,i.buffer),o=re(i.type,e),r=new dl(o,i.stride);return r.uuid=i.uuid,u[t]=r,r}function a(n,t){if(f[t]!==undefined)return f[t];const r=n.arrayBuffers,u=r[t],i=new Uint32Array(u).buffer;return f[t]=i,i}const u={},f={};const i=n.isInstancedBufferGeometry?new pet:new l,e=n.data.index;if(e!==undefined){const n=re(e.type,e.array);i.setIndex(new p(n,1))}const c=n.data.attributes;for(const t in c){const r=c[t];let u;if(r.isInterleavedBufferAttribute){const t=h(n.data,r.data);u=new fo(t,r.itemSize,r.offset,r.normalized)}else{const n=re(r.type,r.array),t=r.isInstancedBufferAttribute?ao:p;u=new t(n,r.itemSize,r.normalized)}r.name!==undefined&&(u.name=r.name);r.usage!==undefined&&u.setUsage(r.usage);r.updateRange!==undefined&&(u.updateRange.offset=r.updateRange.offset,u.updateRange.count=r.updateRange.count);i.setAttribute(t,u)}const o=n.data.morphAttributes;if(o)for(const t in o){const r=o[t],u=[];for(let t=0,i=r.length;t<i;t++){const i=r[t];let f;if(i.isInterleavedBufferAttribute){const t=h(n.data,i.data);f=new fo(t,i.itemSize,i.offset,i.normalized)}else{const n=re(i.type,i.array);f=new p(n,i.itemSize,i.normalized)}i.name!==undefined&&(f.name=i.name);u.push(f)}i.morphAttributes[t]=u}const v=n.data.morphTargetsRelative;v&&(i.morphTargetsRelative=!0);const s=n.data.groups||n.data.drawcalls||n.data.offsets;if(s!==undefined)for(let n=0,t=s.length;n!==t;++n){const t=s[n];i.addGroup(t.start,t.count,t.materialIndex)}const r=n.data.boundingSphere;if(r!==undefined){const n=new t;r.center!==undefined&&n.fromArray(r.center);i.boundingSphere=new hi(n,r.radius)}return n.name&&(i.name=n.name),n.userData&&(i.userData=n.userData),i}}class ebt extends ri{constructor(n){super(n)}load(n,t,i,r){const f=this,e=this.path===""?nd.extractUrlBase(n):this.path;this.resourcePath=this.resourcePath||e;const u=new br(this.manager);u.setPath(this.path);u.setRequestHeader(this.requestHeader);u.setWithCredentials(this.withCredentials);u.load(n,function(i){let u=null;try{u=JSON.parse(i)}catch(o){r!==undefined&&r(o);console.error("THREE:ObjectLoader: Can't parse "+n+".",o.message);return}const e=u.metadata;if(e===undefined||e.type===undefined||e.type.toLowerCase()==="geometry"){r!==undefined&&r(new Error("THREE.ObjectLoader: Can't load "+n));console.error("THREE.ObjectLoader: Can't load "+n);return}f.parse(u,t)},i,r)}async loadAsync(n,t){const f=this,e=this.path===""?nd.extractUrlBase(n):this.path;this.resourcePath=this.resourcePath||e;const i=new br(this.manager);i.setPath(this.path);i.setRequestHeader(this.requestHeader);i.setWithCredentials(this.withCredentials);const o=await i.loadAsync(n,t),u=JSON.parse(o),r=u.metadata;if(r===undefined||r.type===undefined||r.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+n);return await f.parseAsync(u)}parse(n,t){const f=this.parseAnimations(n.animations),e=this.parseShapes(n.shapes),o=this.parseGeometries(n.geometries,e),r=this.parseImages(n.images,function(){t!==undefined&&t(i)}),u=this.parseTextures(n.textures,r),s=this.parseMaterials(n.materials,u),i=this.parseObject(n.object,o,s,u,f),h=this.parseSkeletons(n.skeletons,i);if(this.bindSkeletons(i,h),t!==undefined){let n=!1;for(const t in r)if(r[t].data instanceof HTMLImageElement){n=!0;break}n===!1&&t(i)}return i}async parseAsync(n){const r=this.parseAnimations(n.animations),u=this.parseShapes(n.shapes),f=this.parseGeometries(n.geometries,u),e=await this.parseImagesAsync(n.images),i=this.parseTextures(n.textures,e),o=this.parseMaterials(n.materials,i),t=this.parseObject(n.object,f,o,i,r),s=this.parseSkeletons(n.skeletons,t);return this.bindSkeletons(t,s),t}parseShapes(n){const t={};if(n!==undefined)for(let i=0,r=n.length;i<r;i++){const r=(new cf).fromJSON(n[i]);t[r.uuid]=r}return t}parseSkeletons(n,t){const i={},r={};if(t.traverse(function(n){n.isBone&&(r[n.uuid]=n)}),n!==undefined)for(let t=0,u=n.length;t<u;t++){const u=(new yb).fromJSON(n[t],r);i[u.uuid]=u}return i}parseGeometries(n,t){const i={};if(n!==undefined){const r=new wet;for(let u=0,f=n.length;u<f;u++){let e;const f=n[u];switch(f.type){case"BufferGeometry":case"InstancedBufferGeometry":e=r.parse(f);break;default:f.type in hk?e=hk[f.type].fromJSON(f,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${f.type}"`)}e.uuid=f.uuid;f.name!==undefined&&(e.name=f.name);f.userData!==undefined&&(e.userData=f.userData);i[f.uuid]=e}}return i}parseMaterials(n,t){const i={},r={};if(n!==undefined){const u=new gk;u.setTextures(t);for(let t=0,f=n.length;t<f;t++){const f=n[t];i[f.uuid]===undefined&&(i[f.uuid]=u.parse(f));r[f.uuid]=i[f.uuid]}}return r}parseAnimations(n){const t={};if(n!==undefined)for(let i=0;i<n.length;i++){const u=n[i],r=ph.parse(u);t[r.uuid]=r}return t}parseImages(n,t){function e(n){return i.manager.itemStart(n),u.load(n,function(){i.manager.itemEnd(n)},undefined,function(){i.manager.itemError(n);i.manager.itemEnd(n)})}function f(n){if(typeof n=="string"){const t=n,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:i.resourcePath+t;return e(r)}return n.data?{data:re(n.type,n.data),width:n.width,height:n.height}:null}const i=this,r={};let u;if(n!==undefined&&n.length>0){const i=new wk(t);u=new wh(i);u.setCrossOrigin(this.crossOrigin);for(let t=0,i=n.length;t<i;t++){const i=n[t],u=i.url;if(Array.isArray(u)){const n=[];for(let t=0,i=u.length;t<i;t++){const r=u[t],i=f(r);i!==null&&(i instanceof HTMLImageElement?n.push(i):n.push(new lo(i.data,i.width,i.height)))}r[i.uuid]=new nf(n)}else{const n=f(i.url);r[i.uuid]=new nf(n)}}}return r}async parseImagesAsync(n){async function r(n){if(typeof n=="string"){const t=n,r=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(t)?t:u.resourcePath+t;return await i.loadAsync(r)}return n.data?{data:re(n.type,n.data),width:n.width,height:n.height}:null}const u=this,t={};let i;if(n!==undefined&&n.length>0){i=new wh(this.manager);i.setCrossOrigin(this.crossOrigin);for(let i=0,u=n.length;i<u;i++){const u=n[i],f=u.url;if(Array.isArray(f)){const n=[];for(let t=0,i=f.length;t<i;t++){const u=f[t],i=await r(u);i!==null&&(i instanceof HTMLImageElement?n.push(i):n.push(new lo(i.data,i.width,i.height)))}t[u.uuid]=new nf(n)}else{const n=await r(u.url);t[u.uuid]=new nf(n)}}}return t}parseTextures(n,t){function i(n,t){return typeof n=="number"?n:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",n),t[n])}const r={};if(n!==undefined)for(let u=0,f=n.length;u<f;u++){const f=n[u];f.image===undefined&&console.warn('THREE.ObjectLoader: No "image" specified for',f.uuid);t[f.image]===undefined&&console.warn("THREE.ObjectLoader: Undefined image",f.image);const s=t[f.image],o=s.data;let e;Array.isArray(o)?(e=new ws,o.length===6&&(e.needsUpdate=!0)):(e=o&&o.data?new lo:new tt,o&&(e.needsUpdate=!0));e.source=s;e.uuid=f.uuid;f.name!==undefined&&(e.name=f.name);f.mapping!==undefined&&(e.mapping=i(f.mapping,obt));f.channel!==undefined&&(e.channel=f.channel);f.offset!==undefined&&e.offset.fromArray(f.offset);f.repeat!==undefined&&e.repeat.fromArray(f.repeat);f.center!==undefined&&e.center.fromArray(f.center);f.rotation!==undefined&&(e.rotation=f.rotation);f.wrap!==undefined&&(e.wrapS=i(f.wrap[0],bet),e.wrapT=i(f.wrap[1],bet));f.format!==undefined&&(e.format=f.format);f.internalFormat!==undefined&&(e.internalFormat=f.internalFormat);f.type!==undefined&&(e.type=f.type);f.colorSpace!==undefined&&(e.colorSpace=f.colorSpace);f.encoding!==undefined&&(e.encoding=f.encoding);f.minFilter!==undefined&&(e.minFilter=i(f.minFilter,ket));f.magFilter!==undefined&&(e.magFilter=i(f.magFilter,ket));f.anisotropy!==undefined&&(e.anisotropy=f.anisotropy);f.flipY!==undefined&&(e.flipY=f.flipY);f.generateMipmaps!==undefined&&(e.generateMipmaps=f.generateMipmaps);f.premultiplyAlpha!==undefined&&(e.premultiplyAlpha=f.premultiplyAlpha);f.unpackAlignment!==undefined&&(e.unpackAlignment=f.unpackAlignment);f.compareFunction!==undefined&&(e.compareFunction=f.compareFunction);f.userData!==undefined&&(e.userData=f.userData);r[f.uuid]=e}return r}parseObject(n,t,i,r,f){function s(n){return t[n]===undefined&&console.warn("THREE.ObjectLoader: Undefined geometry",n),t[n]}function o(n){if(n===undefined)return undefined;if(Array.isArray(n)){const t=[];for(let r=0,u=n.length;r<u;r++){const u=n[r];i[u]===undefined&&console.warn("THREE.ObjectLoader: Undefined material",u);t.push(i[u])}return t}return i[n]===undefined&&console.warn("THREE.ObjectLoader: Undefined material",n),i[n]}function l(n){return r[n]===undefined&&console.warn("THREE.ObjectLoader: Undefined texture",n),r[n]}let e;let h,c;switch(n.type){case"Scene":e=new art;n.background!==undefined&&(e.background=Number.isInteger(n.background)?new u(n.background):l(n.background));n.environment!==undefined&&(e.environment=l(n.environment));n.fog!==undefined&&(n.fog.type==="Fog"?e.fog=new sb(n.fog.color,n.fog.near,n.fog.far):n.fog.type==="FogExp2"&&(e.fog=new ob(n.fog.color,n.fog.density)));n.backgroundBlurriness!==undefined&&(e.backgroundBlurriness=n.backgroundBlurriness);n.backgroundIntensity!==undefined&&(e.backgroundIntensity=n.backgroundIntensity);break;case"PerspectiveCamera":e=new ot(n.fov,n.aspect,n.near,n.far);n.focus!==undefined&&(e.focus=n.focus);n.zoom!==undefined&&(e.zoom=n.zoom);n.filmGauge!==undefined&&(e.filmGauge=n.filmGauge);n.filmOffset!==undefined&&(e.filmOffset=n.filmOffset);n.view!==undefined&&(e.view=Object.assign({},n.view));break;case"OrthographicCamera":e=new pl(n.left,n.right,n.top,n.bottom,n.near,n.far);n.zoom!==undefined&&(e.zoom=n.zoom);n.view!==undefined&&(e.view=Object.assign({},n.view));break;case"AmbientLight":e=new aet(n.color,n.intensity);break;case"DirectionalLight":e=new cet(n.color,n.intensity);break;case"PointLight":e=new het(n.color,n.intensity,n.distance,n.decay);break;case"RectAreaLight":e=new vet(n.color,n.intensity,n.width,n.height);break;case"SpotLight":e=new oet(n.color,n.intensity,n.distance,n.angle,n.penumbra,n.decay);break;case"HemisphereLight":e=new uet(n.color,n.groundColor,n.intensity);break;case"LightProbe":e=(new sv).fromJSON(n);break;case"SkinnedMesh":h=s(n.geometry);c=o(n.material);e=new rut(h,c);n.bindMode!==undefined&&(e.bindMode=n.bindMode);n.bindMatrix!==undefined&&e.bindMatrix.fromArray(n.bindMatrix);n.skeleton!==undefined&&(e.skeleton=n.skeleton);break;case"Mesh":h=s(n.geometry);c=o(n.material);e=new et(h,c);break;case"InstancedMesh":h=s(n.geometry);c=o(n.material);const i=n.count,r=n.instanceMatrix,t=n.instanceColor;e=new out(h,c,i);e.instanceMatrix=new ao(new Float32Array(r.array),16);t!==undefined&&(e.instanceColor=new ao(new Float32Array(t.array),t.itemSize));break;case"LOD":e=new krt;break;case"Line":e=new lu(s(n.geometry),o(n.material));break;case"LineLoop":e=new vut(s(n.geometry),o(n.material));break;case"LineSegments":e=new ir(s(n.geometry),o(n.material));break;case"PointCloud":case"Points":e=new put(s(n.geometry),o(n.material));break;case"Sprite":e=new wrt(o(n.material));break;case"Group":e=new uo;break;case"Bone":e=new vb;break;default:e=new v}if(e.uuid=n.uuid,n.name!==undefined&&(e.name=n.name),n.matrix!==undefined?(e.matrix.fromArray(n.matrix),n.matrixAutoUpdate!==undefined&&(e.matrixAutoUpdate=n.matrixAutoUpdate),e.matrixAutoUpdate&&e.matrix.decompose(e.position,e.quaternion,e.scale)):(n.position!==undefined&&e.position.fromArray(n.position),n.rotation!==undefined&&e.rotation.fromArray(n.rotation),n.quaternion!==undefined&&e.quaternion.fromArray(n.quaternion),n.scale!==undefined&&e.scale.fromArray(n.scale)),n.up!==undefined&&e.up.fromArray(n.up),n.castShadow!==undefined&&(e.castShadow=n.castShadow),n.receiveShadow!==undefined&&(e.receiveShadow=n.receiveShadow),n.shadow&&(n.shadow.bias!==undefined&&(e.shadow.bias=n.shadow.bias),n.shadow.normalBias!==undefined&&(e.shadow.normalBias=n.shadow.normalBias),n.shadow.radius!==undefined&&(e.shadow.radius=n.shadow.radius),n.shadow.mapSize!==undefined&&e.shadow.mapSize.fromArray(n.shadow.mapSize),n.shadow.camera!==undefined&&(e.shadow.camera=this.parseObject(n.shadow.camera))),n.visible!==undefined&&(e.visible=n.visible),n.frustumCulled!==undefined&&(e.frustumCulled=n.frustumCulled),n.renderOrder!==undefined&&(e.renderOrder=n.renderOrder),n.userData!==undefined&&(e.userData=n.userData),n.layers!==undefined&&(e.layers.mask=n.layers),n.children!==undefined){const u=n.children;for(let n=0;n<u.length;n++)e.add(this.parseObject(u[n],t,i,r,f))}if(n.animations!==undefined){const t=n.animations;for(let n=0;n<t.length;n++){const i=t[n];e.animations.push(f[i])}}if(n.type==="LOD"){n.autoUpdate!==undefined&&(e.autoUpdate=n.autoUpdate);const t=n.levels;for(let n=0;n<t.length;n++){const i=t[n],r=e.getObjectByProperty("uuid",i.object);r!==undefined&&e.addLevel(r,i.distance,i.hysteresis)}}return e}bindSkeletons(n,t){Object.keys(t).length!==0&&n.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==undefined){const i=t[n.skeleton];i===undefined?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const obt={UVMapping:gh,CubeReflectionMapping:kr,CubeRefractionMapping:dr,EquirectangularReflectionMapping:ko,EquirectangularRefractionMapping:go,CubeUVReflectionMapping:ne},bet={RepeatWrapping:ns,ClampToEdgeWrapping:st,MirroredRepeatWrapping:ts},ket={NearestFilter:d,NearestMipmapNearestFilter:nc,NearestMipmapLinearFilter:is,LinearFilter:g,LinearMipmapNearestFilter:uy,LinearMipmapLinearFilter:gr};class sbt extends ri{constructor(n){super(n);this.isImageBitmapLoader=!0;typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported.");typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported.");this.options={premultiplyAlpha:"none"}}setOptions(n){return this.options=n,this}load(n,t,i,r){n===undefined&&(n="");this.path!==undefined&&(n=this.path+n);n=this.manager.resolveURL(n);const u=this,f=pf.get(n);if(f!==undefined)return u.manager.itemStart(n),setTimeout(function(){t&&t(f);u.manager.itemEnd(n)},0),f;const e={};e.credentials=this.crossOrigin==="anonymous"?"same-origin":"include";e.headers=this.requestHeader;fetch(n,e).then(function(n){return n.blob()}).then(function(n){return createImageBitmap(n,Object.assign(u.options,{colorSpaceConversion:"none"}))}).then(function(i){pf.add(n,i);t&&t(i);u.manager.itemEnd(n)}).catch(function(t){r&&r(t);u.manager.itemError(n);u.manager.itemEnd(n)});u.manager.itemStart(n)}}let hv;class td{static getContext(){return hv===undefined&&(hv=new(window.AudioContext||window.webkitAudioContext)),hv}static setContext(n){hv=n}}class hbt extends ri{constructor(n){super(n)}load(n,t,i,r){function f(t){r?r(t):console.error(t);e.manager.itemError(n)}const e=this,u=new br(this.manager);u.setResponseType("arraybuffer");u.setPath(this.path);u.setRequestHeader(this.requestHeader);u.setWithCredentials(this.withCredentials);u.load(n,function(n){try{const i=n.slice(0),r=td.getContext();r.decodeAudioData(i,function(n){t(n)},f)}catch(i){f(i)}},i,r)}}class cbt extends sv{constructor(n,i,r=1){super(undefined,r);this.isHemisphereLightProbe=!0;const f=(new u).set(n),e=(new u).set(i),o=new t(f.r,f.g,f.b),s=new t(e.r,e.g,e.b),h=Math.sqrt(Math.PI),c=h*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(s).multiplyScalar(h);this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(c)}}class lbt extends sv{constructor(n,t=1){super(undefined,t);this.isAmbientLightProbe=!0;const i=(new u).set(n);this.sh.coefficients[0].set(i.r,i.g,i.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const det=new o,get=new o,wf=new o;class abt{constructor(){this.type="StereoCamera";this.aspect=1;this.eyeSep=.064;this.cameraL=new ot;this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=!1;this.cameraR=new ot;this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=!1;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(n){const t=this._cache,i=t.focus!==n.focus||t.fov!==n.fov||t.aspect!==n.aspect*this.aspect||t.near!==n.near||t.far!==n.far||t.zoom!==n.zoom||t.eyeSep!==this.eyeSep;if(i){t.focus=n.focus;t.fov=n.fov;t.aspect=n.aspect*this.aspect;t.near=n.near;t.far=n.far;t.zoom=n.zoom;t.eyeSep=this.eyeSep;wf.copy(n.projectionMatrix);const e=t.eyeSep/2,u=e*t.near/t.focus,f=t.near*Math.tan(gu*t.fov*.5)/t.zoom;let i,r;get.elements[12]=-e;det.elements[12]=e;i=-f*t.aspect+u;r=f*t.aspect+u;wf.elements[0]=2*t.near/(r-i);wf.elements[8]=(r+i)/(r-i);this.cameraL.projectionMatrix.copy(wf);i=-f*t.aspect-u;r=f*t.aspect-u;wf.elements[0]=2*t.near/(r-i);wf.elements[8]=(r+i)/(r-i);this.cameraR.projectionMatrix.copy(wf)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(get);this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(det)}}class not{constructor(n=true){this.autoStart=n;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=!1}start(){this.startTime=tot();this.oldTime=this.startTime;this.elapsedTime=0;this.running=!0}stop(){this.getElapsedTime();this.running=!1;this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let n=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=tot();n=(t-this.oldTime)/1e3;this.oldTime=t;this.elapsedTime+=n}return n}}const bf=new t,iot=new wt,vbt=new t,kf=new t;class ybt extends v{constructor(){super();this.type="AudioListener";this.context=td.getContext();this.gain=this.context.createGain();this.gain.connect(this.context.destination);this.filter=null;this.timeDelta=0;this._clock=new not}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(n){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=n,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(n){return this.gain.gain.setTargetAtTime(n,this.context.currentTime,.01),this}updateMatrixWorld(n){super.updateMatrixWorld(n);const t=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(bf,iot,vbt),kf.set(0,0,-1).applyQuaternion(iot),t.positionX){const n=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(bf.x,n);t.positionY.linearRampToValueAtTime(bf.y,n);t.positionZ.linearRampToValueAtTime(bf.z,n);t.forwardX.linearRampToValueAtTime(kf.x,n);t.forwardY.linearRampToValueAtTime(kf.y,n);t.forwardZ.linearRampToValueAtTime(kf.z,n);t.upX.linearRampToValueAtTime(i.x,n);t.upY.linearRampToValueAtTime(i.y,n);t.upZ.linearRampToValueAtTime(i.z,n)}else t.setPosition(bf.x,bf.y,bf.z),t.setOrientation(kf.x,kf.y,kf.z,i.x,i.y,i.z)}}class rot extends v{constructor(n){super();this.type="Audio";this.listener=n;this.context=n.context;this.gain=this.context.createGain();this.gain.connect(n.getInput());this.autoplay=!1;this.buffer=null;this.detune=0;this.loop=!1;this.loopStart=0;this.loopEnd=0;this.offset=0;this.duration=undefined;this.playbackRate=1;this.isPlaying=!1;this.hasPlaybackControl=!0;this.source=null;this.sourceType="empty";this._startedAt=0;this._progress=0;this._connected=!1;this.filters=[]}getOutput(){return this.gain}setNodeSource(n){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=n,this.connect(),this}setMediaElementSource(n){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(n),this.connect(),this}setMediaStreamSource(n){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(n),this.connect(),this}setBuffer(n){return this.buffer=n,this.sourceType="buffer",this.autoplay&&this.play(),this}play(n=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+n;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let n=1,t=this.filters.length;n<t;n++)this.filters[n-1].connect(this.filters[n]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let n=1,t=this.filters.length;n<t;n++)this.filters[n-1].disconnect(this.filters[n]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(n){return n||(n=[]),this._connected===!0?(this.disconnect(),this.filters=n.slice(),this.connect()):this.filters=n.slice(),this}setDetune(n){if(this.detune=n,this.source.detune!==undefined)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(n){return this.setFilters(n?[n]:[])}setPlaybackRate(n){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=n,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(n){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=n,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(n){return this.loopStart=n,this}setLoopEnd(n){return this.loopEnd=n,this}getVolume(){return this.gain.gain.value}setVolume(n){return this.gain.gain.setTargetAtTime(n,this.context.currentTime,.01),this}}const df=new t,uot=new wt,pbt=new t,gf=new t;class wbt extends rot{constructor(n){super(n);this.panner=this.context.createPanner();this.panner.panningModel="HRTF";this.panner.connect(this.gain)}connect(){super.connect();this.panner.connect(this.gain)}disconnect(){super.disconnect();this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(n){return this.panner.refDistance=n,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(n){return this.panner.rolloffFactor=n,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(n){return this.panner.distanceModel=n,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(n){return this.panner.maxDistance=n,this}setDirectionalCone(n,t,i){return this.panner.coneInnerAngle=n,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=i,this}updateMatrixWorld(n){if(super.updateMatrixWorld(n),this.hasPlaybackControl!==!0||this.isPlaying!==!1){this.matrixWorld.decompose(df,uot,pbt);gf.set(0,0,1).applyQuaternion(uot);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(df.x,n);t.positionY.linearRampToValueAtTime(df.y,n);t.positionZ.linearRampToValueAtTime(df.z,n);t.orientationX.linearRampToValueAtTime(gf.x,n);t.orientationY.linearRampToValueAtTime(gf.y,n);t.orientationZ.linearRampToValueAtTime(gf.z,n)}else t.setPosition(df.x,df.y,df.z),t.setOrientation(gf.x,gf.y,gf.z)}}}class bbt{constructor(n,t=2048){this.analyser=n.context.createAnalyser();this.analyser.fftSize=t;this.data=new Uint8Array(this.analyser.frequencyBinCount);n.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const n=this.getFrequencyData();for(let i=0;i<n.length;i++)t+=n[i];return t/n.length}}class fot{constructor(n,t,i){this.binding=n;this.valueSize=i;let r,u,f;switch(t){case"quaternion":r=this._slerp;u=this._slerpAdditive;f=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(i*6);this._workIndex=5;break;case"string":case"bool":r=this._select;u=this._select;f=this._setAdditiveIdentityOther;this.buffer=new Array(i*5);break;default:r=this._lerp;u=this._lerpAdditive;f=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(i*5)}this._mixBufferRegion=r;this._mixBufferRegionAdditive=u;this._setIdentity=f;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0}accumulate(n,t){const u=this.buffer,r=this.valueSize,f=n*r+r;let i=this.cumulativeWeight;if(i===0){for(let n=0;n!==r;++n)u[f+n]=u[n];i=t}else{i+=t;const n=t/i;this._mixBufferRegion(u,f,0,n,r)}this.cumulativeWeight=i}accumulateAdditive(n){const i=this.buffer,t=this.valueSize,r=t*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity();this._mixBufferRegionAdditive(i,r,0,n,t);this.cumulativeWeightAdditive+=n}apply(n){const t=this.valueSize,i=this.buffer,r=n*t+t,u=this.cumulativeWeight,f=this.cumulativeWeightAdditive,e=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,u<1){const n=t*this._origIndex;this._mixBufferRegion(i,r,n,1-u,t)}f>0&&this._mixBufferRegionAdditive(i,r,this._addIndex*t,1,t);for(let n=t,u=t+t;n!==u;++n)if(i[n]!==i[n+t]){e.setValue(i,r);break}}saveOriginalState(){const r=this.binding,n=this.buffer,t=this.valueSize,i=t*this._origIndex;r.getValue(n,i);for(let r=t,u=i;r!==u;++r)n[r]=n[i+r%t];this._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0}restoreOriginalState(){const n=this.valueSize*3;this.binding.setValue(this.buffer,n)}_setAdditiveIdentityNumeric(){const n=this._addIndex*this.valueSize,t=n+this.valueSize;for(let i=n;i<t;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const n=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[t+i]=this.buffer[n+i]}_select(n,t,i,r,u){if(r>=.5)for(let r=0;r!==u;++r)n[t+r]=n[i+r]}_slerp(n,t,i,r){wt.slerpFlat(n,t,n,t,n,i,r)}_slerpAdditive(n,t,i,r,u){const f=this._workIndex*u;wt.multiplyQuaternionsFlat(n,f,n,t,n,i);wt.slerpFlat(n,t,n,t,n,f,r)}_lerp(n,t,i,r,u){const f=1-r;for(let e=0;e!==u;++e){const u=t+e;n[u]=n[u]*f+n[i+e]*r}}_lerpAdditive(n,t,i,r,u){for(let f=0;f!==u;++f){const u=t+f;n[u]=n[u]+n[i+f]*r}}}const id="\\[\\]\\.:\\/",kbt=new RegExp("["+id+"]","g"),rd="[^"+id+"]",dbt="[^"+id.replace("\\.","")+"]",gbt=/((?:WC+[\/:])*)/.source.replace("WC",rd),nkt=/(WCOD+)?/.source.replace("WCOD",dbt),tkt=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",rd),ikt=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",rd),rkt=new RegExp("^"+gbt+nkt+tkt+ikt+"$"),ukt=["material","materials","bones","map"];class fkt{constructor(n,t,i){const r=i||a.parseTrackName(t);this._targetGroup=n;this._bindings=n.subscribe_(t,r)}getValue(n,t){this.bind();const r=this._targetGroup.nCachedObjects_,i=this._bindings[r];i!==undefined&&i.getValue(n,t)}setValue(n,t){const i=this._bindings;for(let r=this._targetGroup.nCachedObjects_,u=i.length;r!==u;++r)i[r].setValue(n,t)}bind(){const n=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=n.length;t!==i;++t)n[t].bind()}unbind(){const n=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=n.length;t!==i;++t)n[t].unbind()}}class a{constructor(n,t,i){this.path=t;this.parsedPath=i||a.parseTrackName(t);this.node=a.findNode(n,this.parsedPath.nodeName);this.rootNode=n;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}static create(n,t,i){return n&&n.isAnimationObjectGroup?new a.Composite(n,t,i):new a(n,t,i)}static sanitizeNodeName(n){return n.replace(/\s/g,"_").replace(kbt,"")}static parseTrackName(n){const i=rkt.exec(n);if(i===null)throw new Error("PropertyBinding: Cannot parse trackName: "+n);const t={nodeName:i[2],objectName:i[3],objectIndex:i[4],propertyName:i[5],propertyIndex:i[6]},r=t.nodeName&&t.nodeName.lastIndexOf(".");if(r!==undefined&&r!==-1){const n=t.nodeName.substring(r+1);ukt.indexOf(n)!==-1&&(t.nodeName=t.nodeName.substring(0,r),t.objectName=n)}if(t.propertyName===null||t.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+n);return t}static findNode(n,t){if(t===undefined||t===""||t==="."||t===-1||t===n.name||t===n.uuid)return n;if(n.skeleton){const i=n.skeleton.getBoneByName(t);if(i!==undefined)return i}if(n.children){const i=function(n){for(let r=0;r<n.length;r++){const u=n[r];if(u.name===t||u.uuid===t)return u;const f=i(u.children);if(f)return f}return null},r=i(n.children);if(r)return r}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(n,t){n[t]=this.targetObject[this.propertyName]}_getValue_array(n,t){const i=this.resolvedProperty;for(let r=0,u=i.length;r!==u;++r)n[t++]=i[r]}_getValue_arrayElement(n,t){n[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(n,t){this.resolvedProperty.toArray(n,t)}_setValue_direct(n,t){this.targetObject[this.propertyName]=n[t]}_setValue_direct_setNeedsUpdate(n,t){this.targetObject[this.propertyName]=n[t];this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(n,t){this.targetObject[this.propertyName]=n[t];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(n,t){const i=this.resolvedProperty;for(let r=0,u=i.length;r!==u;++r)i[r]=n[t++]}_setValue_array_setNeedsUpdate(n,t){const i=this.resolvedProperty;for(let r=0,u=i.length;r!==u;++r)i[r]=n[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(n,t){const i=this.resolvedProperty;for(let r=0,u=i.length;r!==u;++r)i[r]=n[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(n,t){this.resolvedProperty[this.propertyIndex]=n[t]}_setValue_arrayElement_setNeedsUpdate(n,t){this.resolvedProperty[this.propertyIndex]=n[t];this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(n,t){this.resolvedProperty[this.propertyIndex]=n[t];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(n,t){this.resolvedProperty.fromArray(n,t)}_setValue_fromArray_setNeedsUpdate(n,t){this.resolvedProperty.fromArray(n,t);this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(n,t){this.resolvedProperty.fromArray(n,t);this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(n,t){this.bind();this.getValue(n,t)}_setValue_unbound(n,t){this.bind();this.setValue(n,t)}bind(){let n=this.node;const i=this.parsedPath,f=i.objectName,e=i.propertyName;let r=i.propertyIndex;if(n||(n=a.findNode(this.rootNode,i.nodeName),this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!n){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(f){let t=i.objectIndex;switch(f){case"materials":if(!n.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!n.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}n=n.material.materials;break;case"bones":if(!n.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}n=n.skeleton.bones;for(let i=0;i<n.length;i++)if(n[i].name===t){t=i;break}break;case"map":if("map"in n){n=n.map;break}if(!n.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!n.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}n=n.material.map;break;default:if(n[f]===undefined){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}n=n[f]}if(t!==undefined){if(n[t]===undefined){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);return}n=n[t]}}const t=n[e];if(t===undefined){const t=i.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+t+"."+e+" but it wasn't found.",n);return}let o=this.Versioning.None;this.targetObject=n;n.needsUpdate!==undefined?o=this.Versioning.NeedsUpdate:n.matrixWorldNeedsUpdate!==undefined&&(o=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==undefined){if(e==="morphTargetInfluences"){if(!n.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!n.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}n.morphTargetDictionary[r]!==undefined&&(r=n.morphTargetDictionary[r])}u=this.BindingType.ArrayElement;this.resolvedProperty=t;this.propertyIndex=r}else t.fromArray!==undefined&&t.toArray!==undefined?(u=this.BindingType.HasFromToArray,this.resolvedProperty=t):Array.isArray(t)?(u=this.BindingType.EntireArray,this.resolvedProperty=t):this.propertyName=e;this.getValue=this.GetterByBindingType[u];this.setValue=this.SetterByBindingTypeAndVersioning[u][o]}unbind(){this.node=null;this.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound}}a.Composite=fkt;a.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};a.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};a.prototype.GetterByBindingType=[a.prototype._getValue_direct,a.prototype._getValue_array,a.prototype._getValue_arrayElement,a.prototype._getValue_toArray,];a.prototype.SetterByBindingTypeAndVersioning=[[a.prototype._setValue_direct,a.prototype._setValue_direct_setNeedsUpdate,a.prototype._setValue_direct_setMatrixWorldNeedsUpdate,],[a.prototype._setValue_array,a.prototype._setValue_array_setNeedsUpdate,a.prototype._setValue_array_setMatrixWorldNeedsUpdate,],[a.prototype._setValue_arrayElement,a.prototype._setValue_arrayElement_setNeedsUpdate,a.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,],[a.prototype._setValue_fromArray,a.prototype._setValue_fromArray_setNeedsUpdate,a.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,]];class ekt{constructor(){this.isAnimationObjectGroup=!0;this.uuid=dt();this._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[];this._parsedPaths=[];this._bindings=[];this._bindingsIndicesByPath={};const n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}}add(){const n=this._objects,t=this._indicesByUUID,u=this._paths,f=this._parsedPaths,i=this._bindings,e=i.length;let o=undefined,s=n.length,r=this.nCachedObjects_;for(let h=0,c=arguments.length;h!==c;++h){const l=arguments[h],v=l.uuid;let c=t[v];if(c===undefined){c=s++;t[v]=c;n.push(l);for(let n=0,t=e;n!==t;++n)i[n].push(new a(l,u[n],f[n]))}else if(c<r){o=n[c];const s=--r,h=n[s];t[h.uuid]=c;n[c]=h;t[v]=s;n[s]=l;for(let n=0,t=e;n!==t;++n){const t=i[n],e=t[s];let r=t[c];t[c]=e;r===undefined&&(r=new a(l,u[n],f[n]));t[s]=r}}else n[c]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=r}remove(){const n=this._objects,t=this._indicesByUUID,r=this._bindings,u=r.length;let i=this.nCachedObjects_;for(let f=0,e=arguments.length;f!==e;++f){const o=arguments[f],s=o.uuid,e=t[s];if(e!==undefined&&e>=i){const f=i++,h=n[f];t[h.uuid]=e;n[e]=h;t[s]=f;n[f]=o;for(let n=0,t=u;n!==t;++n){const t=r[n],i=t[f],u=t[e];t[e]=i;t[f]=u}}}this.nCachedObjects_=i}uncache(){const n=this._objects,t=this._indicesByUUID,i=this._bindings,u=i.length;let r=this.nCachedObjects_,f=n.length;for(let e=0,o=arguments.length;e!==o;++e){const h=arguments[e],s=h.uuid,o=t[s];if(o!==undefined)if(delete t[s],o<r){const e=--r,s=n[e],h=--f,c=n[h];t[s.uuid]=o;n[o]=s;t[c.uuid]=e;n[e]=c;n.pop();for(let n=0,t=u;n!==t;++n){const t=i[n],r=t[e],u=t[h];t[o]=r;t[e]=u;t.pop()}}else{const r=--f,e=n[r];r>0&&(t[e.uuid]=o);n[o]=e;n.pop();for(let n=0,t=u;n!==t;++n){const t=i[n];t[o]=t[r];t.pop()}}}this.nCachedObjects_=r}subscribe_(n,t){const e=this._bindingsIndicesByPath;let i=e[n];const r=this._bindings;if(i!==undefined)return r[i];const o=this._paths,s=this._parsedPaths,u=this._objects,h=u.length,c=this.nCachedObjects_,f=new Array(h);i=r.length;e[n]=i;o.push(n);s.push(t);r.push(f);for(let i=c,r=u.length;i!==r;++i){const r=u[i];f[i]=new a(r,n,t)}return f}unsubscribe_(n){const i=this._bindingsIndicesByPath,t=i[n];if(t!==undefined){const f=this._paths,e=this._parsedPaths,r=this._bindings,u=r.length-1,o=r[u],s=n[u];i[s]=t;r[t]=o;r.pop();e[t]=e[u];e.pop();f[t]=f[u];f.pop()}}}class eot{constructor(n,t,i=null,r=t.blendMode){this._mixer=n;this._clip=t;this._localRoot=i;this.blendMode=r;const f=t.tracks,u=f.length,e=new Array(u),o={endingStart:ku,endingEnd:ku};for(let n=0;n!==u;++n){const t=f[n].createInterpolant(null);e[n]=t;t.settings=o}this._interpolantSettings=o;this._interpolants=e;this._propertyBindings=new Array(u);this._cacheIndex=null;this._byClipCacheIndex=null;this._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=fn;this._loopCount=-1;this._startTime=null;this.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;this.paused=!1;this.enabled=!0;this.clampWhenFinished=!1;this.zeroSlopeAtStart=!0;this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(n){return this._startTime=n,this}setLoop(n,t){return this.loop=n,this.repetitions=t,this}setEffectiveWeight(n){return this.weight=n,this._effectiveWeight=this.enabled?n:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(n){return this._scheduleFading(n,0,1)}fadeOut(n){return this._scheduleFading(n,1,0)}crossFadeFrom(n,t,i){if(n.fadeOut(t),this.fadeIn(t),i){const i=this._clip.duration,r=n._clip.duration,u=r/i,f=i/r;n.warp(1,u,t);this.warp(f,1,t)}return this}crossFadeTo(n,t,i){return n.crossFadeFrom(this,t,i)}stopFading(){const n=this._weightInterpolant;return n!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(n)),this}setEffectiveTimeScale(n){return this.timeScale=n,this._effectiveTimeScale=this.paused?0:n,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(n){return this.timeScale=this._clip.duration/n,this.stopWarping()}syncWith(n){return this.time=n.time,this.timeScale=n.timeScale,this.stopWarping()}halt(n){return this.warp(this._effectiveTimeScale,0,n)}warp(n,t,i){const u=this._mixer,f=u.time,e=this.timeScale;let r=this._timeScaleInterpolant;r===null&&(r=u._lendControlInterpolant(),this._timeScaleInterpolant=r);const o=r.parameterPositions,s=r.sampleValues;return o[0]=f,o[1]=f+i,s[0]=n/e,s[1]=t/e,this}stopWarping(){const n=this._timeScaleInterpolant;return n!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(n)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(n,t,i,r){if(!this.enabled){this._updateWeight(n);return}const f=this._startTime;if(f!==null){const r=(n-f)*i;r<0||i===0?t=0:(this._startTime=null,t=i*r)}t*=this._updateTimeScale(n);const e=this._updateTime(t),u=this._updateWeight(n);if(u>0){const n=this._interpolants,t=this._propertyBindings;switch(this.blendMode){case vp:for(let i=0,r=n.length;i!==r;++i)n[i].evaluate(e),t[i].accumulateAdditive(u);break;case sc:default:for(let i=0,f=n.length;i!==f;++i)n[i].evaluate(e),t[i].accumulate(r,u)}}}_updateWeight(n){let t=0;if(this.enabled){t=this.weight;const i=this._weightInterpolant;if(i!==null){const r=i.evaluate(n)[0];t*=r;n>i.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(n){let t=0;if(!this.paused){t=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const r=i.evaluate(n)[0];t*=r;n>i.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(n){const r=this._clip.duration,f=this.loop;let t=this.time+n,i=this._loopCount;const u=f===en;if(n===0)return i===-1?t:u&&(i&1)==1?r-t:t;if(f===un){i===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));n:{if(t>=r)t=r;else if(t<0)t=0;else{this.time=t;break n}this.clampWhenFinished?this.paused=!0:this.enabled=!1;this.time=t;this._mixer.dispatchEvent({type:"finished",action:this,direction:n<0?-1:1})}}else{if(i===-1&&(n>=0?(i=0,this._setEndings(!0,this.repetitions===0,u)):this._setEndings(this.repetitions===0,!0,u)),t>=r||t<0){const f=Math.floor(t/r);t-=r*f;i+=Math.abs(f);const e=this.repetitions-i;if(e<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=n>0?r:0,this.time=t,this._mixer.dispatchEvent({type:"finished",action:this,direction:n>0?1:-1});else{if(e===1){const t=n<0;this._setEndings(t,!t,u)}else this._setEndings(!1,!1,u);this._loopCount=i;this.time=t;this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:f})}}else this.time=t;if(u&&(i&1)==1)return r-t}return t}_setEndings(n,t,i){const r=this._interpolantSettings;i?(r.endingStart=du,r.endingEnd=du):(r.endingStart=n?this.zeroSlopeAtStart?du:ku:fs,r.endingEnd=t?this.zeroSlopeAtEnd?du:ku:fs)}_scheduleFading(n,t,i){const u=this._mixer,f=u.time;let r=this._weightInterpolant;r===null&&(r=u._lendControlInterpolant(),this._weightInterpolant=r);const e=r.parameterPositions,o=r.sampleValues;return e[0]=f,o[0]=t,e[1]=f+n,o[1]=i,this}}const okt=new Float32Array(1);class skt extends or{constructor(n){super();this._root=n;this._initMemoryManager();this._accuIndex=0;this.time=0;this.timeScale=1}_bindAction(n,t){const f=n._localRoot||this._root,e=n._clip.tracks,s=e.length,u=n._propertyBindings,h=n._interpolants,i=f.uuid,o=this._bindingsByRootAndName;let r=o[i];r===undefined&&(r={},o[i]=r);for(let n=0;n!==s;++n){const c=e[n],s=c.name;let o=r[s];if(o!==undefined)++o.referenceCount,u[n]=o;else{if(o=u[n],o!==undefined){o._cacheIndex===null&&(++o.referenceCount,this._addInactiveBinding(o,i,s));continue}const r=t&&t._propertyBindings[n].binding.parsedPath;o=new fot(a.create(f,s,r),c.ValueTypeName,c.getValueSize());++o.referenceCount;this._addInactiveBinding(o,i,s);u[n]=o}h[n].resultBuffer=o.buffer}}_activateAction(n){if(!this._isActiveAction(n)){if(n._cacheIndex===null){const r=(n._localRoot||this._root).uuid,t=n._clip.uuid,i=this._actionsByClip[t];this._bindAction(n,i&&i.knownActions[0]);this._addInactiveAction(n,t,r)}const t=n._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const i=t[n];i.useCount++==0&&(this._lendBinding(i),i.saveOriginalState())}this._lendAction(n)}}_deactivateAction(n){if(this._isActiveAction(n)){const t=n._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const i=t[n];--i.useCount==0&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(n)}}_initMemoryManager(){this._actions=[];this._nActiveActions=0;this._actionsByClip={};this._bindings=[];this._nActiveBindings=0;this._bindingsByRootAndName={};this._controlInterpolants=[];this._nActiveControlInterpolants=0;const n=this;this.stats={actions:{get total(){return n._actions.length},get inUse(){return n._nActiveActions}},bindings:{get total(){return n._bindings.length},get inUse(){return n._nActiveBindings}},controlInterpolants:{get total(){return n._controlInterpolants.length},get inUse(){return n._nActiveControlInterpolants}}}}_isActiveAction(n){const t=n._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(n,t,i){const u=this._actions,f=this._actionsByClip;let r=f[t];if(r===undefined)r={knownActions:[n],actionByRoot:{}},n._byClipCacheIndex=0,f[t]=r;else{const t=r.knownActions;n._byClipCacheIndex=t.length;t.push(n)}n._cacheIndex=u.length;u.push(n);r.actionByRoot[i]=n}_removeInactiveAction(n){const i=this._actions,r=i[i.length-1],u=n._cacheIndex;r._cacheIndex=u;i[u]=r;i.pop();n._cacheIndex=null;const f=n._clip.uuid,e=this._actionsByClip,o=e[f],t=o.knownActions,s=t[t.length-1],h=n._byClipCacheIndex;s._byClipCacheIndex=h;t[h]=s;t.pop();n._byClipCacheIndex=null;const c=o.actionByRoot,l=(n._localRoot||this._root).uuid;delete c[l];t.length===0&&delete e[f];this._removeInactiveBindingsForAction(n)}_removeInactiveBindingsForAction(n){const t=n._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const i=t[n];--i.referenceCount==0&&this._removeInactiveBinding(i)}}_lendAction(n){const t=this._actions,r=n._cacheIndex,i=this._nActiveActions++,u=t[i];n._cacheIndex=i;t[i]=n;u._cacheIndex=r;t[r]=u}_takeBackAction(n){const t=this._actions,r=n._cacheIndex,i=--this._nActiveActions,u=t[i];n._cacheIndex=i;t[i]=n;u._cacheIndex=r;t[r]=u}_addInactiveBinding(n,t,i){const u=this._bindingsByRootAndName,f=this._bindings;let r=u[t];r===undefined&&(r={},u[t]=r);r[i]=n;n._cacheIndex=f.length;f.push(n)}_removeInactiveBinding(n){const t=this._bindings,i=n.binding,r=i.rootNode.uuid,s=i.path,u=this._bindingsByRootAndName,f=u[r],e=t[t.length-1],o=n._cacheIndex;e._cacheIndex=o;t[o]=e;t.pop();delete f[s];Object.keys(f).length===0&&delete u[r]}_lendBinding(n){const t=this._bindings,r=n._cacheIndex,i=this._nActiveBindings++,u=t[i];n._cacheIndex=i;t[i]=n;u._cacheIndex=r;t[r]=u}_takeBackBinding(n){const t=this._bindings,r=n._cacheIndex,i=--this._nActiveBindings,u=t[i];n._cacheIndex=i;t[i]=n;u._cacheIndex=r;t[r]=u}_lendControlInterpolant(){const i=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=i[t];return n===undefined&&(n=new yk(new Float32Array(2),new Float32Array(2),1,okt),n.__cacheIndex=t,i[t]=n),n}_takeBackControlInterpolant(n){const t=this._controlInterpolants,r=n.__cacheIndex,i=--this._nActiveControlInterpolants,u=t[i];n.__cacheIndex=i;t[i]=n;u.__cacheIndex=r;t[r]=u}clipAction(n,t,i){const o=t||this._root,s=o.uuid;let r=typeof n=="string"?ph.findByName(o,n):n;const h=r!==null?r.uuid:n,u=this._actionsByClip[h];let f=null;if(i===undefined&&(i=r!==null?r.blendMode:sc),u!==undefined){const n=u.actionByRoot[s];if(n!==undefined&&n.blendMode===i)return n;f=u.knownActions[0];r===null&&(r=f._clip)}if(r===null)return null;const e=new eot(this,r,t,i);return this._bindAction(e,f),this._addInactiveAction(e,h,s),e}existingAction(n,t){const i=t||this._root,f=i.uuid,r=typeof n=="string"?ph.findByName(i,n):n,e=r?r.uuid:n,u=this._actionsByClip[e];return u!==undefined?u.actionByRoot[f]||null:null}stopAllAction(){const n=this._actions,t=this._nActiveActions;for(let i=t-1;i>=0;--i)n[i].stop();return this}update(n){n*=this.timeScale;const i=this._actions,r=this._nActiveActions,u=this.time+=n,f=Math.sign(n),t=this._accuIndex^=1;for(let e=0;e!==r;++e){const r=i[e];r._update(u,n,f,t)}const e=this._bindings,o=this._nActiveBindings;for(let n=0;n!==o;++n)e[n].apply(t);return this}setTime(n){this.time=0;for(let n=0;n<this._actions.length;n++)this._actions[n].time=0;return this.update(n)}getRoot(){return this._root}uncacheClip(n){const t=this._actions,i=n.uuid,r=this._actionsByClip,u=r[i];if(u!==undefined){const n=u.knownActions;for(let i=0,r=n.length;i!==r;++i){const r=n[i];this._deactivateAction(r);const u=r._cacheIndex,f=t[t.length-1];r._cacheIndex=null;r._byClipCacheIndex=null;f._cacheIndex=u;t[u]=f;t.pop();this._removeInactiveBindingsForAction(r)}delete r[i]}}uncacheRoot(n){const i=n.uuid,r=this._actionsByClip;for(const n in r){const u=r[n].actionByRoot,t=u[i];t!==undefined&&(this._deactivateAction(t),this._removeInactiveAction(t))}const u=this._bindingsByRootAndName,t=u[i];if(t!==undefined)for(const n in t){const i=t[n];i.restoreOriginalState();this._removeInactiveBinding(i)}}uncacheAction(n,t){const i=this.existingAction(n,t);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class oot{constructor(n){this.value=n}clone(){return new oot(this.value.clone===undefined?this.value:this.value.clone())}}let hkt=0;class ckt extends or{constructor(){super();this.isUniformsGroup=!0;Object.defineProperty(this,"id",{value:hkt++});this.name="";this.usage=es;this.uniforms=[]}add(n){return this.uniforms.push(n),this}remove(n){const t=this.uniforms.indexOf(n);return t!==-1&&this.uniforms.splice(t,1),this}setName(n){return this.name=n,this}setUsage(n){return this.usage=n,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(n){this.name=n.name;this.usage=n.usage;const t=n.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return(new this.constructor).copy(this)}}class lkt extends dl{constructor(n,t,i=1){super(n,t);this.isInstancedInterleavedBuffer=!0;this.meshPerAttribute=i}copy(n){return super.copy(n),this.meshPerAttribute=n.meshPerAttribute,this}clone(n){const t=super.clone(n);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(n){const t=super.toJSON(n);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class akt{constructor(n,t,i,r,u){this.isGLBufferAttribute=!0;this.name="";this.buffer=n;this.type=t;this.itemSize=i;this.elementSize=r;this.count=u;this.version=0}set needsUpdate(n){n===!0&&this.version++}setBuffer(n){return this.buffer=n,this}setType(n,t){return this.type=n,this.elementSize=t,this}setItemSize(n){return this.itemSize=n,this}setCount(n){return this.count=n,this}}class vkt{constructor(n,t,i=0,r=Infinity){this.ray=new ce(n,t);this.near=i;this.far=r;this.camera=null;this.layers=new dc;this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(n,t){this.ray.set(n,t)}setFromCamera(n,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(n.x,n.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(n.x,n.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(n,t=true,i=[]){return ud(n,this,i,t),i.sort(sot),i}intersectObjects(n,t=true,i=[]){for(let r=0,u=n.length;r<u;r++)ud(n[r],this,i,t);return i.sort(sot),i}}class ykt{constructor(n=1,t=0,i=0){return this.radius=n,this.phi=t,this.theta=i,this}set(n,t,i){return this.radius=n,this.phi=t,this.theta=i,this}copy(n){return this.radius=n.radius,this.phi=n.phi,this.theta=n.theta,this}makeSafe(){const n=1e-6;return this.phi=Math.max(n,Math.min(Math.PI-n,this.phi)),this}setFromVector3(n){return this.setFromCartesianCoords(n.x,n.y,n.z)}setFromCartesianCoords(n,t,i){return this.radius=Math.sqrt(n*n+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(n,i),this.phi=Math.acos(b(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class pkt{constructor(n=1,t=0,i=0){return this.radius=n,this.theta=t,this.y=i,this}set(n,t,i){return this.radius=n,this.theta=t,this.y=i,this}copy(n){return this.radius=n.radius,this.theta=n.theta,this.y=n.y,this}setFromVector3(n){return this.setFromCartesianCoords(n.x,n.y,n.z)}setFromCartesianCoords(n,t,i){return this.radius=Math.sqrt(n*n+i*i),this.theta=Math.atan2(n,i),this.y=t,this}clone(){return(new this.constructor).copy(this)}}const hot=new i;class wkt{constructor(n=new i(+ Infinity,+ Infinity),t=new i(- Infinity,- Infinity)){this.isBox2=!0;this.min=n;this.max=t}set(n,t){return this.min.copy(n),this.max.copy(t),this}setFromPoints(n){this.makeEmpty();for(let t=0,i=n.length;t<i;t++)this.expandByPoint(n[t]);return this}setFromCenterAndSize(n,t){const i=hot.copy(t).multiplyScalar(.5);return this.min.copy(n).sub(i),this.max.copy(n).add(i),this}clone(){return(new this.constructor).copy(this)}copy(n){return this.min.copy(n.min),this.max.copy(n.max),this}makeEmpty(){return this.min.x=this.min.y=+ Infinity,this.max.x=this.max.y=- Infinity,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(n){return this.isEmpty()?n.set(0,0):n.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(n){return this.isEmpty()?n.set(0,0):n.subVectors(this.max,this.min)}expandByPoint(n){return this.min.min(n),this.max.max(n),this}expandByVector(n){return this.min.sub(n),this.max.add(n),this}expandByScalar(n){return this.min.addScalar(-n),this.max.addScalar(n),this}containsPoint(n){return n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y?!1:!0}containsBox(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y}getParameter(n,t){return t.set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(n){return n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y?!1:!0}clampPoint(n,t){return t.copy(n).clamp(this.min,this.max)}distanceToPoint(n){return this.clampPoint(n,hot).distanceTo(n)}intersect(n){return this.min.max(n.min),this.max.min(n.max),this.isEmpty()&&this.makeEmpty(),this}union(n){return this.min.min(n.min),this.max.max(n.max),this}translate(n){return this.min.add(n),this.max.add(n),this}equals(n){return n.min.equals(this.min)&&n.max.equals(this.max)}}const cot=new t,cv=new t;class bkt{constructor(n=new t,i=new t){this.start=n;this.end=i}set(n,t){return this.start.copy(n),this.end.copy(t),this}copy(n){return this.start.copy(n.start),this.end.copy(n.end),this}getCenter(n){return n.addVectors(this.start,this.end).multiplyScalar(.5)}delta(n){return n.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(n,t){return this.delta(t).multiplyScalar(n).add(this.start)}closestPointToPointParameter(n,t){cot.subVectors(n,this.start);cv.subVectors(this.end,this.start);const r=cv.dot(cv),u=cv.dot(cot);let i=u/r;return t&&(i=b(i,0,1)),i}closestPointToPoint(n,t,i){const r=this.closestPointToPointParameter(n,t);return this.delta(i).multiplyScalar(r).add(this.start)}applyMatrix4(n){return this.start.applyMatrix4(n),this.end.applyMatrix4(n),this}equals(n){return n.start.equals(this.start)&&n.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}const lot=new t;class kkt extends v{constructor(n,t){super();this.light=n;this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;this.color=t;this.type="SpotLightHelper";const i=new l,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let n=0,i=1,t=32;n<t;n++,i++){const u=n/t*Math.PI*2,f=i/t*Math.PI*2;r.push(Math.cos(u),Math.sin(u),1,Math.cos(f),Math.sin(f),1)}i.setAttribute("position",new f(r,3));const u=new pt({fog:!1,toneMapped:!1});this.cone=new ir(i,u);this.add(this.cone);this.update()}dispose(){this.cone.geometry.dispose();this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1);this.light.target.updateWorldMatrix(!0,!1);const n=this.light.distance?this.light.distance:1e3,t=n*Math.tan(this.light.angle);this.cone.scale.set(t,t,n);lot.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(lot);this.color!==undefined?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const yu=new t,lv=new o,fd=new o;class dkt extends ir{constructor(n){const t=aot(n),i=new l,r=[],e=[],o=new u(0,0,1),s=new u(0,1,0);for(let n=0;n<t.length;n++){const i=t[n];i.parent&&i.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),e.push(o.r,o.g,o.b),e.push(s.r,s.g,s.b))}i.setAttribute("position",new f(r,3));i.setAttribute("color",new f(e,3));const h=new pt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,h);this.isSkeletonHelper=!0;this.type="SkeletonHelper";this.root=n;this.bones=t;this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1}updateMatrixWorld(n){const t=this.bones,i=this.geometry,r=i.getAttribute("position");fd.copy(this.root.matrixWorld).invert();for(let n=0,i=0;n<t.length;n++){const u=t[n];u.parent&&u.parent.isBone&&(lv.multiplyMatrices(fd,u.matrixWorld),yu.setFromMatrixPosition(lv),r.setXYZ(i,yu.x,yu.y,yu.z),lv.multiplyMatrices(fd,u.parent.matrixWorld),yu.setFromMatrixPosition(lv),r.setXYZ(i+1,yu.x,yu.y,yu.z),i+=2)}i.getAttribute("position").needsUpdate=!0;super.updateMatrixWorld(n)}dispose(){this.geometry.dispose();this.material.dispose()}}class gkt extends et{constructor(n,t,i){const r=new lh(t,4,2),u=new hu({wireframe:!0,fog:!1,toneMapped:!1});super(r,u);this.light=n;this.color=i;this.type="PointLightHelper";this.matrix=this.light.matrixWorld;this.matrixAutoUpdate=!1;this.update()}dispose(){this.geometry.dispose();this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1);this.color!==undefined?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const ndt=new t,vot=new u,yot=new u;class tdt extends v{constructor(n,t,i){super();this.light=n;this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;this.color=i;this.type="HemisphereLightHelper";const r=new ch(t);r.rotateY(Math.PI*.5);this.material=new hu({wireframe:!0,fog:!1,toneMapped:!1});this.color===undefined&&(this.material.vertexColors=!0);const u=r.getAttribute("position"),f=new Float32Array(u.count*3);r.setAttribute("color",new p(f,3));this.add(new et(r,this.material));this.update()}dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose()}update(){const n=this.children[0];if(this.color!==undefined)this.material.color.set(this.color);else{const t=n.geometry.getAttribute("color");vot.copy(this.light.color);yot.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?vot:yot;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1);n.lookAt(ndt.setFromMatrixPosition(this.light.matrixWorld).negate())}}class idt extends ir{constructor(n=10,t=10,i=4473924,r=8947848){i=new u(i);r=new u(r);const c=t/2,a=n/t,e=n/2,s=[],o=[];for(let f=0,n=0,u=-e;f<=t;f++,u+=a){s.push(-e,0,u,e,0,u);s.push(u,0,-e,u,0,e);const t=f===c?i:r;t.toArray(o,n);n+=3;t.toArray(o,n);n+=3;t.toArray(o,n);n+=3;t.toArray(o,n);n+=3}const h=new l;h.setAttribute("position",new f(s,3));h.setAttribute("color",new f(o,3));const v=new pt({vertexColors:!0,toneMapped:!1});super(h,v);this.type="GridHelper"}dispose(){this.geometry.dispose();this.material.dispose()}}class rdt extends ir{constructor(n=10,t=16,i=8,r=64,e=4473924,o=8947848){e=new u(e);o=new u(o);const s=[],h=[];if(t>1)for(let i=0;i<t;i++){const u=i/t*Math.PI*2,f=Math.sin(u)*n,c=Math.cos(u)*n;s.push(0,0,0);s.push(f,0,c);const r=i&1?e:o;h.push(r.r,r.g,r.b);h.push(r.r,r.g,r.b)}for(let t=0;t<i;t++){const u=t&1?e:o,f=n-n/i*t;for(let n=0;n<r;n++){let t=n/r*Math.PI*2,i=Math.sin(t)*f,e=Math.cos(t)*f;s.push(i,0,e);h.push(u.r,u.g,u.b);t=(n+1)/r*Math.PI*2;i=Math.sin(t)*f;e=Math.cos(t)*f;s.push(i,0,e);h.push(u.r,u.g,u.b)}}const c=new l;c.setAttribute("position",new f(s,3));c.setAttribute("color",new f(h,3));const a=new pt({vertexColors:!0,toneMapped:!1});super(c,a);this.type="PolarGridHelper"}dispose(){this.geometry.dispose();this.material.dispose()}}const pot=new t,av=new t,wot=new t;class udt extends v{constructor(n,t,i){super();this.light=n;this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;this.color=i;this.type="DirectionalLightHelper";t===undefined&&(t=1);let r=new l;r.setAttribute("position",new f([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const u=new pt({fog:!1,toneMapped:!1});this.lightPlane=new lu(r,u);this.add(this.lightPlane);r=new l;r.setAttribute("position",new f([0,0,0,0,0,1],3));this.targetLine=new lu(r,u);this.add(this.targetLine);this.update()}dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1);this.light.target.updateWorldMatrix(!0,!1);pot.setFromMatrixPosition(this.light.matrixWorld);av.setFromMatrixPosition(this.light.target.matrixWorld);wot.subVectors(av,pot);this.lightPlane.lookAt(av);this.color!==undefined?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color));this.targetLine.lookAt(av);this.targetLine.scale.z=wot.length()}}const vv=new t,k=new ll;class fdt extends ir{constructor(n){function t(n,t){s(n);s(t)}function s(n){e.push(0,0,0);o.push(0,0,0);i[n]===undefined&&(i[n]=[]);i[n].push(e.length/3-1)}const r=new l,h=new pt({color:16777215,vertexColors:!0,toneMapped:!1}),e=[],o=[],i={};t("n1","n2");t("n2","n4");t("n4","n3");t("n3","n1");t("f1","f2");t("f2","f4");t("f4","f3");t("f3","f1");t("n1","f1");t("n2","f2");t("n3","f3");t("n4","f4");t("p","n1");t("p","n2");t("p","n3");t("p","n4");t("u1","u2");t("u2","u3");t("u3","u1");t("c","t");t("p","c");t("cn1","cn2");t("cn3","cn4");t("cf1","cf2");t("cf3","cf4");r.setAttribute("position",new f(e,3));r.setAttribute("color",new f(o,3));super(r,h);this.type="CameraHelper";this.camera=n;this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix();this.matrix=n.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=i;this.update();const c=new u(16755200),a=new u(16711680),v=new u(43775),y=new u(16777215),p=new u(3355443);this.setColors(c,a,v,y,p)}setColors(n,t,i,r,u){const e=this.geometry,f=e.getAttribute("color");f.setXYZ(0,n.r,n.g,n.b);f.setXYZ(1,n.r,n.g,n.b);f.setXYZ(2,n.r,n.g,n.b);f.setXYZ(3,n.r,n.g,n.b);f.setXYZ(4,n.r,n.g,n.b);f.setXYZ(5,n.r,n.g,n.b);f.setXYZ(6,n.r,n.g,n.b);f.setXYZ(7,n.r,n.g,n.b);f.setXYZ(8,n.r,n.g,n.b);f.setXYZ(9,n.r,n.g,n.b);f.setXYZ(10,n.r,n.g,n.b);f.setXYZ(11,n.r,n.g,n.b);f.setXYZ(12,n.r,n.g,n.b);f.setXYZ(13,n.r,n.g,n.b);f.setXYZ(14,n.r,n.g,n.b);f.setXYZ(15,n.r,n.g,n.b);f.setXYZ(16,n.r,n.g,n.b);f.setXYZ(17,n.r,n.g,n.b);f.setXYZ(18,n.r,n.g,n.b);f.setXYZ(19,n.r,n.g,n.b);f.setXYZ(20,n.r,n.g,n.b);f.setXYZ(21,n.r,n.g,n.b);f.setXYZ(22,n.r,n.g,n.b);f.setXYZ(23,n.r,n.g,n.b);f.setXYZ(24,t.r,t.g,t.b);f.setXYZ(25,t.r,t.g,t.b);f.setXYZ(26,t.r,t.g,t.b);f.setXYZ(27,t.r,t.g,t.b);f.setXYZ(28,t.r,t.g,t.b);f.setXYZ(29,t.r,t.g,t.b);f.setXYZ(30,t.r,t.g,t.b);f.setXYZ(31,t.r,t.g,t.b);f.setXYZ(32,i.r,i.g,i.b);f.setXYZ(33,i.r,i.g,i.b);f.setXYZ(34,i.r,i.g,i.b);f.setXYZ(35,i.r,i.g,i.b);f.setXYZ(36,i.r,i.g,i.b);f.setXYZ(37,i.r,i.g,i.b);f.setXYZ(38,r.r,r.g,r.b);f.setXYZ(39,r.r,r.g,r.b);f.setXYZ(40,u.r,u.g,u.b);f.setXYZ(41,u.r,u.g,u.b);f.setXYZ(42,u.r,u.g,u.b);f.setXYZ(43,u.r,u.g,u.b);f.setXYZ(44,u.r,u.g,u.b);f.setXYZ(45,u.r,u.g,u.b);f.setXYZ(46,u.r,u.g,u.b);f.setXYZ(47,u.r,u.g,u.b);f.setXYZ(48,u.r,u.g,u.b);f.setXYZ(49,u.r,u.g,u.b);f.needsUpdate=!0}update(){const n=this.geometry,t=this.pointMap,r=1,i=1;k.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);nt("c",t,n,k,0,0,-1);nt("t",t,n,k,0,0,1);nt("n1",t,n,k,-r,-i,-1);nt("n2",t,n,k,r,-i,-1);nt("n3",t,n,k,-r,i,-1);nt("n4",t,n,k,r,i,-1);nt("f1",t,n,k,-r,-i,1);nt("f2",t,n,k,r,-i,1);nt("f3",t,n,k,-r,i,1);nt("f4",t,n,k,r,i,1);nt("u1",t,n,k,r*.7,i*1.1,-1);nt("u2",t,n,k,-r*.7,i*1.1,-1);nt("u3",t,n,k,0,i*2,-1);nt("cf1",t,n,k,-r,0,1);nt("cf2",t,n,k,r,0,1);nt("cf3",t,n,k,0,-i,1);nt("cf4",t,n,k,0,i,1);nt("cn1",t,n,k,-r,0,-1);nt("cn2",t,n,k,r,0,-1);nt("cn3",t,n,k,0,-i,-1);nt("cn4",t,n,k,0,i,-1);n.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose();this.material.dispose()}}const yv=new nr;class edt extends ir{constructor(n,t=16776960){const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),u=new Float32Array(24),i=new l;i.setIndex(new p(r,1));i.setAttribute("position",new p(u,3));super(i,new pt({color:t,toneMapped:!1}));this.object=n;this.type="BoxHelper";this.matrixAutoUpdate=!1;this.update()}update(n){if(n!==undefined&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==undefined&&yv.setFromObject(this.object),!yv.isEmpty()){const i=yv.min,r=yv.max,u=this.geometry.attributes.position,t=u.array;t[0]=r.x;t[1]=r.y;t[2]=r.z;t[3]=i.x;t[4]=r.y;t[5]=r.z;t[6]=i.x;t[7]=i.y;t[8]=r.z;t[9]=r.x;t[10]=i.y;t[11]=r.z;t[12]=r.x;t[13]=r.y;t[14]=i.z;t[15]=i.x;t[16]=r.y;t[17]=i.z;t[18]=i.x;t[19]=i.y;t[20]=i.z;t[21]=r.x;t[22]=i.y;t[23]=i.z;u.needsUpdate=!0;this.geometry.computeBoundingSphere()}}setFromObject(n){return this.object=n,this.update(),this}copy(n,t){return super.copy(n,t),this.object=n.object,this}dispose(){this.geometry.dispose();this.material.dispose()}}class odt extends ir{constructor(n,t=16776960){const r=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new l;i.setIndex(new p(r,1));i.setAttribute("position",new f([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3));super(i,new pt({color:t,toneMapped:!1}));this.box=n;this.type="Box3Helper";this.geometry.computeBoundingSphere()}updateMatrixWorld(n){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(n))}dispose(){this.geometry.dispose();this.material.dispose()}}class sdt extends lu{constructor(n,t=1,i=16776960){const e=i,r=new l;r.setAttribute("position",new f([1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],3));r.computeBoundingSphere();super(r,new pt({color:e,toneMapped:!1}));this.type="PlaneHelper";this.plane=n;this.size=t;const u=new l;u.setAttribute("position",new f([1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],3));u.computeBoundingSphere();this.add(new et(u,new hu({color:e,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(n){this.position.set(0,0,0);this.scale.set(.5*this.size,.5*this.size,1);this.lookAt(this.plane.normal);this.translateZ(-this.plane.constant);super.updateMatrixWorld(n)}dispose(){this.geometry.dispose();this.material.dispose();this.children[0].geometry.dispose();this.children[0].material.dispose()}}const bot=new t;let pv,ed;class hdt extends v{constructor(n=new t(0,0,1),i=new t(0,0,0),r=1,u=16776960,e=r*.2,o=e*.2){super();this.type="ArrowHelper";pv===undefined&&(pv=new l,pv.setAttribute("position",new f([0,0,0,0,1,0],3)),ed=new yo(0,.5,1,5,1),ed.translate(0,-.5,0));this.position.copy(i);this.line=new lu(pv,new pt({color:u,toneMapped:!1}));this.line.matrixAutoUpdate=!1;this.add(this.line);this.cone=new et(ed,new hu({color:u,toneMapped:!1}));this.cone.matrixAutoUpdate=!1;this.add(this.cone);this.setDirection(n);this.setLength(r,e,o)}setDirection(n){if(n.y>.99999)this.quaternion.set(0,0,0,1);else if(n.y<-.99999)this.quaternion.set(1,0,0,0);else{bot.set(n.z,0,-n.x).normalize();const t=Math.acos(n.y);this.quaternion.setFromAxisAngle(bot,t)}}setLength(n,t=n*.2,i=t*.2){this.line.scale.set(1,Math.max(.0001,n-t),1);this.line.updateMatrix();this.cone.scale.set(i,t,i);this.cone.position.y=n;this.cone.updateMatrix()}setColor(n){this.line.material.color.set(n);this.cone.material.color.set(n)}copy(n){return super.copy(n,!1),this.line.copy(n.line),this.cone.copy(n.cone),this}dispose(){this.line.geometry.dispose();this.line.material.dispose();this.cone.geometry.dispose();this.cone.material.dispose()}}class cdt extends ir{constructor(n=1){const i=[0,0,0,n,0,0,0,0,0,0,n,0,0,0,0,0,0,n],t=new l;t.setAttribute("position",new f(i,3));t.setAttribute("color",new f([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));const r=new pt({vertexColors:!0,toneMapped:!1});super(t,r);this.type="AxesHelper"}setColors(n,t,i){const r=new u,f=this.geometry.attributes.color.array;return r.set(n),r.toArray(f,0),r.toArray(f,3),r.set(t),r.toArray(f,6),r.toArray(f,9),r.set(i),r.toArray(f,12),r.toArray(f,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose();this.material.dispose()}}class ldt{constructor(){this.type="ShapePath";this.color=new u;this.subPaths=[];this.currentPath=null}moveTo(n,t){return this.currentPath=new fh,this.subPaths.push(this.currentPath),this.currentPath.moveTo(n,t),this}lineTo(n,t){return this.currentPath.lineTo(n,t),this}quadraticCurveTo(n,t,i,r){return this.currentPath.quadraticCurveTo(n,t,i,r),this}bezierCurveTo(n,t,i,r,u,f){return this.currentPath.bezierCurveTo(n,t,i,r,u,f),this}splineThru(n){return this.currentPath.splineThru(n),this}toShapes(n){function y(n){const t=[];for(let i=0,r=n.length;i<r;i++){const u=n[i],r=new cf;r.curves=u.curves;t.push(r)}return t}function p(n,t){const r=t.length;let i=!1;for(let f=r-1,u=0;u<r;f=u++){let r=t[f],e=t[u],s=e.x-r.x,o=e.y-r.y;if(Math.abs(o)>Number.EPSILON){if(o<0&&(r=t[u],s=-s,e=t[f],o=-o),n.y<r.y||n.y>e.y)continue;if(n.y===r.y){if(n.x===r.x)return!0}else{const t=o*(n.x-r.x)-s*(n.y-r.y);if(t===0)return!0;if(t<0)continue;i=!i}}else{if(n.y!==r.y)continue;if(e.x<=n.x&&n.x<=r.x||r.x<=n.x&&n.x<=e.x)return!0}}return i}const v=pr.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,u,f;const h=[];if(r.length===1)return u=r[0],f=new cf,f.curves=u.curves,h.push(f),h;let s=!v(r[0].getPoints());s=n?!s:s;const c=[],t=[];let e=[],i=0,l;t[i]=undefined;e[i]=[];for(let f=0,h=r.length;f<h;f++)u=r[f],l=u.getPoints(),o=v(l),o=n?!o:o,o?(!s&&t[i]&&i++,t[i]={s:new cf,p:l},t[i].s.curves=u.curves,s&&i++,e[i]=[]):e[i].push({h:u,p:l[0]});if(!t[0])return y(r);if(t.length>1){let n=!1,i=0;for(let n=0,i=t.length;n<i;n++)c[n]=[];for(let r=0,u=t.length;r<u;r++){const u=e[r];for(let f=0;f<u.length;f++){const e=u[f];let o=!0;for(let u=0;u<t.length;u++)p(e.p,t[u].p)&&(r!==u&&i++,o?(o=!1,c[u].push(e)):n=!0);o&&c[r].push(e)}}i>0&&n===!1&&(e=c)}let a;for(let n=0,i=t.length;n<i;n++){f=t[n].s;h.push(f);a=e[n];for(let n=0,t=a.length;n<t;n++)f.holes.push(a[n].h)}return h}}class adt extends ff{constructor(n,t,i,r,u,f){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry.");super(n,t,i,r,u,f)}}class vdt extends la{constructor(n,t,i,r){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry.");super(n,t,i,r)}}class ydt extends aa{constructor(n,t,i,r){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry.");super(n,t,i,r)}}class pdt extends va{constructor(n,t,i,r,u,f,e){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry.");super(n,t,i,r,u,f,e)}}class wdt extends yo{constructor(n,t,i,r,u,f,e,o){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry.");super(n,t,i,r,u,f,e,o)}}class bdt extends ya{constructor(n,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry.");super(n,t)}}class kdt extends nv{constructor(n,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry.");super(n,t)}}class ddt extends tv{constructor(n,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry.");super(n,t)}}class gdt extends eh{constructor(n,t,i,r){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry.");super(n,t,i,r)}}class ngt extends ch{constructor(n,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry.");super(n,t)}}class tgt extends bs{constructor(n,t,i,r){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry.");super(n,t,i,r)}}class igt extends au{constructor(n,t,i,r){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry.");super(n,t,i,r)}}class rgt extends iv{constructor(n,t,i,r,u,f){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry.");super(n,t,i,r,u,f)}}class ugt extends rv{constructor(n,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry.");super(n,t)}}class fgt extends lh{constructor(n,t,i,r,u,f,e){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry.");super(n,t,i,r,u,f,e)}}class egt extends uv{constructor(n,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry.");super(n,t)}}class ogt extends fv{constructor(n,t,i,r,u){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry.");super(n,t,i,r,u)}}class sgt extends ev{constructor(n,t,i,r,u,f){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry.");super(n,t,i,r,u,f)}}class hgt extends ov{constructor(n,t,i,r,u){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry.");super(n,t,i,r,u)}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:kh}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=kh);n.ACESFilmicToneMapping=vg;n.AddEquation=wu;n.AddOperation=hg;n.AdditiveAnimationBlendMode=vp;n.AdditiveBlending=kv;n.AlphaFormat=bg;n.AlwaysCompare=kn;n.AlwaysDepth=ig;n.AlwaysStencilFunc=cn;n.AmbientLight=aet;n.AmbientLightProbe=lbt;n.AnimationAction=eot;n.AnimationClip=ph;n.AnimationLoader=dwt;n.AnimationMixer=skt;n.AnimationObjectGroup=ekt;n.AnimationUtils=pwt;n.ArcCurve=but;n.ArrayCamera=srt;n.ArrowHelper=hdt;n.Audio=rot;n.AudioAnalyser=bbt;n.AudioContext=td;n.AudioListener=ybt;n.AudioLoader=hbt;n.AxesHelper=cdt;n.BackSide=at;n.BasicDepthPacking=on;n.BasicShadowMap=0;n.Bone=vb;n.BooleanKeyframeTrack=vf;n.Box2=wkt;n.Box3=nr;n.Box3Helper=odt;n.BoxBufferGeometry=adt;n.BoxGeometry=ff;n.BoxHelper=edt;n.BufferAttribute=p;n.BufferGeometry=l;n.BufferGeometryLoader=wet;n.ByteType=pg;n.Cache=pf;n.Camera=ll;n.CameraHelper=fdt;n.CanvasTexture=ept;n.CapsuleBufferGeometry=vdt;n.CapsuleGeometry=la;n.CatmullRomCurve3=kut;n.CineonToneMapping=ag;n.CircleBufferGeometry=ydt;n.CircleGeometry=aa;n.ClampToEdgeWrapping=st;n.Clock=not;n.Color=u;n.ColorKeyframeTrack=pk;n.ColorManagement=ui;n.CompressedArrayTexture=fpt;n.CompressedTexture=kb;n.CompressedTextureLoader=gwt;n.ConeBufferGeometry=pdt;n.ConeGeometry=va;n.CubeCamera=nit;n.CubeReflectionMapping=kr;n.CubeRefractionMapping=dr;n.CubeTexture=ws;n.CubeTextureLoader=nbt;n.CubeUVReflectionMapping=ne;n.CubicBezierCurve=ik;n.CubicBezierCurve3=gut;n.CubicInterpolant=net;n.CullFaceBack=wv;n.CullFaceFront=sd;n.CullFaceFrontBack=3;n.CullFaceNone=od;n.Curve=yi;n.CurvePath=tft;n.CustomBlending=cd;n.CustomToneMapping=yg;n.CylinderBufferGeometry=wdt;n.CylinderGeometry=yo;n.Cylindrical=pkt;n.Data3DTexture=iw;n.DataArrayTexture=ac;n.DataTexture=lo;n.DataTextureLoader=tbt;n.DataUtils=lht;n.DecrementStencilOp=7683;n.DecrementWrapStencilOp=34056;n.DefaultLoadingManager=ret;n.DepthFormat=tu;n.DepthStencilFormat=bu;n.DepthTexture=hrt;n.DirectionalLight=cet;n.DirectionalLightHelper=udt;n.DiscreteInterpolant=tet;n.DisplayP3ColorSpace=pp;n.DodecahedronBufferGeometry=bdt;n.DodecahedronGeometry=ya;n.DoubleSide=bi;n.DstAlphaFactor=bd;n.DstColorFactor=dd;n.DynamicCopyUsage=35050;n.DynamicDrawUsage=35048;n.DynamicReadUsage=35049;n.EdgesGeometry=ift;n.EllipseCurve=oa;n.EqualCompare=vn;n.EqualDepth=ug;n.EqualStencilFunc=514;n.EquirectangularReflectionMapping=ko;n.EquirectangularRefractionMapping=go;n.Euler=kc;n.EventDispatcher=or;n.ExtrudeBufferGeometry=kdt;n.ExtrudeGeometry=nv;n.FileLoader=br;n.Float16BufferAttribute=bht;n.Float32BufferAttribute=f;n.Float64BufferAttribute=kht;n.FloatType=di;n.Fog=sb;n.FogExp2=ob;n.FramebufferTexture=upt;n.FrontSide=rr;n.Frustum=vl;n.GLBufferAttribute=akt;n.GLSL1="100";n.GLSL3=wp;n.GreaterCompare=pn;n.GreaterDepth=eg;n.GreaterEqualCompare=bn;n.GreaterEqualDepth=fg;n.GreaterEqualStencilFunc=518;n.GreaterStencilFunc=516;n.GridHelper=idt;n.Group=uo;n.HalfFloatType=te;n.HemisphereLight=uet;n.HemisphereLightHelper=tdt;n.HemisphereLightProbe=cbt;n.IcosahedronBufferGeometry=ddt;n.IcosahedronGeometry=tv;n.ImageBitmapLoader=sbt;n.ImageLoader=wh;n.ImageUtils=nw;n.IncrementStencilOp=7682;n.IncrementWrapStencilOp=34055;n.InstancedBufferAttribute=ao;n.InstancedBufferGeometry=pet;n.InstancedInterleavedBuffer=lkt;n.InstancedMesh=out;n.Int16BufferAttribute=pht;n.Int32BufferAttribute=wht;n.Int8BufferAttribute=aht;n.IntType=fy;n.InterleavedBuffer=dl;n.InterleavedBufferAttribute=fo;n.Interpolant=ah;n.InterpolateDiscrete=rs;n.InterpolateLinear=us;n.InterpolateSmooth=oc;n.InvertStencilOp=5386;n.KeepStencilOp=hc;n.KeyframeTrack=pi;n.LOD=krt;n.LatheBufferGeometry=gdt;n.LatheGeometry=eh;n.Layers=dc;n.LessCompare=an;n.LessDepth=rg;n.LessEqualCompare=yn;n.LessEqualDepth=dh;n.LessEqualStencilFunc=515;n.LessStencilFunc=513;n.Light=vu;n.LightProbe=sv;n.Line=lu;n.Line3=bkt;n.LineBasicMaterial=pt;n.LineCurve=ha;n.LineCurve3=nft;n.LineDashedMaterial=dft;n.LineLoop=vut;n.LineSegments=ir;n.LinearEncoding=yp;n.LinearFilter=g;n.LinearInterpolant=yk;n.LinearMipMapLinearFilter=1008;n.LinearMipMapNearestFilter=1007;n.LinearMipmapLinearFilter=gr;n.LinearMipmapNearestFilter=uy;n.LinearSRGBColorSpace=oi;n.LinearToneMapping=cg;n.Loader=ri;n.LoaderUtils=nd;n.LoadingManager=wk;n.LoopOnce=un;n.LoopPingPong=en;n.LoopRepeat=fn;n.LuminanceAlphaFormat=dg;n.LuminanceFormat=kg;n.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};n.Material=ct;n.MaterialLoader=gk;n.MathUtils=cst;n.Matrix3=c;n.Matrix4=o;n.MaxEquation=ty;n.Mesh=et;n.MeshBasicMaterial=hu;n.MeshDepthMaterial=ub;n.MeshDistanceMaterial=fb;n.MeshLambertMaterial=bft;n.MeshMatcapMaterial=kft;n.MeshNormalMaterial=wft;n.MeshPhongMaterial=yft;n.MeshPhysicalMaterial=vft;n.MeshStandardMaterial=ck;n.MeshToonMaterial=pft;n.MinEquation=ny;n.MirroredRepeatWrapping=ts;n.MixOperation=sg;n.MultiplyBlending=gv;n.MultiplyOperation=bo;n.NearestFilter=d;n.NearestMipMapLinearFilter=1005;n.NearestMipMapNearestFilter=1004;n.NearestMipmapLinearFilter=is;n.NearestMipmapNearestFilter=nc;n.NeverCompare=ln;n.NeverDepth=tg;n.NeverStencilFunc=512;n.NoBlending=ur;n.NoColorSpace=uu;n.NoToneMapping=ki;n.NormalAnimationBlendMode=sc;n.NormalBlending=pu;n.NotEqualCompare=wn;n.NotEqualDepth=og;n.NotEqualStencilFunc=517;n.NumberKeyframeTrack=vh;n.Object3D=v;n.ObjectLoader=ebt;n.ObjectSpaceNormalMap=hn;n.OctahedronBufferGeometry=ngt;n.OctahedronGeometry=ch;n.OneFactor=yd;n.OneMinusDstAlphaFactor=kd;n.OneMinusDstColorFactor=gd;n.OneMinusSrcAlphaFactor=ry;n.OneMinusSrcColorFactor=wd;n.OrthographicCamera=pl;n.PCFShadowMap=bv;n.PCFSoftShadowMap=hd;n.PMREMGenerator=nb;n.Path=fh;n.PerspectiveCamera=ot;n.Plane=cu;n.PlaneBufferGeometry=tgt;n.PlaneGeometry=bs;n.PlaneHelper=sdt;n.PointLight=het;n.PointLightHelper=gkt;n.Points=put;n.PointsMaterial=wb;n.PolarGridHelper=rdt;n.PolyhedronBufferGeometry=igt;n.PolyhedronGeometry=au;n.PositionalAudio=wbt;n.PropertyBinding=a;n.PropertyMixer=fot;n.QuadraticBezierCurve=rk;n.QuadraticBezierCurve3=uk;n.Quaternion=wt;n.QuaternionKeyframeTrack=wo;n.QuaternionLinearInterpolant=iet;n.RED_GREEN_RGTC2_Format=lp;n.RED_RGTC1_Format=rn;n.REVISION=kh;n.RGBADepthPacking=sn;n.RGBAFormat=kt;n.RGBAIntegerFormat=cy;n.RGBA_ASTC_10x10_Format=op;n.RGBA_ASTC_10x5_Format=up;n.RGBA_ASTC_10x6_Format=fp;n.RGBA_ASTC_10x8_Format=ep;n.RGBA_ASTC_12x10_Format=sp;n.RGBA_ASTC_12x12_Format=hp;n.RGBA_ASTC_4x4_Format=by;n.RGBA_ASTC_5x4_Format=ky;n.RGBA_ASTC_5x5_Format=dy;n.RGBA_ASTC_6x5_Format=gy;n.RGBA_ASTC_6x6_Format=np;n.RGBA_ASTC_8x5_Format=tp;n.RGBA_ASTC_8x6_Format=ip;n.RGBA_ASTC_8x8_Format=rp;n.RGBA_BPTC_Format=ec;n.RGBA_ETC2_EAC_Format=wy;n.RGBA_PVRTC_2BPPV1_Format=yy;n.RGBA_PVRTC_4BPPV1_Format=vy;n.RGBA_S3TC_DXT1_Format=rc;n.RGBA_S3TC_DXT3_Format=uc;n.RGBA_S3TC_DXT5_Format=fc;n.RGB_ETC1_Format=tn;n.RGB_ETC2_Format=py;n.RGB_PVRTC_2BPPV1_Format=ay;n.RGB_PVRTC_4BPPV1_Format=ly;n.RGB_S3TC_DXT1_Format=ic;n.RGFormat=nn;n.RGIntegerFormat=hy;n.RawShaderMaterial=aft;n.Ray=ce;n.Raycaster=vkt;n.RectAreaLight=vet;n.RedFormat=gg;n.RedIntegerFormat=sy;n.ReinhardToneMapping=lg;n.RepeatWrapping=ns;n.ReplaceStencilOp=7681;n.ReverseSubtractEquation=ad;n.RingBufferGeometry=rgt;n.RingGeometry=iv;n.SIGNED_RED_GREEN_RGTC2_Format=ap;n.SIGNED_RED_RGTC1_Format=cp;n.SRGBColorSpace=e;n.Scene=art;n.ShaderChunk=h;n.ShaderLib=vi;n.ShaderMaterial=tr;n.ShadowMaterial=lft;n.Shape=cf;n.ShapeBufferGeometry=ugt;n.ShapeGeometry=rv;n.ShapePath=ldt;n.ShapeUtils=pr;n.ShortType=wg;n.Skeleton=yb;n.SkeletonHelper=dkt;n.SkinnedMesh=rut;n.Source=nf;n.Sphere=hi;n.SphereBufferGeometry=fgt;n.SphereGeometry=lh;n.Spherical=ykt;n.SphericalHarmonics3=yet;n.SplineCurve=fk;n.SpotLight=oet;n.SpotLightHelper=kkt;n.Sprite=wrt;n.SpriteMaterial=hb;n.SrcAlphaFactor=iy;n.SrcAlphaSaturateFactor=ng;n.SrcColorFactor=pd;n.StaticCopyUsage=35046;n.StaticDrawUsage=es;n.StaticReadUsage=35045;n.StereoCamera=abt;n.StreamCopyUsage=35042;n.StreamDrawUsage=35040;n.StreamReadUsage=35041;n.StringKeyframeTrack=yf;n.SubtractEquation=ld;n.SubtractiveBlending=dv;n.TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};n.TangentSpaceNormalMap=ru;n.TetrahedronBufferGeometry=egt;n.TetrahedronGeometry=uv;n.Texture=tt;n.TextureLoader=ibt;n.TorusBufferGeometry=ogt;n.TorusGeometry=fv;n.TorusKnotBufferGeometry=sgt;n.TorusKnotGeometry=ev;n.Triangle=ti;n.TriangleFanDrawMode=2;n.TriangleStripDrawMode=1;n.TrianglesDrawMode=0;n.TubeBufferGeometry=hgt;n.TubeGeometry=ov;n.TwoPassDoubleSide=2;n.UVMapping=gh;n.Uint16BufferAttribute=yw;n.Uint32BufferAttribute=pw;n.Uint8BufferAttribute=vht;n.Uint8ClampedBufferAttribute=yht;n.Uniform=oot;n.UniformsGroup=ckt;n.UniformsLib=r;n.UniformsUtils=ktt;n.UnsignedByteType=fr;n.UnsignedInt248Type=nu;n.UnsignedIntType=er;n.UnsignedShort4444Type=ey;n.UnsignedShort5551Type=oy;n.UnsignedShortType=tc;n.VSMShadowMap=wi;n.Vector2=i;n.Vector3=t;n.Vector4=y;n.VectorKeyframeTrack=yh;n.VideoTexture=rpt;n.WebGL1Renderer=lrt;n.WebGL3DRenderTarget=nht;n.WebGLArrayRenderTarget=gst;n.WebGLCoordinateSystem=gi;n.WebGLCubeRenderTarget=tit;n.WebGLMultipleRenderTargets=tht;n.WebGLRenderTarget=si;n.WebGLRenderer=crt;n.WebGLUtils=ort;n.WebGPUCoordinateSystem=os;n.WireframeGeometry=hft;n.WrapAroundEnding=fs;n.ZeroCurvatureEnding=ku;n.ZeroFactor=vd;n.ZeroSlopeEnding=du;n.ZeroStencilOp=0;n._SRGBAFormat=cc;n.sRGBEncoding=iu});